{"version":3,"sources":["components/layout/PageLayout.jsx","pages/main/NestedUserPage.jsx","assets/images/icon/logo.svg","components/layout/ContainerColOne.jsx","components/forms/InputGroup.jsx","api/auth.js","components/context/AuthContext.jsx","components/forms/LoginForm.jsx","pages/LoginPage.jsx","components/basic/Tab.jsx","pages/storybooks/StoryBookPage.jsx","components/basic/SecLeftNev.jsx","components/layout/ContainerColSec.jsx","pages/AdminPage.jsx","components/forms/SettingForm.jsx","assets/images/icon/back.svg","components/basic/Header.jsx","pages/SettingPage.jsx","api/twitter.js","assets/images/icon/avatar.svg","components/basic/UserAvatar.jsx","components/basic/TweetUserName2.jsx","components/basic/FollowCard.jsx","components/user/FollowCardList.jsx","helper/TimeHelper.jsx","components/basic/TweetUserName3.jsx","components/basic/TweetCardReply.jsx","components/user/ReplyLists.jsx","assets/images/icon/like-filled.svg","assets/images/icon/reply.svg","assets/images/icon/like.svg","components/basic/TweetIconCount.jsx","components/basic/TweetCardBasic.jsx","components/user/TweetsLists.jsx","components/basic/TweetCardLike.jsx","components/user/LikeLists.jsx","assets/images/bk.jpg","components/basic/UserBk.jsx","assets/images/icon/message.svg","assets/images/icon/notice.svg","components/basic/ProfileCard.jsx","api/userinfo.js","pages/UserPage.jsx","components/basic/ProfileOtherCard.jsx","pages/UserOtherPage.jsx","pages/UserFollowersPage.jsx","components/forms/TweetCardForm.jsx","assets/images/avatar1.jpg","pages/MainPage.jsx","assets/images/icon/post.svg","components/basic/ProfileMiniCard.jsx","api/admin.js","pages/AdminUsers.jsx","components/basic/ModalContent.jsx","assets/images/icon/close.svg","components/basic/ModalHeader.jsx","assets/images/icon/addphoto.svg","components/basic/Modal.jsx","components/basic/ModalTweet.jsx","components/basic/TweetBigCard.jsx","pages/TweetPage.jsx","components/forms/RegisterForm.jsx","pages/RegisterPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageLayout","_ref","children","_jsx","_Fragment","className","NestedUserPage","ContainerColOne","InputGroup","_errors$name","_errors$name2","_errors$name3","_errors$name4","_errors$name5","_errors$name6","name","label","type","placeholder","errors","register","maxLength","validationSchema","watch","_jsxs","_objectSpread","message","length","login","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","account","password","_yield$axios$post","data","wrap","_context","prev","next","axios","post","concat","sent","token","abrupt","success","t0","console","error","stop","_x","apply","arguments","defaultAuthContext","isAuthentic","currentMember","logout","AuthContext","createContext","useAuth","useContext","AuthProvider","_useState","useState","_useState2","_slicedToArray","isAuthentical","setIsAuthentical","_useState3","_useState4","payload","setPayload","pathname","useLocation","useEffect","checkTokenIsValid","authToken","tempPayload","localStorage","getItem","jwt","Provider","value","id","avatar","_login2","_callee2","user","_yield$_login","_context2","log","setItem","_logout","_callee3","_context3","removeItem","LoginForm","_useForm","useForm","handleSubmit","reset","formState","_useAuth","navigate","useNavigate","onSubmit","username","required","minLength","Link","to","LoginPage","navigation","src","iconLogo","alt","TabThreeGroup","tabIndex","setTabIndex","join","onClick","TabTwoGroup","pathName","LayoutNav","SecLeftNav","role","setModalTweetOpen","pageIndex","memberId","ContainerColSec","AdminPage","SettingForm","pattern","HeaderMain","pageTitle","HeaderUser","userAccountName","userTweetsLength","iconBack","SettingPage","baseUrl","axiosInstance","create","interceptors","request","use","config","headers","getTweets","res","get","getTopUsers","getTweet","_ref3","pathId","getUserTweets","_ref4","_callee4","_context4","_x2","getUserLikedTweets","_ref5","_callee5","_context5","_x3","UserAvatar","userId","e","stopPropagation","Defaultavatar","TweetUserName2","FollowCard","props","Object","assign","_objectDestructuringEmpty","clsx","active","isFollowing","FollowCardList","users","setUsers","getUsersAsync","map","DayTime","a","dayjs","extend","relativeTime","locale","subtract","anHourAgo","fromNow","timeFromNow","TweetUserName3","time","TweetCardReply","userAvatar","userName","userAccount","description","ReplyLists","tweets","tweet","TweetIconCount","likesCount","repliesCount","isLiked","reply","likefilled","like","TweetCardBasic","_props$onClick","call","tweetId","User","UserId","_props$onClick2","createdAt","TweetsLists","TweetCardLike","Tweet","LikeLists","userLiked","setUserLiked","getUserLikedTweetsAsync","UserBk","bkUrl","DefaultBk","ProfileCard","introduction","banner","followersCount","followingsCount","setModalProOpen","iconMessage","iconNotice","getUserInfo","UserPage","Number","useParams","userInfo","setUserInfo","_useState5","_useState6","userTweets","setUserTweets","getUserInfoAsync","_userInfo","getUserTweetsAsync","switchContext","ProfileOtherCard","UserOtherPage","UserFollowersPage","TweetCardForm","alert","tweetarea","MainPage","setTweets","profile","setProfile","_profile","getTweetsAsync","TweetLists","ProfileMiniCard","handleClickCard","iconPost","iconLike","getAllUsers","AdminUsers","allUsers","setAllUsers","getAllUserAsync","_allUsers","allUser","ModalContent","ModalHeader","iconClose","ModalHeaderIcon","Modal","uploadedImage","useRef","imageUploader","imageUploader_bk","imageNewUrl","setImageNewUrl","imageNewUrl_bk","setImageNewUrl_bk","handleImageUpload","target","curr_target","file","files","reader","FileReader","current","onload","result","readAsDataURL","iconCamera","ref","click","accept","onChange","ModalTweet","TweetBigCard","tweetInfo","TweetPage","setTweetInfo","getTweetAsync","RegisterForm","RegisterPage","App","router","modalProOpen","modalTweetOpen","HashRouter","Routes","Route","path","element","StoryBookPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.5e508a3d.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageLayout = ({ children }) => {\n  return (\n    <>\n      <div className='container-fluid'>\n        <div className='wrapper'>{children}</div>\n      </div>\n    </>\n  );\n};\n\nexport default PageLayout;\n","import React from 'react';\n\nconst NestedUserPage = () => {\n  return (\n    <div className='container-fluid'>\n      <h1>NestedUserPage l2 Page</h1>\n    </div>\n  );\n};\n\nexport default NestedUserPage;\n","export default __webpack_public_path__ + \"static/media/logo.89093620.svg\";","import React from 'react';\n\nconst ContainerColOne = ({ children }) => {\n  return (\n    <>\n      {/* <div className='row'> */}\n      <main className='container_one col-12'>{children}</main>\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default ContainerColOne;\n","import React from 'react';\n\nconst InputGroup = ({\n  name,\n  label,\n  type,\n  placeholder,\n  errors,\n  register,\n  maxLength,\n  // required,\n  validationSchema,\n  watch,\n}) => {\n  return (\n    <>\n      {' '}\n      <div className='input_group'>\n        <label>{label}</label>\n        <input\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          {...register(name, validationSchema)}\n          maxLength={maxLength || null}\n        />\n      </div>\n      <div className='error-message-group'>\n        {errors && errors[name]?.type === 'required' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n        {errors && errors[name]?.type === 'minLength' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n        {errors && errors[name]?.type === 'pattern' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n\n        {/* <span className='limit-num'>15/50</span> */}\n        <span className='limit-num'>\n          {watch(name) ? watch(name).length : '0'}/50\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default InputGroup;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3004';\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nexport const login = async ({ account, password }) => {\n  try {\n    const { data } = await axios.post(`${baseUrl}/signin`, {\n      account,\n      password, //解構拿出data\n    });\n    const { token } = data.data; //解構拿出authToken\n    // console.log('Token: ',token )\n    // console.log('data:',data)\n    if (token) {\n      return { success: true, ...data };\n    }\n    return data;\n  } catch (error) {\n    console.error('[Login Failed]:', error);\n  }\n};\n","import { login } from '../../api/auth';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as jwt from 'jsonwebtoken';\n\nconst defaultAuthContext = {\n  isAuthentic: false,\n  currentMember: null,\n  login: null,\n  logout: null,\n  register: null,\n};\n\nconst AuthContext = createContext(defaultAuthContext);\n\nexport const useAuth = () => useContext(AuthContext);\nexport const AuthProvider = ({ children }) => {\n  const [isAuthentical, setIsAuthentical] = useState(null);\n  const [payload, setPayload] = useState(null);\n  //頁面刷新時，確認是誰\n  const { pathname } = useLocation();\n\n  //封裝檢查token\n  useEffect(() => {\n    const checkTokenIsValid = async () => {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        setIsAuthentical(false);\n        setPayload(null);\n        return;\n      }\n      // @ checkPermission 功能\n      // const result = await checkPermission(authToken);\n      // if (result) {\n      //   setIsAuthentical(true);\n      //   const tempPayload = jwt.decode(authToken);\n      //   setPayload(tempPayload);\n      // } else {\n      //   setIsAuthentical(false);\n      //   setPayload(null);\n      // }\n\n      //@ 沒有checkPermission的替代過度版 可以暫時只有檢視是否有token+token解析\n      if (authToken) {\n        setIsAuthentical(true);\n        const tempPayload = jwt.decode(authToken);\n        setPayload(tempPayload);\n        return;\n      }\n    };\n    checkTokenIsValid();\n  }, [pathname]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthentical,\n        currentMember: payload && {\n          id: payload.id,\n          name: payload.name,\n          avatar: payload.avatar,\n        },\n        // currentMember: {\n        //   id :14,\n        //   name: '炸雞排'\n        // }\n        login: async (user) => {\n          console.log('ok');\n          const { success, data } = await login({\n            account: user.account,\n            password: user.password,\n          });\n          const token = data.token;\n          const tempPayload = jwt.decode(token);\n          // console.log('data',data)\n          // console.log('tempPayload: ', tempPayload )\n          //{id: 14, account: 'user1', email: 'user1@example.com', name: 'user1 name', avatar: null, …}\n          if (tempPayload) {\n            setIsAuthentical(true);\n            localStorage.setItem('authToken', token);\n            setPayload(tempPayload);\n            //等有test-token CheckPermission 完後才導入使用者資訊\n          } else {\n            setIsAuthentical(false);\n          }\n          return success;\n        },\n        logout: async () => {\n          localStorage.removeItem('authToken');\n          setIsAuthentical(false);\n          setPayload(null);\n        },\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\n// import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate } from 'react-router-dom';\nimport InputGroup from './InputGroup';\nimport { useAuth } from '../context/AuthContext';\n\nconst LoginForm = () => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n  const { login, isAuthentical } = useAuth();\n  const navigate = useNavigate();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    if (data.username.length === 0) {\n      return;\n    }\n    if (data.password.length === 0) {\n      return;\n    }\n    const success = await login({\n      account: data.username,\n      password: data.password,\n    });\n    console.log('Login: ', success);\n    // console.log(data);\n    reset();\n  };\n\n  useEffect(() => {\n    if (isAuthentical) {\n      navigate('/main');\n    }\n  }, [navigate, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  return (\n    <div className='formLayout login-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n        <button className='button-filled button-lg' type='submit'>\n          登入\n        </button>\n        <div className='button-group-row login-button-group'>\n          <Link to='/register' className='button-link'>\n            註冊\n          </Link>\n          <span>・</span>\n          <Link to='/login/admin' className='button-link'>\n            後台登入\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\n\n// import svg\nimport iconLogo from '../assets/images/icon/logo.svg';\n\n// import custom components\nimport ContainerColOne from '../components/layout/ContainerColOne';\nimport LoginForm from '../components/forms/LoginForm';\n// import { useState } from 'react';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const { isAuthentical } = useAuth();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    if (isAuthentical) {\n      navigation('/main');\n    }\n  }, [navigation, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColOne>\n        <div className='login-container col-4 flex_col_cc'>\n          <div className='page-logo'>\n            <img\n              src={iconLogo}\n              alt='Alphitter Icon'\n              className='icon-logo cursor-point'\n            />\n          </div>\n          <h3 className='page-title'>登入 Alphitter</h3>\n          <LoginForm />\n        </div>\n      </ContainerColOne>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\n\n// import svg\n// import iconBack from '../../assets/images/icon/back.svg';\n\n// tab styles\n\nconst TabThreeGroup = ({ tabIndex, setTabIndex }) => {\n  return (\n    <div className='tab-group'>\n      <div\n        className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('0')}\n      >\n        推文\n      </div>\n      <div\n        className={['tab', tabIndex === '1' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('1')}\n      >\n        回覆\n      </div>\n      <div\n        className={['tab', tabIndex === '2' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('2')}\n      >\n        喜歡的內容\n      </div>\n    </div>\n  );\n};\n\nconst TabTwoGroup = ({ tabIndex, setTabIndex, pathName }) => {\n  // if (pathName === 'followings') {\n  //   setTabIndex('1');\n  // }\n\n  return (\n    <div className='tab-group'>\n      <div\n        className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')}\n        tabIndex='0'\n        onClick={() => setTabIndex('0')}\n      >\n        追蹤者\n      </div>\n      <div\n        className={['tab', tabIndex === '1' ? 'active' : ''].join(' ')}\n        tabIndex='1'\n        onClick={() => setTabIndex('1')}\n      >\n        正在追隨\n      </div>\n    </div>\n  );\n};\n\nexport { TabThreeGroup, TabTwoGroup };\n","import React from 'react';\n// import custom components\nimport { Link } from 'react-router-dom';\nimport { TabThreeGroup, TabTwoGroup } from '../../components/basic/Tab';\n\n//import css\nimport '../../scss/storybooks/storyBookPage.scss';\n\nconst LayoutNav = () => {\n  return (\n    <>\n      <div className='storybook-layout'>\n        <div className='storybook-container'>\n          <h2>Storybooks</h2>\n          <h4 className='page-sec-title'>\n            === Buttons-元件本身目前沒有製作上下margin，是本表顯示用 ===\n          </h4>\n\n          <div className='flex_col_cc comp-container'>\n            <button className='button-filled button-lg' type='submit'>\n              登入\n            </button>\n            <button className='button-sm button-m active' type='submit'>\n              推文\n            </button>\n            <button className='button-bg button-m active' type='submit'>\n              儲存\n            </button>\n            <button className='button-md button-m active' type='submit'>\n              正在追蹤\n            </button>\n            <button className='button-md button-m' type='submit'>\n              編輯個人資料\n            </button>\n            <Link className='button-link' type='submit'>\n              取消\n            </Link>\n          </div>\n\n          <h4 className='page-sec-title'>\n            === tabs -元件本身綁定切換內容，這頁的tab 點了會壞不要管他lol ===\n          </h4>\n          <TabThreeGroup />\n          <TabTwoGroup />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LayoutNav;\n","import iconLogo from '../../assets/images/icon/logo.svg';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\n// import svg\n// import iconHome from '../assets/images/icon/home.svg';\n\nconst SecLeftNav = ({ role, setModalTweetOpen, pageIndex, memberId }) => {\n  // className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')\n  const { logout } = useAuth();\n  const handleClick = () => {\n    logout();\n  };\n  return (\n    <>\n      <nav className='left-nav col-2'>\n        {/* <nav className='left-nav g-col-2'> */}\n        <div className='left-nav-link'>\n          <div className='left-nav-link-items'>\n            <Link\n              to={role === 'admin' ? '/admin' : '/main'}\n              className='link-logo'\n            >\n              <img\n                src={iconLogo}\n                alt='Alphitter Icon'\n                className='icon-logo cursor-point'\n              />\n            </Link>\n\n            <Link\n              to={role === 'admin' ? '/admin' : '/main'}\n              className='nav-link '\n            >\n              <span\n                className={[\n                  'nav-icon icon-home',\n                  pageIndex === 0 ? 'active' : '',\n                ].join(' ')}\n              ></span>\n              <p>{role === 'admin' ? '推文清單' : '首頁'}</p>\n            </Link>\n\n            <Link to={role === 'admin' ? '/admin/users' : `/user/${memberId}`}>\n              <span\n                className={[\n                  'nav-icon icon-user',\n                  pageIndex === 1 ? 'active' : '',\n                ].join(' ')}\n              ></span>\n              <p>{role === 'admin' ? '使用者列表' : '個人資料'}</p>\n            </Link>\n\n            {role !== 'admin' && (\n              <>\n                <Link to='/setting'>\n                  <span\n                    className={[\n                      'nav-icon icon-setting',\n                      pageIndex === 2 ? 'active' : '',\n                    ].join(' ')}\n                  ></span>\n                  <p>設定</p>\n                </Link>\n\n                <button\n                  className='button-filled button-lg button-tweet'\n                  type='submit'\n                  onClick={() => setModalTweetOpen(true)}\n                  // onClick={()=> setModalActive(!)}\n                >\n                  <span className='button-tweet-view'>推文</span>\n                  <span className='button-tweet-view-m'></span>\n                </button>\n              </>\n            )}\n          </div>\n          <div className='left-nav-link-logout'>\n            <Link to='/login' onClick={handleClick}>\n              <span className='nav-icon icon-logout'></span>\n              <p>登出</p>\n            </Link>\n          </div>\n          {/* //06/07 與keifer衝突區塊 */}\n          {/* <div className='menu-link-logout'>\n            <Link to='/login'>\n              <span className='nav-icon icon-logout '></span>\n              登出\n            </Link>\n          </div> */}\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default SecLeftNav;\n","import React from 'react';\nimport SecLeftNav from '../basic/SecLeftNev';\n// import Modal from '../basic/Modal';\n\nconst ContainerColSec = ({\n  children,\n  role,\n  setModalTweetOpen,\n  pageIndex,\n  memberId,\n}) => {\n  return (\n    <>\n      {/* bootstrap gutter system needs come after row => row gx-4 */}\n      <main className='container_sec'>\n        {/* <main className='container_sec grid'> */}\n        <SecLeftNav\n          role={role}\n          setModalTweetOpen={setModalTweetOpen}\n          pageIndex={pageIndex}\n          memberId={memberId}\n        />\n        {children}\n      </main>\n      {/* <Modal /> */}\n    </>\n  );\n};\n\nexport default ContainerColSec;\n","import React from 'react';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\n// import SecLeftNav from '../components/SecLeftNav';\n\nconst AdminPage = () => {\n  return (\n    <>\n      <ContainerColSec role='admin' pageIndex={0}>\n        <div className='section-outer-l col-10'>\n          <div className='section-main-l'>\n            <h1> AdminPage</h1>\n          </div>\n        </div>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default AdminPage;\n","import React from 'react';\n// import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport InputGroup from './InputGroup';\n\nconst SettingForm = () => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    console.log(data);\n    reset();\n  };\n\n  return (\n    <div className='formLayout setting-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='account'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'account is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='名稱'\n            type='text'\n            placeholder='請輸入名稱'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='email'\n            label='Email'\n            type='email'\n            placeholder='請輸入Email'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'email is required',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Entered value does not match email format',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='cpassword'\n            label='密碼再確認'\n            type='password'\n            placeholder='請再次輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              //@ 確認密碼做法？ (還沒有試)\n              //https://www.positronx.io/add-confirm-password-validation-in-react-with-hook-form/\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='button-group-row login-button-group'>\n          <button className='button-bg button-m active' type='submit'>\n            儲存\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SettingForm;\n","export default __webpack_public_path__ + \"static/media/back.de35b2eb.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// import svg\nimport iconBack from '../../assets/images/icon/back.svg';\n\nconst HeaderMain = ({ pageTitle }) => {\n  return (\n    <div className='header-container header-main'>\n      <h5>{pageTitle}</h5>\n    </div>\n  );\n};\n\nconst HeaderUser = ({ userAccountName, userTweetsLength }) => {\n  return (\n    <div className='header-container'>\n      <Link to='/main'>\n        <img\n          src={iconBack}\n          alt='Back to pre page'\n          className='icon-back cursor-point'\n        />\n      </Link>\n\n      <div className='header-user-info'>\n        <h5>{userAccountName}</h5>\n        <p>{userTweetsLength} 推文</p>\n      </div>\n    </div>\n  );\n};\n\nexport { HeaderMain, HeaderUser };\n","import React from 'react';\nimport { useEffect } from 'react';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport SettingForm from '../components/forms/SettingForm';\nimport { HeaderMain } from '../components/basic/Header';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst SettingPage = ({ setModalTweetOpen }) => {\n  const { isAuthentical, currentMember } = useAuth(); // 取出需要的狀態與方法\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isAuthentical) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        pageIndex={2}\n        memberId={currentMember?.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderMain pageTitle='帳戶設定' />\n            <SettingForm />\n          </div>\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default SettingPage;\n","import axios from 'axios';\n// const baseUrl = 'http://localhost:3004';\n\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n// ,  {\n//   headers: {\n//     'Content-Type': 'application/json',\n//     'Origin': 'https://leemengyun.github.io/'\n//   }}\n\n// ,{\n//       headers: {\n//         'Access-Control-Allow-Origin':'*',\n//         'Content-Type': 'application/json',\n//         'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\n//         'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n//         'Accept': 'application/json',\n//       }\n//     }\n\nexport const getTweets = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/tweets`); //watch的屬性名作為path\n    //console.log(res.data[0].data)//{status: 'success', data: {…}}data: {tweets: Array(7)}status: \"success\"[[Prototype]]: Object\n    return res.data; //{tweets: Array(54)}\n  } catch (error) {\n    console.log('[Get Tweets failed]:', error);\n  }\n};\n\nexport const getTopUsers = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/top`);\n    return res.data;\n  } catch (error) {\n    console.log('[get topUser failed]:', error);\n  }\n};\n\nexport const getTweet = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/tweets/${pathId}`);\n    return res.data;\n  } catch (error) {\n    console.log('[Get Tweet Failed]: ', error);\n  }\n};\n\n//取得User的推文\nexport const getUserTweets = async (pathId)=>{\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}/tweets`)\n    return res.data\n  }catch(error){\n    console.log('[Get UserTweets Failed!!]:', error)\n  }\n  \n}\n//取得User Liked的推文\nexport const getUserLikedTweets = async (pathId)=>{\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}/likes`)\n    return res.data\n  }catch(error){\n    console.log('[Get getUserLikedTweets Failed!!]:', error)\n  }\n  \n}\n\n\n//取得User Replied的推文\nexport const getUserRepliedTweets = async (pathId)=>{\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}/likes`)\n    return res.data\n  }catch(error){\n    console.log('[Get getUserLikedTweets Failed!!]:', error)\n  }\n  \n}","export default __webpack_public_path__ + \"static/media/avatar.bd02c62f.svg\";","import React from 'react';\nimport Defaultavatar from '../../assets/images/icon/avatar.svg';\n\n\n\nconst UserAvatar = ({avatar,onClick,userId}) =>{\n    return (\n      <> \n        <div className='avatar' onClick={(e)=>{ \n          onClick?.({userId})\n          e.stopPropagation()\n          //因為在最內層點擊事件 外層有相對應的事件 也會跟著觸發 因此加入e.stopPropagation()來避免外層觸發的可能\n          }}>\n          <img\n            src={avatar || Defaultavatar}\n            alt='userAvatar'\n            className='user-avatar'\n          />\n        </div>\n      </>\n    )\n  }\n\n export default UserAvatar;\n\n","import React from \"react\";\n\nconst TweetUserName2 = ({name, account})=>{\n    return (\n        <div className='tweet-username-2'>\n          <span className='user-name'>\n            {name}\n          </span>\n          <span className='user-account'>\n            @{account}\n          </span>\n        </div>\n    )\n  }\n\n  export default TweetUserName2;","import React from 'react';\nimport UserAvatar from './UserAvatar';\nimport TweetUserName2 from './TweetUserName2';\nimport clsx from 'clsx';\n\nconst FollowCard = ({...props}) => {\n  return (\n    <div className='follow-card'>\n        <div className='follow-card-info'>\n        <UserAvatar avatar={props.avatar} />\n        <TweetUserName2 name={props.name} account={props.account} />\n      </div>\n      <div className='follow-card-button'>\n        <button className={`${clsx('', {active: props.isFollowing}) } button-md button-m`} type='submit'>\n          {props.isFollowing ? '正在跟隨' : '跟蹤'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowCard;\n\n","import React from 'react';\nimport { useEffect,useState  } from 'react';\nimport { getTopUsers } from '../../api/twitter';\nimport FollowCard from '../basic/FollowCard'\nimport { useAuth } from '../context/AuthContext';\n// import iconLogo from '../assets/images/icon/logo.svg';\n// import svg\n// import iconHome from '../assets/images/icon/home.svg';\n\nconst FollowCardList = () => {\nconst [users,setUsers] = useState([]);\n\n\n   useEffect(()=>{\n      const getUsersAsync = async()=>{\n         try{\n            const data = await getTopUsers()\n            setUsers(data)\n         }catch(error){\n            console.log(error)\n         }\n      }\n      getUsersAsync()\n   },[])\n\n  return (\n    <>\n      <div className='follow-list-container'>\n        <div className='title-secondary'>\n          <h4>推薦跟隨</h4>\n        </div>\n         {users.map((user)=>{\n            return <FollowCard \n            key={user.id}\n            {...user}\n            />\n         })}\n      </div>\n    </>\n  );\n};\n\nexport default FollowCardList;\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/zh-tw';\n\n\nexport default function DayTime (a){\n    dayjs.extend(relativeTime);\n    dayjs.locale('zh-tw')\n    const anHourAgo = (a)=> dayjs(a).subtract(1, 'hour');\n    const timeFromNow = (a) => anHourAgo(a).fromNow()\n    \n    //查看現在時間\n    // const now = dayjs();\n    // const format = now.format('HH:mm')\n    return  timeFromNow(a)\n }\n    \n  ","import React from \"react\";\nimport DayTime from \"../../helper/TimeHelper\";\n//時間會在更新\nconst TweetUserName3 = ({name, account , time})=>{\n    // const relativeTime = timeHelper.relativeTimeFromNow(time)\n    // console.log(relativeTime)\n    return (    \n        <div className='tweet-username-3'>\n          <span className='user-name'>\n            {name}\n          </span>\n          <span className='user-account'>\n            @{account}\n          </span>\n          <span className='user-time'> ·{DayTime(time)}</span>\n        </div>\n    )\n  }\n\n  export default TweetUserName3;","import React from 'react';\nimport TweetUserName3 from './TweetUserName3';\nimport UserAvatar from './UserAvatar';\nconst TweetCardReply = ({ ...props }) => {\n\n  return (\n    <div className='tweet-card-basic'>\n      <UserAvatar avatar={props.userAvatar} />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3\n          name={props.userName}\n          account={props.userAccount}\n          time={props.time}\n        />\n        <p className='tweet-card-basic-reply'>\n          回覆\n          <span className='reply-user-account'>@{props.user.account}</span>\n        </p>\n        <p className='tweet-card-basic-description'>{props.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardReply;\n","import React from 'react';\nimport TweetCardReply from '../basic/TweetCardReply';\n\nconst ReplyLists = ({users, onClick}) => {\n  const tweets = users.tweets\n  const userName = users.name\n  const userAccount = users.account\n  const userAvatar = users.avatar\n  \n  return (\n    <div className='TweetLists'>\n      <h1>Nested TweetsLists</h1>\n update/main\n      {tweets.map((tweet)=>{\n        return <TweetCardReply \n          key={tweet.id}\n          {...tweet}\n          userName={userName}\n          userAvatar={userAvatar}\n          userAccount={userAccount}\n          // onClick={({id,userId})=>{\n          //   onClick?.({id,userId})\n          // }}\n        />\n   })}\n    </div>\n  );\n};\n\nexport default ReplyLists;\n","export default __webpack_public_path__ + \"static/media/like-filled.a23cc5e1.svg\";","export default __webpack_public_path__ + \"static/media/reply.1d9be076.svg\";","export default __webpack_public_path__ + \"static/media/like.81043da8.svg\";","import React from \"react\";\nimport like from '../../assets/images/icon/like-filled.svg'\nimport reply from '../../assets/images/icon/reply.svg'\nimport likefilled from '../../assets/images/icon/like.svg'\nimport clsx from \"clsx\";\nconst TweetIconCount =({likesCount,repliesCount,isLiked}) => {\n    return(\n      <div className='tweet-card-icon-count'>\n          <div className='tweet-card-reply-count'>\n            <img src={reply} alt='reply' className='reply-icon'\n            />\n            <span className='tweet-count'>\n              {repliesCount}\n            </span>\n          </div>\n          <div className='tweet-card-like-count'>\n           <img src={isLiked ?  likefilled : like} alt='like' className={`${clsx('', {active: isLiked})} like-icon`}\n           />\n          <span className = 'tweet-count' >\n            {likesCount}\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  export default TweetIconCount;","\nimport React from \"react\";\nimport UserAvatar from \"./UserAvatar\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport TweetIconCount from \"./TweetIconCount\";\n\n\nconst TweetCardBasic = ({ ...props }) => {\n  // const value ={\n  //   tweetId: props.id,\n  //   userId: props.UserId,\n  // }\n  return (\n    <div className='tweet-card-basic' onClick={()=>{\n      props.onClick?.({tweetId: props.id})\n      }}>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId}\n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3 \n          name={props.User.name} \n          account={props.User.account} \n          time={props.createdAt}\n        />\n          <p className='tweet-card-basic-description'>\n            {props.description}\n          </p>\n          <TweetIconCount \n            likesCount={props.likesCount} \n            repliesCount={props.repliesCount}\n            isLiked={props.isLiked}\n          />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardBasic;\n","import React from 'react';\nimport TweetCardBasic from '../basic/TweetCardBasic';\n\nconst TweetsLists = ({ tweets, onClick }) => {\n  return (\n    <div className='TweetLists'>\n      {/* <h1>Nested TweetsLists</h1> */}\n      {/* update/main */}\n      {tweets.map((tweet) => {\n        return (\n          <TweetCardBasic\n            key={tweet.id}\n            {...tweet}\n            onClick={({ tweetId, userId }) => {\n              onClick?.({ tweetId, userId });\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TweetsLists;\n","\nimport React from \"react\";\nimport UserAvatar from \"./UserAvatar\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport TweetIconCount from \"./TweetIconCount\";\n\n\nconst TweetCardLike = ({ ...props }) => {\n  // const value ={\n  //   tweetId: props.id,\n  //   userId: props.UserId,\n  // }\n  return (\n    <div className='tweet-card-basic' onClick={()=>{\n      props.onClick?.({tweetId: props.id})\n      }}>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId}\n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3 \n          name={props.User.name} \n          account={props.User.account} \n          time={props.Tweet.createdAt}\n        />\n          <p className='tweet-card-basic-description'>\n            {props.Tweet.description}\n          </p>\n          <TweetIconCount \n            likesCount={props.likesCount} \n            repliesCount={props.repliesCount}\n            isLiked={props.isLiked}\n          />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardLike;\n","import React, { useEffect,useState } from 'react';\nimport { getUserLikedTweets } from '../../api/twitter';\nimport TweetCardLike from '../basic/TweetCardLike';\n\nconst LikeLists = ({ pathId, onClick }) => {\n  const [userLiked,setUserLiked] = useState([])\n  \n  useEffect(()=>{\n    const getUserLikedTweetsAsync = async()=>{\n      try{\n        const data = await getUserLikedTweets(pathId)\n        setUserLiked(data)\n      }catch(error){\n        console.log(error)\n      }\n    }\n    getUserLikedTweetsAsync()\n  },[])\n\n\n  return (\n    <div className='TweetLists'>\n      <h1>Nested TweetsLists</h1>\n update/main\n      {userLiked.map((tweet)=>{\n        return <TweetCardLike \n          key={tweet.id}\n          {...tweet}\n          onClick={({tweetId,userId})=>{\n            onClick?.({tweetId,userId})\n          }}\n        />\n   })}\n    </div>\n  );\n};\n\nexport default LikeLists;\n","export default __webpack_public_path__ + \"static/media/bk.953d3799.jpg\";","import React from 'react';\nimport DefaultBk from '../../assets/images/bk.jpg';\n\nconst UserBk = ({ bkUrl }) => {\n  return (\n    <>\n      <div className='profile-bk-clip'>\n        <img\n          src={bkUrl || DefaultBk}\n          alt='mountain pic'\n          className='profile-bk-image'\n        />\n      </div>\n    </>\n  );\n};\n\nexport default UserBk;\n","export default __webpack_public_path__ + \"static/media/message.4c9af58b.svg\";","export default __webpack_public_path__ + \"static/media/notice.60c0a6cc.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport iconMessage from '../../assets/images/icon/message.svg';\nimport iconNotice from '../../assets/images/icon/notice.svg';\n\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileCard = ({\n  name,\n  account,\n  introduction,\n  avatar,\n  banner,\n  followersCount,\n  followingsCount,\n  setModalProOpen,\n}) => {\n  return (\n    <>\n      <div className='profile-card'>\n        <UserBk bkUrl={banner} />\n        <UserAvatar avatar={avatar} />\n        <div className='profile-btn-group'>\n          <img\n            src={iconMessage}\n            alt='icon of message'\n            className='icon-round icon-message icon-round cursor-point'\n          />\n          <img\n            src={iconNotice}\n            alt='icon of Notice'\n            className='icon-round icon-notice icon-round cursor-point'\n          />\n          <button\n            className='button-md button-m'\n            onClick={() => setModalProOpen(true)}\n          >\n            編輯個人資料\n          </button>\n        </div>\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n          <p className='user-desc'>{introduction}</p>\n        </div>\n        <div className='user-follow-info'>\n          <Link to='/user/followers'>\n            <p>\n              {followersCount} 個 <span>跟隨中</span>\n            </p>\n          </Link>\n\n          <Link to='/user/followers'>\n            <p>\n              {followingsCount} 位<span>跟隨者</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileCard;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3004';\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n//要記得export外面才能用\nexport const getUserInfo = async (pathId) => {\n  try {\n    // 獲得todo end point\n    // const res = await axios.get(`${baseUrl}/userinfo`);\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}`);\n\n    //server 回傳的物件會包在data,所以一定要用.data才會拿到對的資料\n    // console.log(res.data[0].data.user);\n    // return res.data[0].data.user;\n    // console.log(res.data.data);\n    // console.log(res)\n    return res.data;\n  } catch (error) {\n    console.error('[getUser Info failed]', error);\n  }\n};\n\n//要記得export外面才能用\n// export const updateUserInfo = async (payload) => {\n//   try {\n//     // 要帶的資料設定為payload\n//     const { account, name } = payload;\n//     // 獲得todo end point\n//     const res = await axios.patch(`${baseUrl}/userinfo`, {\n//       account,\n//       name,\n//     });\n//     //server 回傳的物件會包在data,所以一定要用.data才會拿到對的資料\n//     return res.data;\n//   } catch (error) {\n//     console.error('[getUser Info failed]', error);\n//   }\n// };\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabThreeGroup } from '../components/basic/Tab';\n\nimport FollowCardList from '../components/user/FollowCardList';\nimport ReplyLists from '../components/user/ReplyLists';\nimport TweetsLists from '../components/user/TweetsLists';\nimport LikeLists from '../components/user/LikeLists';\nimport ProfileCard from '../components/basic/ProfileCard';\nimport { useParams } from 'react-router-dom';\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\nimport { getUserTweets } from '../api/twitter';\n\nconst UserPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  const pathId = Number(useParams().id); //取得網址:id\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const { isAuthentical, currentMember } = useAuth();\n  // @串接 local-server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  const [userTweets, setUserTweets] = useState([]);\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n  const dummyData = {\n    user: {\n      id: 1,\n      account: 'test-acount-1',\n      email: 'test1@example.com',\n      password: '$2a$10$MlmbvV0fDfjJuqipEU88W.KSo75y8Zc1C/hxA.rdG772HaALUiSQ.',\n      name: 'test-1',\n      avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n      introduction: 'Hi I am test No.1',\n      banner: 'https://i.imgur.com/3ZH4ZZ8.jpeg',\n      role: 'user',\n      createdAt: '2023-05-25T11:09:42.000Z',\n      updatedA: '2023-05-25T11:09:42.000Z',\n      tweets: [\n        {\n          id: 1,\n          userId: 1,\n          description: 'Test-Tweet-user1-1',\n          createdAt: '2023-05-25T11:09:42.000Z',\n          updatedAt: '2023-05-25T11:09:42.000Z',\n          isLiked: true,\n          repliesCount: 1,\n          user: {\n            name: 'test-1-name',\n            account: 'test-1-account',\n            avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n          },\n        },\n        {\n          id: 2,\n          userId: 1,\n          description: 'Test-Tweet-user1-1',\n          createdAt: '2023-05-25T11:09:42.000Z',\n          updatedAt: '2023-05-25T11:09:42.000Z',\n          isLiked: true,\n          repliesCount: 1,\n          user: {\n            name: 'test-1-name',\n            account: 'test-1-account',\n            avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n          },\n        },\n        {\n          id: 3,\n          userId: 1,\n          description: 'Test-Tweet-user1-1',\n          createdAt: '2023-05-25T11:09:42.000Z',\n          updatedAt: '2023-05-25T11:09:42.000Z',\n          isLiked: true,\n          repliesCount: 1,\n          user: {\n            name: 'test-1-name',\n            account: 'test-1-account',\n            avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n          },\n        },\n      ],\n    },\n  };\n\n  // console.log(currentMember)\n  //@ profileCard 渲染後端 userInfo\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const userInfo = await getUserInfo(pathId);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    const getUserTweetsAsync = async () => {\n      try {\n        const data = await getUserTweets(pathId);\n        setUserTweets(data);\n        // console.log(data.length);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserTweetsAsync();\n    getUserInfoAsync();\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthentical) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '1':\n        return <ReplyLists pathId={pathId} />;\n      case '2':\n        return <LikeLists pathId={pathId} />;\n      default:\n        return <TweetsLists tweets={userTweets} />;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        setModalProOpen={setModalProOpen}\n        pageIndex={1}\n        memberId={userInfo.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser\n              userAccountName={userInfo.name}\n              userTweetsLength={userTweets.length}\n            />\n\n            <ProfileCard {...userInfo} setModalProOpen={setModalProOpen} />\n            <TabThreeGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n\n            {switchContext(tabIndex)}\n            {/* {tabIndex === '0' && <TweetsLists />}\n            {tabIndex === '1' && <ReplyLists />}\n            {tabIndex === '2' && <LikeLists />} */}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport iconMessage from '../../assets/images/icon/message.svg';\nimport iconNotice from '../../assets/images/icon/notice.svg';\n\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileOtherCard = ({\n  name,\n  account,\n  introduction,\n  avatar,\n  banner,\n  followersCount,\n  followingsCount,\n  setModalProOpen,\n}) => {\n  return (\n    <>\n      <div className='profile-card'>\n        <UserBk bkUrl={banner} />\n        <UserAvatar avatar={avatar} />\n        <div className='profile-btn-group'>\n          <img\n            src={iconMessage}\n            alt='icon of message'\n            className='icon-round icon-message icon-round cursor-point'\n          />\n          <img\n            src={iconNotice}\n            alt='icon of Notice'\n            className='icon-round icon-notice icon-round cursor-point'\n          />\n          <button\n            className='button-md button-m'\n            // onClick={() => setModalProOpen(true)}\n          >\n            追蹤\n          </button>\n        </div>\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n          <p className='user-desc'>{introduction}</p>\n        </div>\n        <div className='user-follow-info'>\n          <Link to='/user/followers'>\n            <p>\n              {followersCount} 個 <span>跟隨中</span>\n            </p>\n          </Link>\n\n          <Link to='/user/followers'>\n            <p>\n              {followingsCount} 位<span>跟隨者</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileOtherCard;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabThreeGroup } from '../components/basic/Tab';\n\nimport FollowCardList from '../components/user/FollowCardList';\nimport ReplyLists from '../components/user/ReplyLists';\nimport TweetsLists from '../components/user/TweetsLists';\nimport LikeLists from '../components/user/LikeLists';\nimport ProfileOtherCard from '../components/basic/ProfileOtherCard';\nimport { useParams } from 'react-router-dom';\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\nimport { getUserTweets } from '../api/twitter';\n\nconst UserOtherPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  const pathId = Number(useParams().id); //取得網址:id\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const { isAuthentical, currentMember } = useAuth();\n  // @串接 local-server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  const [userTweets, setUserTweets] = useState([]);\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n  const dummyData = {\n    user: {\n      id: 1,\n      account: 'test-acount-1',\n      email: 'test1@example.com',\n      password: '$2a$10$MlmbvV0fDfjJuqipEU88W.KSo75y8Zc1C/hxA.rdG772HaALUiSQ.',\n      name: 'test-1',\n      avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n      introduction: 'Hi I am test No.1',\n      banner: 'https://i.imgur.com/3ZH4ZZ8.jpeg',\n      role: 'user',\n      createdAt: '2023-05-25T11:09:42.000Z',\n      updatedA: '2023-05-25T11:09:42.000Z',\n      tweets: [\n        {\n          id: 1,\n          userId: 1,\n          description: 'Test-Tweet-user1-1',\n          createdAt: '2023-05-25T11:09:42.000Z',\n          updatedAt: '2023-05-25T11:09:42.000Z',\n          isLiked: true,\n          repliesCount: 1,\n          user: {\n            name: 'test-1-name',\n            account: 'test-1-account',\n            avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n          },\n        },\n        {\n          id: 2,\n          userId: 1,\n          description: 'Test-Tweet-user1-1',\n          createdAt: '2023-05-25T11:09:42.000Z',\n          updatedAt: '2023-05-25T11:09:42.000Z',\n          isLiked: true,\n          repliesCount: 1,\n          user: {\n            name: 'test-1-name',\n            account: 'test-1-account',\n            avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n          },\n        },\n        {\n          id: 3,\n          userId: 1,\n          description: 'Test-Tweet-user1-1',\n          createdAt: '2023-05-25T11:09:42.000Z',\n          updatedAt: '2023-05-25T11:09:42.000Z',\n          isLiked: true,\n          repliesCount: 1,\n          user: {\n            name: 'test-1-name',\n            account: 'test-1-account',\n            avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n          },\n        },\n      ],\n    },\n  };\n\n  // console.log(currentMember)\n  //@ profileCard 渲染後端 userInfo\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const userInfo = await getUserInfo(94);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    const getUserTweetsAsync = async () => {\n      try {\n        const data = await getUserTweets(94);\n        setUserTweets(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserTweetsAsync();\n    getUserInfoAsync();\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthentical) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '1':\n        return <ReplyLists pathId={94} />;\n      case '2':\n        return <LikeLists pathId={94} />;\n      default:\n        return <TweetsLists tweets={userTweets} />;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        setModalProOpen={setModalProOpen}\n        pageIndex={1}\n        {...currentMember}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser userAccountName='Others' userTweetsLength='33推文' />\n\n            <ProfileOtherCard {...userInfo} setModalProOpen={setModalProOpen} />\n            <TabThreeGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n\n            {switchContext(tabIndex)}\n            {/* {tabIndex === '0' && <TweetsLists />}\n            {tabIndex === '1' && <ReplyLists />}\n            {tabIndex === '2' && <LikeLists />} */}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserOtherPage;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabTwoGroup } from '../components/basic/Tab';\n\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\n// import { getUserTweets } from '../api/twitter';\n\nconst UserFollowersPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  // const pathId = Number(useParams()); //取得網址\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const { isAuthentical, currentMember } = useAuth();\n  // @串接 local-server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n  // console.log(currentMember)\n  //@ profileCard 渲染後端 userInfo\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const userInfo = await getUserInfo(currentMember.id);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthentical) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '0':\n        return <h1>替換成 tab0要用的component</h1>;\n      default:\n        return <h1>替換成 tab1要用的component</h1>;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        setModalProOpen={setModalProOpen}\n        pageIndex={1}\n        {...currentMember}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser userAccountName='John Doe' userTweetsLength='25推文' />\n\n            <TabTwoGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n\n            {switchContext(tabIndex)}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          {/* <FollowCardList /> */}\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserFollowersPage;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\n\n// import InputGroup from './InputGroup';\nimport UserAvatar from '../basic/UserAvatar';\nimport testAvatar from '../../assets/images/avatar1.jpg';\n\nconst TweetCardForm = ({ avatar }) => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    // watch,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    alert('成功繳交');\n    console.log(data);\n    reset();\n  };\n\n  return (\n    <>\n      <div className='formLayout tweet-card-form'>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className='form-group-inner-wrapper'>\n            <UserAvatar avatar={avatar} />\n            <div className='textarea-group-container'>\n              <div className='grow-wrap'>\n                <textarea\n                  type='textarea'\n                  id='tweetarea'\n                  name='tweetarea'\n                  // aria-invalid={errors.tweetarea ? 'true' : 'false'}\n                  {...register('tweetarea', {\n                    required: true,\n                    maxLength: 250,\n                  })}\n                  placeholder='有什麼新鮮事？'\n                  maxLength='250'\n                  className='tweet-text-area'\n                  // ref={textAreaRef}\n                  // onChange={onChange}\n                  // rows={1}\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            {errors.tweetarea && errors.tweetarea.type === 'required' && (\n              <span className='error'>This is required</span>\n            )}\n            <button className='button-md button-m active' type='submit'>\n              推文\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TweetCardForm;\n","export default __webpack_public_path__ + \"static/media/avatar1.e64705b6.jpg\";","import React from 'react';\n//nested router - need Link and Outlet\n\n// import custom components\nimport { useState, useEffect } from 'react';\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderMain } from '../components/basic/Header';\nimport FollowCardList from '../components/user/FollowCardList';\nimport TweetLists from '../components/user/TweetsLists';\nimport { getTweets } from '../api/twitter';\nimport { getUserInfo } from '../api/userinfo';\n\nimport { useNavigate } from 'react-router-dom';\nimport TweetCardForm from '../components/forms/TweetCardForm';\nimport { useAuth } from '../components/context/AuthContext';\n\nconst MainPage = ({ setModalTweetOpen }) => {\n  const [tweets, setTweets] = useState([]);\n  const [profile, setProfile] = useState(null);\n  const navigate = useNavigate();\n  const { isAuthentical, currentMember } = useAuth(); // 取出需要的狀態與方法\n\n  const handleClickCard = ({ tweetId, userId }) => {\n    {\n      tweetId && navigate(`/main/tweet/${tweetId}`);\n    }\n    {\n      userId && navigate(`/user/${userId}`);\n    }\n  };\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const profile = await getUserInfo(currentMember.id);\n        setProfile(profile);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n\n    const getTweetsAsync = async () => {\n      try {\n        const data = await getTweets();\n        setTweets(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserInfoAsync();\n    getTweetsAsync();\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthentical) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        pageIndex={0}\n        memberId={currentMember?.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m '>\n            <HeaderMain pageTitle='首頁' />\n            <div className='tweet-form-wrapper'>\n              <TweetCardForm {...profile} />\n            </div>\n\n            <TweetLists tweets={tweets} onClick={handleClickCard} />\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default MainPage;\n","export default __webpack_public_path__ + \"static/media/post.38b40641.svg\";","import React from 'react';\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n// import TweetCardBasic from './TweetCardBasic';\n\n// import svg\n// @ testing local photo\nimport testAvatar from '../../assets/images/avatar1.jpg';\nimport iconPost from '../../assets/images/icon/post.svg';\nimport iconLike from '../../assets/images/icon/like.svg';\n// import iconMessage from '../../assets/images/icon/message.svg';\n// import iconNotice from '../../assets/images/icon/notice.svg';\n\n//@ testing http photos\nconst testBk =\n  'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileMiniCard = ({\n  id,\n  account,\n  name,\n  avatar,\n  banner,\n  handleClickCard,\n}) => {\n  return (\n    <>\n      <div\n        className='profile-mini-card'\n        onClick={() => {\n          handleClickCard?.(id);\n        }}\n      >\n        <UserBk bkUrl={banner} />\n        <UserAvatar\n          avatar={avatar}\n          onClick={() => {\n            handleClickCard?.(id);\n          }}\n        />\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n        </div>\n        <div className='user-tweet-info'>\n          <div className='user-card-post-count'>\n            <img src={iconPost} alt='post' className='icon-post' />\n            <span className='tweet-count'>1.5k</span>\n          </div>\n          <div className='user-card-like-count'>\n            <img src={iconLike} alt='like' className='icon-like' />\n            <span className='tweet-count'>20k</span>\n          </div>\n        </div>\n        <div className='user-follow-info'>\n          <p>\n            34 個 <span>跟隨中</span>\n          </p>\n          <p>\n            59 位<span>跟隨者</span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileMiniCard;\n","import axios from 'axios';\n// const baseUrl = 'http://localhost:3004';\n\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n//@目前admin/users還沒做好，目前先打一般users\nexport const getAllUsers = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users`); //watch的屬性名作為path\n    // console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log('[Get Admin Users failed]:', error);\n  }\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderMain } from '../components/basic/Header';\nimport ProfileMiniCard from '../components/basic/ProfileMiniCard';\n//import api\nimport { getAllUsers } from '../api/admin';\n\nconst AdminUsers = () => {\n  const [allUsers, setAllUsers] = useState([]);\n  const navigate = useNavigate();\n\n  const handleClickCard = (id) => {\n    // alert('點擊');\n    // console.log(id);\n    if (id) {\n      navigate(`/user/${id}`); //@還沒搭配身份驗證會先跳出跑到login\n    }\n  };\n\n  //前面刷新資料\n  useEffect(() => {\n    const getAllUserAsync = async () => {\n      try {\n        const allUsers = await getAllUsers();\n        setAllUsers(allUsers);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllUserAsync();\n  }, []);\n\n  return (\n    <>\n      <ContainerColSec role='admin' pageIndex={1}>\n        <div className='section-outer-l col-10'>\n          <div className='section-main-l'>\n            <HeaderMain pageTitle='使用者列表' />\n            <div className='admin-user-wrapper'>\n              {allUsers.map((allUser) => {\n                return (\n                  <ProfileMiniCard\n                    key={allUser.id}\n                    {...allUser}\n                    handleClickCard={(id) => {\n                      handleClickCard?.(id);\n                    }}\n                  />\n                );\n              })}\n\n              {/* <ProfileMiniCard /> */}\n              {/* <ProfileMiniCard /> <ProfileMiniCard /> <ProfileMiniCard />\n              <ProfileMiniCard /> <ProfileMiniCard /> <ProfileMiniCard />\n              <ProfileMiniCard /> <ProfileMiniCard /> */}\n            </div>\n          </div>\n        </div>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default AdminUsers;\n","const ModalContent = ({ children }) => {\n  return (\n    <>\n      <div className='modal-outer-container modal-transparent-bk'>\n        <div className='modal-flex-box'>\n          <div className='modal-container'>{children}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalContent;\n","export default __webpack_public_path__ + \"static/media/close.8d623dc5.svg\";","import React from 'react';\n\n// import svg\nimport iconClose from '../../assets/images/icon/close.svg';\n\nconst ModalHeader = ({ setModalTweetOpen }) => {\n  return (\n    <>\n      <div className='modal-header'>\n        <img\n          src={iconClose}\n          alt='icon of close button'\n          className='icon-close'\n          onClick={() => {\n            setModalTweetOpen(false);\n          }}\n        />\n      </div>\n    </>\n  );\n};\nconst ModalHeaderIcon = ({ setModalProOpen }) => {\n  return (\n    <>\n      <div className='modal-header modal-header-with-btn'>\n        <img\n          src={iconClose}\n          alt='icon of close button'\n          className='icon-close'\n          onClick={() => setModalProOpen(false)}\n        />\n        <h5>編輯個人資料</h5>\n        <button className='button-md button-m active' type='submit'>\n          儲存\n        </button>\n      </div>\n    </>\n  );\n};\nexport { ModalHeader, ModalHeaderIcon };\n","export default __webpack_public_path__ + \"static/media/addphoto.2e797657.svg\";","import { useForm } from 'react-hook-form';\nimport { useRef, useState } from 'react';\n\n// import component\nimport ModalContent from './ModalContent';\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\nimport InputGroup from '../forms/InputGroup';\nimport { ModalHeaderIcon } from './ModalHeader';\n//import svg\nimport iconCamera from '../../assets/images/icon/addphoto.svg';\nimport iconClose from '../../assets/images/icon/close.svg';\n// import iconCamera from '../../assets/images/icon/addphoto.svg';\n\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst Modal = ({ setModalProOpen }) => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    console.log(data);\n    reset();\n  };\n\n  //upload photo\n  const uploadedImage = useRef(null);\n  const imageUploader = useRef(null);\n  const imageUploader_bk = useRef(null);\n  const [imageNewUrl, setImageNewUrl] = useState('');\n  const [imageNewUrl_bk, setImageNewUrl_bk] = useState('');\n\n  const handleImageUpload = (e) => {\n    console.log(e.target.className);\n    let curr_target = 'input-file-avatar';\n    if (e.target.className === 'input-file-bk') {\n      curr_target = 'input-file-bk';\n    }\n\n    const [file] = e.target.files;\n    if (file) {\n      const reader = new FileReader();\n      const { current } = uploadedImage;\n      current.file = file;\n      reader.onload = (e) => {\n        // current.src = e.target.result;\n        // console.log(current)\n        // console.log(e.target.class)\n        if (curr_target === 'input-file-avatar') {\n          setImageNewUrl(e.target.result);\n        } else if (curr_target === 'input-file-bk') {\n          console.log('bk-file');\n          setImageNewUrl_bk(e.target.result);\n        }\n      };\n      // console.log(file)\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <>\n      <ModalContent>\n        <ModalHeaderIcon setModalProOpen={setModalProOpen} />\n        <div className='modal-content'>\n          <div className='profile-bk-wrapper'>\n            <UserBk bkUrl={imageNewUrl_bk} />\n            <img\n              alt='bk-camera'\n              src={iconCamera}\n              className='icon-camera'\n              ref={uploadedImage}\n              onClick={() => imageUploader_bk.current.click()}\n            />\n            <img\n              src={iconClose}\n              alt='icon of close button'\n              className='icon-close'\n              onClick={() => alert('換回原本照片')}\n            />\n            <input\n              type='file'\n              accept='image/*'\n              onChange={handleImageUpload}\n              ref={imageUploader_bk}\n              className='input-file-bk'\n            />\n          </div>\n\n          <div className='avatar-edit-wrapper'>\n            <UserAvatar avatar={imageNewUrl} />\n            <img\n              alt='bbb'\n              src={iconCamera}\n              className='icon-camera'\n              ref={uploadedImage}\n              onClick={() => imageUploader.current.click()}\n            />\n\n            <input\n              type='file'\n              accept='image/*'\n              onChange={handleImageUpload}\n              ref={imageUploader}\n              className='input-file-avatar'\n            />\n          </div>\n\n          <form className='modal-info-form' onSubmit={handleSubmit(onSubmit)}>\n            <div className='input-group-container'>\n              <InputGroup\n                name='username'\n                label='名稱'\n                type='text'\n                placeholder='請輸入帳號'\n                maxLength='50'\n                errors={errors}\n                register={register}\n                validationSchema={{\n                  required: 'username is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Please enter a minimum of 3 characters',\n                  },\n                }}\n                watch={watch}\n                // required\n              />\n            </div>\n            <div className='textarea-group-container'>\n              <div className='textarea-group grow-wrap'>\n                <label>自我介紹</label>\n                <textarea\n                  type='textarea'\n                  id='description'\n                  name='description'\n                  {...register('description', {\n                    required: true,\n                    maxLength: 30,\n                  })}\n                  placeholder='有什麼新鮮事？'\n                  maxLength='30'\n                  className='desc-text-area'\n                />\n              </div>\n              <div className='error-message-group'>\n                {errors.description &&\n                  errors.description.type === 'required' && (\n                    <span className='error'>This is required</span>\n                  )}\n                <span className='limit-num'>\n                  {watch('description') ? watch('description').length : '0'}/50\n                </span>\n              </div>\n            </div>\n          </form>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default Modal;\n","import { useForm } from 'react-hook-form';\n\n// import component\nimport ModalContent from './ModalContent';\n// import UserAvatar from './UserAvatar';\n// import InputGroup from '../forms/InputGroup';\nimport { ModalHeader } from './ModalHeader';\nimport TweetCardForm from '../forms/TweetCardForm';\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\n\nconst ModalTweet = ({ setModalTweetOpen }) => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    console.log(data);\n    reset();\n  };\n\n  return (\n    <>\n      <ModalContent>\n        <ModalHeader setModalTweetOpen={setModalTweetOpen} />\n        <div className='modal-content modal-tweet-content'>\n          <div className='tweet-form-wrapper'>\n            <TweetCardForm />\n          </div>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default ModalTweet;\n","import React from \"react\";\nimport DayTime from \"../../helper/TimeHelper\";\nimport TweetIconCount from \"./TweetIconCount\";\nimport TweetUserName2 from \"./TweetUserName2\";\nimport UserAvatar from \"./UserAvatar\";\n\nconst TweetBigCard = ({tweetInfo})=>{\n  return (\n    <div className=\"TweetBigCard\">\n      <div className=\"TweetUserInfo\">\n        <div className=\"TweetUserInfo-head\">\n          <UserAvatar \n            avatar={tweetInfo.User.avatar}\n          />\n          <TweetUserName2 \n            name={tweetInfo.User.name}\n            account={tweetInfo.User.account}\n          />\n        </div>\n        <p className='tweet-card-basic-description'>\n            {tweetInfo.description}\n        </p>\n        <p className=\"tweetDate\">{DayTime(tweetInfo.createdAt)}\n        </p>\n      </div>\n\n      <div className=\"TweetUserInfo\">\n          <span className=\"TweetUserInfo-replies\">\n            34 <span>回覆</span>\n          </span>\n          <span className=\"TweetUserInfo-likes\">\n            808 <span>喜歡次數</span>\n          </span>\n      </div>\n      <div className=\"TweetUserInfo\">\n        <TweetIconCount />\n      </div>\n      \n    </div>\n  )\n}\n\nexport default TweetBigCard;","import React from \"react\";\nimport ContainerColSec from \"../components/layout/ContainerColSec\";\nimport {HeaderUser} from \"../components/basic/Header\"\nimport TweetBigCard from \"../components/basic/TweetBigCard\";\nimport { useEffect,useState  } from \"react\";\nimport { getTweet } from \"../api/twitter\";\nimport FollowCardList from \"../components/user/FollowCardList\";\nimport { useAuth } from \"../components/context/AuthContext\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst TweetPage = ({ setModalTweetOpen })=>{\n  const [tweetInfo, setTweetInfo] = useState({id:\"\",UserId:\"\",description:\"\",createdAt:\"\",User:{}})\n  //這裡很奇怪只有他 要先設定一樣的結構\n  const { isAuthentical, currentMember } = useAuth()\n  const pathId = Number(useParams().id);\n  \n  useEffect(()=>{\n    const getTweetAsync = async()=>{\n      try{\n        const data = await getTweet(pathId)\n        setTweetInfo(data)\n      }catch(error){\n        console.log(error)\n      }\n    }\n    getTweetAsync()\n  },[])\n\n  return (\n    <ContainerColSec\n      role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        pageIndex={0}\n        {...currentMember}\n    >\n     <section className=\"section-outer-m col-7\">  \n       <div className=\"section-main-m\">\n          <HeaderUser \n            userAccountName='推文'\n          />\n          <TweetBigCard \n          tweetInfo={tweetInfo}\n          />          \n        </div>      \n      </section>\n      <section className='section-right col-3'>\n          <FollowCardList />\n        </section>\n    </ContainerColSec>\n  )\n}\n\nexport default TweetPage;","import { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport InputGroup from './InputGroup';\n\nconst RegisterForm = () => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    if (data.username.length === 0) {\n      return;\n    }\n    if (data.password.length === 0) {\n      return;\n    }\n\n    console.log(data);\n    reset();\n  };\n\n  return (\n    <div className='formLayout register-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='account'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'account is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='名稱'\n            type='text'\n            placeholder='請輸入名稱'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='email'\n            label='Email'\n            type='email'\n            placeholder='請輸入Email'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'email is required',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Entered value does not match email format',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='cpassword'\n            label='密碼再確認'\n            type='password'\n            placeholder='請再次輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              //@ 確認密碼做法？ (還沒有試)\n              //https://www.positronx.io/add-confirm-password-validation-in-react-with-hook-form/\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n        <div className='button-group-column'>\n          <button className='button-filled button-lg' type='submit'>\n            登入\n          </button>\n          <Link to='/login' className='button-link'>\n            取消\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\n\n// import svg\nimport iconLogo from '../assets/images/icon/logo.svg';\n\n// import custom components\nimport ContainerColOne from '../components/layout/ContainerColOne';\nimport RegisterForm from '../components/forms/RegisterForm';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegisterPage = () => {\n  const { isAuthentical } = useAuth();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    if (isAuthentical) {\n      console.log('s');\n      navigation('/main');\n    }\n  }, [navigation, isAuthentical]); //只要isAuthentical或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColOne>\n        <div className='login-container col-4 flex_col_cc'>\n          <div className='page-logo'>\n            <img\n              src={iconLogo}\n              alt='Alphitter Icon'\n              className='icon-logo cursor-point'\n            />\n          </div>\n          <h3 className='page-title'>建立你的帳號</h3>\n          <RegisterForm />\n        </div>\n      </ContainerColOne>\n    </>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n  // BrowserRouter as Router,\n  // Link,\n  Routes,\n  Route,\n  HashRouter,\n} from 'react-router-dom';\n\n//import css\nimport './scss/main.scss';\n\n// import component\nimport PageLayout from './components/layout/PageLayout';\n\n// import HomePage from './pages/HomePage';\nimport NestedUserPage from './pages/main/NestedUserPage';\nimport LoginPage from './pages/LoginPage';\nimport StoryBookPage from './pages/storybooks/StoryBookPage';\n// import AdminLoginPage from './pages/AdminLoginPage';\nimport AdminPage from './pages/AdminPage';\nimport SettingPage from './pages/SettingPage';\nimport UserPage from './pages/UserPage';\nimport UserOtherPage from './pages/UserOtherPage';\nimport UserFollowersPage from './pages/UserFollowersPage';\nimport MainPage from './pages/MainPage';\nimport AdminUsers from './pages/AdminUsers';\nimport Modal from './components/basic/Modal';\nimport ModalTweet from './components/basic/ModalTweet';\nimport TweetPage from './pages/TweetPage';\nimport RegisterPage from './pages/RegisterPage';\nimport { AuthProvider } from './components/context/AuthContext';\n\nfunction App({ router }) {\n  const [modalProOpen, setModalProOpen] = useState(false);\n  const [modalTweetOpen, setModalTweetOpen] = useState(false);\n  // console.log(`modalTweetOpen`, modalTweetOpen);\n  // const basename = process.env.PUBLIC_URL;\n\n  return (\n    <>\n      <HashRouter>\n        <AuthProvider>\n          <PageLayout>\n            <Routes>\n              <Route path='*' element={<LoginPage />}></Route>\n              <Route path='/storybook' element={<StoryBookPage />}></Route>\n              <Route path='/login' element={<LoginPage />}></Route>\n              {/* <Route path='/login/admin' element={<AdminLoginPage />}></Route> */}\n              <Route path='/login/admin' element={<AdminPage />}></Route>\n              <Route path='/register' element={<RegisterPage />}></Route>\n              <Route\n                path='/main'\n                element={<MainPage setModalTweetOpen={setModalTweetOpen} />}\n              ></Route>\n              <Route\n                path='/user/:id'\n                element={\n                  <UserPage\n                    setModalProOpen={setModalProOpen}\n                    setModalTweetOpen={setModalTweetOpen}\n                  />\n                }\n              ></Route>\n              <Route\n                path='/other'\n                element={\n                  <UserOtherPage\n                    setModalProOpen={setModalProOpen}\n                    setModalTweetOpen={setModalTweetOpen}\n                  />\n                }\n              ></Route>\n\n              <Route\n                path='/user/followers'\n                element={\n                  <UserFollowersPage\n                    setModalProOpen={setModalProOpen}\n                    setModalTweetOpen={setModalTweetOpen}\n                  />\n                }\n              ></Route>\n\n              <Route\n                path='/main/tweet/:id'\n                element={<TweetPage setModalTweetOpen={setModalTweetOpen} />}\n              ></Route>\n              <Route\n                path='/setting'\n                element={<SettingPage setModalTweetOpen={setModalTweetOpen} />}\n              ></Route>\n              <Route path='/admin/users' element={<AdminUsers />}></Route>\n              <Route path='/main/self2' element={<NestedUserPage />}></Route>\n            </Routes>\n            {modalTweetOpen && (\n              <ModalTweet setModalTweetOpen={setModalTweetOpen} />\n            )}\n            {modalProOpen && <Modal setModalProOpen={setModalProOpen} />}\n          </PageLayout>\n        </AuthProvider>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}