{"version":3,"sources":["components/layout/PageLayout.jsx","pages/main/NestedUserPage.jsx","assets/images/icon/logo.svg","components/layout/ContainerColOne.jsx","components/forms/InputGroup.jsx","api/auth.js","components/context/AuthContext.jsx","components/forms/LoginForm.jsx","pages/LoginPage.jsx","components/basic/Tab.jsx","pages/storybooks/StoryBookPage.jsx","components/basic/SecLeftNev.jsx","components/layout/ContainerColSec.jsx","pages/AdminPage.jsx","components/forms/SettingForm.jsx","assets/images/icon/back.svg","components/basic/Header.jsx","pages/SettingPage.jsx","api/twitter.js","assets/images/icon/avatar.svg","components/basic/UserAvatar.jsx","components/basic/TweetUserName2.jsx","components/basic/FollowCard.jsx","components/user/FollowCardList.jsx","helper/TimeHelper.jsx","components/basic/TweetUserName3.jsx","components/basic/TweetCardReply.jsx","components/user/ReplyLists.jsx","assets/images/icon/like-filled.svg","assets/images/icon/reply.svg","assets/images/icon/like.svg","components/basic/TweetIconCount.jsx","components/basic/TweetCardBasic.jsx","components/user/TweetsLists.jsx","components/basic/TweetCardLike.jsx","components/user/LikeLists.jsx","assets/images/bk.jpg","components/basic/UserBk.jsx","components/basic/ProfileCard.jsx","api/userinfo.js","components/basic/ModalContent.jsx","assets/images/icon/close.svg","components/basic/ModalHeader.jsx","components/forms/ReplyCardForm.jsx","components/basic/ReplyCard.jsx","components/basic/ModalReply.jsx","pages/UserPage.jsx","assets/images/icon/message.svg","assets/images/icon/notice.svg","components/basic/ProfileOtherCard.jsx","pages/UserOtherPage.jsx","pages/UserFollowersPage.jsx","components/forms/TweetCardForm.jsx","pages/MainPage.jsx","assets/images/icon/post.svg","components/basic/ProfileMiniCard.jsx","api/admin.js","pages/AdminUsers.jsx","assets/images/icon/addphoto.svg","components/basic/Modal.jsx","components/basic/ModalTweet.jsx","components/basic/TweetBigCard.jsx","components/basic/TweetRepliesCard.jsx","components/user/TweetRepliesList.jsx","pages/TweetPage.jsx","components/forms/RegisterForm.jsx","pages/RegisterPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageLayout","_ref","children","_jsx","_Fragment","className","NestedUserPage","ContainerColOne","InputGroup","_errors$name","_errors$name2","_errors$name3","_errors$name4","_errors$name5","_errors$name6","name","label","type","placeholder","errors","register","maxLength","validationSchema","watch","_jsxs","_objectSpread","message","length","login","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","account","password","_yield$axios$post","data","wrap","_context","prev","next","axios","post","concat","sent","token","abrupt","success","t0","console","error","stop","_x","apply","arguments","defaultAuthContext","isAuthentic","currentMember","logout","AuthContext","createContext","useAuth","useContext","AuthProvider","_useState","useState","_useState2","_slicedToArray","setIsAuthentic","_useState3","_useState4","payload","setPayload","pathname","useLocation","_useState5","_useState6","modalReplyOpen","setModalReplyOpen","_useState7","_useState8","tweetId","setTweetId","_useState9","_useState10","member","setMember","useEffect","checkTokenIsValid","authToken","tempPayload","localStorage","getItem","jwt","Provider","value","id","avatar","_login2","_callee2","user","_yield$_login","_context2","log","setItem","_logout","_callee3","_context3","removeItem","LoginForm","_useForm","useForm","handleSubmit","reset","formState","_useAuth","navigate","useNavigate","onSubmit","username","required","minLength","Link","to","LoginPage","navigation","src","iconLogo","alt","TabThreeGroup","tabIndex","setTabIndex","join","onClick","TabTwoGroup","pathName","LayoutNav","SecLeftNav","role","setModalTweetOpen","pageIndex","memberId","ContainerColSec","AdminPage","SettingForm","pattern","HeaderMain","pageTitle","HeaderUser","userAccountName","userTweetsLength","iconBack","SettingPage","baseUrl","axiosInstance","create","interceptors","request","use","config","headers","getTweets","res","get","getTopUsers","getTweet","_ref3","pathId","getUserTweets","_ref4","_callee4","_context4","_x2","getUserLikedTweets","_ref5","_callee5","_context5","_x3","getUserRepliedTweets","_ref6","_callee6","_context6","_x4","createTweet","_ref7","_callee7","UserId","description","_context7","_x5","getTweetReplies","_ref8","_callee8","_context8","_x6","repliedTweet","_ref9","_callee9","TweetId","comment","_context9","_x7","userFollowing","_ref10","_callee10","_context10","_x8","cancelFollow","_ref11","_callee11","followingId","_context11","delete","_x9","UserAvatar","userId","e","stopPropagation","Defaultavatar","TweetUserName2","FollowCard","props","Object","assign","_objectDestructuringEmpty","_props$onClick","call","clsx","active","isFollowing","FollowCardList","setPathId","users","setUsers","handleClickCard","undefined","getUsersAsync","map","DayTime","a","dayjs","extend","relativeTime","locale","subtract","anHourAgo","fromNow","timeFromNow","TweetUserName3","time","TweetCardReply","User","createdAt","Tweet","ReplyLists","userReplied","setUserReplied","getUserRepliedTweetsAsync","tweet","TweetIconCount","likesCount","repliesCount","isLiked","reply","likefilled","like","TweetCardBasic","handleClick","TweetsLists","tweets","TweetCardLike","_props$onClick2","LikeLists","userLiked","setUserLiked","getUserLikedTweetsAsync","UserBk","bkUrl","DefaultBk","ProfileCard","introduction","banner","followersCount","followingsCount","setModalProOpen","getUserInfo","updateUserInfo","put","ModalContent","ModalHeader","iconClose","ModalHeaderIcon","form","TweetCardForm","tweetInfo","ReplyCard","ModalReply","Likes","replies","updatedAt","setTweetInfo","getTweetAsync","ReplyCardForm","UserPage","Number","useParams","modalTweetOpen","modalProOpen","userInfo","setUserInfo","userTweets","setUserTweets","getUserInfoAsync","_userInfo","getUserTweetsAsync","switchContext","ProfileOtherCard","userIsFollowing","iconMessage","iconNotice","UserOtherPage","setUserIsFollowing","handleUserISFollowing","UserFollowersPage","onAddTweet","onModalAddTweet","setTweets","MainPage","profile","setProfile","setIsTweetsLoaded","getTweetsAsync","handleAddTweets","TweetLists","ProfileMiniCard","iconPost","iconLike","getAllUsers","AdminUsers","allUsers","setAllUsers","getAllUserAsync","_allUsers","allUser","defaultBk","Modal","defaultValues","setValue","_profile","setImageNewUrl_bk","setImageNewUrl","addData","uploadedImage","useRef","imageUploader","imageUploader_bk","imageNewUrl","imageNewUrl_bk","handleImageUpload","target","curr_target","file","files","reader","FileReader","current","onload","result","readAsDataURL","iconCamera","ref","click","alert","accept","onChange","style","display","ModalTweet","TweetBigCard","TweetRepliesCard","TweetRepliesLists","tweetReplies","TweetPage","setTweetReplies","getTweetRepliesAsync","TweetRepliesList","RegisterForm","RegisterPage","App","router","HashRouter","Routes","Route","path","element","StoryBookPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.713636f8.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageLayout = ({ children }) => {\n  return (\n    <>\n      <div className='container-fluid'>\n        <div className='wrapper'>{children}</div>\n      </div>\n    </>\n  );\n};\n\nexport default PageLayout;\n","import React from 'react';\n\nconst NestedUserPage = () => {\n  return (\n    <div className='container-fluid'>\n      <h1>NestedUserPage l2 Page</h1>\n    </div>\n  );\n};\n\nexport default NestedUserPage;\n","export default __webpack_public_path__ + \"static/media/logo.89093620.svg\";","import React from 'react';\n\nconst ContainerColOne = ({ children }) => {\n  return (\n    <>\n      {/* <div className='row'> */}\n      <main className='container_one col-12'>{children}</main>\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default ContainerColOne;\n","import React from 'react';\n\nconst InputGroup = ({\n  name,\n  label,\n  type,\n  placeholder,\n  errors,\n  register,\n  maxLength,\n  // required,\n  validationSchema,\n  watch,\n}) => {\n  return (\n    <>\n      {' '}\n      <div className='input_group'>\n        <label>{label}</label>\n        <input\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          {...register(name, validationSchema)}\n          maxLength={maxLength || null}\n        />\n      </div>\n      <div className='error-message-group'>\n        {errors && errors[name]?.type === 'required' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n        {errors && errors[name]?.type === 'minLength' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n        {errors && errors[name]?.type === 'pattern' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n\n        {/* <span className='limit-num'>15/50</span> */}\n        <span className='limit-num'>\n          {watch(name) ? watch(name).length : '0'}/50\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default InputGroup;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3004';\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nexport const login = async ({ account, password }) => {\n  try {\n    const { data } = await axios.post(`${baseUrl}/signin`, {\n      account,\n      password, //解構拿出data\n    });\n    const { token } = data.data; //解構拿出authToken\n    // console.log('Token: ',token )\n    // console.log('data:',data)\n    if (token) {\n      return { success: true, ...data };\n    }\n    return data;\n  } catch (error) {\n    console.error('[Login Failed]:', error);\n  }\n};\n","import { login } from '../../api/auth';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as jwt from 'jsonwebtoken';\nimport { set } from 'react-hook-form';\n\nconst defaultAuthContext = {\n  isAuthentic: false,\n  currentMember: null,\n  login: null,\n  logout: null,\n  register: null,\n};\n\nconst AuthContext = createContext(defaultAuthContext);\n\nexport const useAuth = () => useContext(AuthContext);\nexport const AuthProvider = ({ children }) => {\n  const [isAuthentic, setIsAuthentic] = useState(null);\n  const [payload, setPayload] = useState(null);\n  //頁面刷新時，確認是誰\n  const { pathname } = useLocation();\n  const [modalReplyOpen, setModalReplyOpen] = useState(false);\n  const [tweetId, setTweetId] = useState(null);\n  const [member, setMember] = useState({});\n\n  // 封裝檢查token\n  useEffect(() => {\n    const checkTokenIsValid = async () => {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        setIsAuthentic(false);\n        setPayload(null);\n        return;\n      }\n      // @ checkPermission 功能\n      // const result = await checkPermission(authToken);\n      // if (result) {\n      //   setisAuthentic(true);\n      //   const tempPayload = jwt.decode(authToken);\n      //   setPayload(tempPayload);\n      // } else {\n      //   setisAuthentic(false);\n      //   setPayload(null);\n      // }\n\n      //@ 沒有checkPermission的替代過度版 可以暫時只有檢視是否有token+token解析\n      if (authToken) {\n        setIsAuthentic(true);\n        const tempPayload = jwt.decode(authToken);\n        setPayload(tempPayload);\n        setMember(tempPayload);\n        return;\n      }\n    };\n    checkTokenIsValid();\n  }, [pathname]);\n\n\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthentic,\n        currentMember: payload && {\n          id: payload.id,\n          name: payload.name,\n          avatar: payload.avatar,\n        },\n        setModalReplyOpen,\n        modalReplyOpen,\n        setTweetId,\n        tweetId,\n        member,\n        login: async (user) => {\n          console.log('ok');\n          const { success, data } = await login({\n            account: user.account,\n            password: user.password,\n          });\n          const token = data.token;\n          const tempPayload = jwt.decode(token);\n          // console.log('data',data)\n          // console.log('tempPayload: ', tempPayload )\n          //{id: 14, account: 'user1', email: 'user1@example.com', name: 'user1 name', avatar: null, …}\n          if (tempPayload) {\n            setIsAuthentic(true);\n            localStorage.setItem('authToken', token);\n            setPayload(tempPayload);\n            //等有test-token CheckPermission 完後才導入使用者資訊\n            setMember(tempPayload);\n          } else {\n            setIsAuthentic(false);\n          }\n          return success;\n        },\n        logout: async () => {\n          localStorage.removeItem('authToken');\n          setIsAuthentic(false);\n          setPayload(null);\n        }\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\n// import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate } from 'react-router-dom';\nimport InputGroup from './InputGroup';\nimport { useAuth } from '../context/AuthContext';\n\nconst LoginForm = () => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n  const { login, isAuthentic } = useAuth();\n  const navigate = useNavigate();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    if (data.username.length === 0) {\n      return;\n    }\n    if (data.password.length === 0) {\n      return;\n    }\n    const success = await login({\n      account: data.username,\n      password: data.password,\n    });\n    console.log('Login: ', success);\n    reset();\n  };\n\n  useEffect(() => {\n    if (isAuthentic) {\n      navigate('/main');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <div className='formLayout login-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n        <button className='button-filled button-lg' type='submit'>\n          登入\n        </button>\n        <div className='button-group-row login-button-group'>\n          <Link to='/register' className='button-link'>\n            註冊\n          </Link>\n          <span>・</span>\n          <Link to='/login/admin' className='button-link'>\n            後台登入\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\n\n// import svg\nimport iconLogo from '../assets/images/icon/logo.svg';\n\n// import custom components\nimport ContainerColOne from '../components/layout/ContainerColOne';\nimport LoginForm from '../components/forms/LoginForm';\n// import { useState } from 'react';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const { isAuthentic } = useAuth();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    if (isAuthentic) {\n      navigation('/main');\n    }\n  }, [navigation, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColOne>\n        <div className='login-container col-4 flex_col_cc'>\n          <div className='page-logo'>\n            <img\n              src={iconLogo}\n              alt='Alphitter Icon'\n              className='icon-logo cursor-point'\n            />\n          </div>\n          <h3 className='page-title'>登入 Alphitter</h3>\n          <LoginForm />\n        </div>\n      </ContainerColOne>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\n\n// import svg\n// import iconBack from '../../assets/images/icon/back.svg';\n\n// tab styles\n\nconst TabThreeGroup = ({ tabIndex, setTabIndex }) => {\n  return (\n    <div className='tab-group'>\n      <div\n        className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('0')}\n      >\n        推文\n      </div>\n      <div\n        className={['tab', tabIndex === '1' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('1')}\n      >\n        回覆\n      </div>\n      <div\n        className={['tab', tabIndex === '2' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('2')}\n      >\n        喜歡的內容\n      </div>\n    </div>\n  );\n};\n\nconst TabTwoGroup = ({ tabIndex, setTabIndex, pathName }) => {\n  // if (pathName === 'followings') {\n  //   setTabIndex('1');\n  // }\n\n  return (\n    <div className='tab-group'>\n      <div\n        className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')}\n        tabIndex='0'\n        onClick={() => setTabIndex('0')}\n      >\n        追蹤者\n      </div>\n      <div\n        className={['tab', tabIndex === '1' ? 'active' : ''].join(' ')}\n        tabIndex='1'\n        onClick={() => setTabIndex('1')}\n      >\n        正在追隨\n      </div>\n    </div>\n  );\n};\n\nexport { TabThreeGroup, TabTwoGroup };\n","import React from 'react';\n// import custom components\nimport { Link } from 'react-router-dom';\nimport { TabThreeGroup, TabTwoGroup } from '../../components/basic/Tab';\n\n//import css\nimport '../../scss/storybooks/storyBookPage.scss';\n\nconst LayoutNav = () => {\n  return (\n    <>\n      <div className='storybook-layout'>\n        <div className='storybook-container'>\n          <h2>Storybooks</h2>\n          <h4 className='page-sec-title'>\n            === Buttons-元件本身目前沒有製作上下margin，是本表顯示用 ===\n          </h4>\n\n          <div className='flex_col_cc comp-container'>\n            <button className='button-filled button-lg' type='submit'>\n              登入\n            </button>\n            <button className='button-sm button-m active' type='submit'>\n              推文\n            </button>\n            <button className='button-bg button-m active' type='submit'>\n              儲存\n            </button>\n            <button className='button-md button-m active' type='submit'>\n              正在追蹤\n            </button>\n            <button className='button-md button-m' type='submit'>\n              編輯個人資料\n            </button>\n            <Link className='button-link' type='submit'>\n              取消\n            </Link>\n          </div>\n\n          <h4 className='page-sec-title'>\n            === tabs -元件本身綁定切換內容，這頁的tab 點了會壞不要管他lol ===\n          </h4>\n          <TabThreeGroup />\n          <TabTwoGroup />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LayoutNav;\n","import iconLogo from '../../assets/images/icon/logo.svg';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\n// import svg\n// import iconHome from '../assets/images/icon/home.svg';\n\nconst SecLeftNav = ({ role, setModalTweetOpen, pageIndex, memberId}) => {\n  // className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')\n  const {logout,setModalReplyOpen} = useAuth()\n  const handleClick = () => {\n    logout();\n  };\n  return (\n    <>\n      <nav className='left-nav col-2'>\n        {/* <nav className='left-nav g-col-2'> */}\n        <div className='left-nav-link'>\n          <div className='left-nav-link-items'>\n            <Link\n              to={role === 'admin' ? '/admin' : '/main'}\n              className='link-logo'\n            >\n              <img\n                src={iconLogo}\n                alt='Alphitter Icon'\n                className='icon-logo cursor-point'\n              />\n            </Link>\n\n            <Link\n              to={role === 'admin' ? '/admin' : '/main'}\n              className='nav-link '\n            >\n              <span\n                className={[\n                  'nav-icon icon-home',\n                  pageIndex === 0 ? 'active' : '',\n                ].join(' ')}\n              ></span>\n              <p>{role === 'admin' ? '推文清單' : '首頁'}</p>\n            </Link>\n\n            <Link to={role === 'admin' ? '/admin/users' : `/user/${memberId}`} >\n              <span\n                className={[\n                  'nav-icon icon-user',\n                  pageIndex === 1 ? 'active' : '',\n                ].join(' ')}\n              ></span>\n              <p>{role === 'admin' ? '使用者列表' : '個人資料'}</p>\n            </Link>\n\n            {role !== 'admin' && (\n              <>\n                <Link to='/setting'>\n                  <span\n                    className={[\n                      'nav-icon icon-setting',\n                      pageIndex === 2 ? 'active' : '',\n                    ].join(' ')}\n                  ></span>\n                  <p>設定</p>\n                </Link>\n\n                <button\n                  className='button-filled button-lg button-tweet'\n                  type='submit'\n                  onClick={() => setModalTweetOpen(true)}\n                  // onClick={()=> setModalActive(!)}\n                >\n                  <span className='button-tweet-view'>推文</span>\n                  <span className='button-tweet-view-m'></span>\n                </button>\n              </>\n            )}\n          </div>\n          <div className='left-nav-link-logout'>\n            <Link to='/login' onClick={handleClick}>\n              <span className='nav-icon icon-logout'></span>\n              <p>登出</p>\n            </Link>\n          </div>\n          {/* //06/07 與keifer衝突區塊 */}\n          {/* <div className='menu-link-logout'>\n            <Link to='/login'>\n              <span className='nav-icon icon-logout '></span>\n              登出\n            </Link>\n          </div> */}\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default SecLeftNav;\n","import React from 'react';\nimport SecLeftNav from '../basic/SecLeftNev';\n// import Modal from '../basic/Modal';\n\nconst ContainerColSec = ({\n  children,\n  role,\n  setModalTweetOpen,\n  pageIndex,\n  memberId,\n}) => {\n  return (\n    <>\n      {/* bootstrap gutter system needs come after row => row gx-4 */}\n      <main className='container_sec'>\n        {/* <main className='container_sec grid'> */}\n        <SecLeftNav\n          role={role}\n          setModalTweetOpen={setModalTweetOpen}\n          pageIndex={pageIndex}\n          memberId={memberId}\n        />\n        {children}\n      </main>\n      {/* <Modal /> */}\n    </>\n  );\n};\n\nexport default ContainerColSec;\n","import React from 'react';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\n// import SecLeftNav from '../components/SecLeftNav';\n\nconst AdminPage = () => {\n  return (\n    <>\n      <ContainerColSec role='admin' pageIndex={0}>\n        <div className='section-outer-l col-10'>\n          <div className='section-main-l'>\n            <h1> AdminPage</h1>\n          </div>\n        </div>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default AdminPage;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport InputGroup from './InputGroup';\nimport { useAuth } from '../context/AuthContext';\n// import { getUserTweets } from '../api/twitter';\n\nconst SettingForm = () => {\n  const navigate = useNavigate();\n  const { isAuthentic, member } = useAuth();\n\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    console.log(data);\n    reset();\n  };\n  console.log(member.id);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n    // console.log(member);\n  }, [navigate, isAuthentic, member]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <div className='formLayout setting-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='account'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'account is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='名稱'\n            type='text'\n            placeholder='請輸入名稱'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='email'\n            label='Email'\n            type='email'\n            placeholder='請輸入Email'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'email is required',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Entered value does not match email format',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='cpassword'\n            label='密碼再確認'\n            type='password'\n            placeholder='請再次輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              //@ 確認密碼做法？ (還沒有試)\n              //https://www.positronx.io/add-confirm-password-validation-in-react-with-hook-form/\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='button-group-row login-button-group'>\n          <button className='button-bg button-m active' type='submit'>\n            儲存\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SettingForm;\n","export default __webpack_public_path__ + \"static/media/back.de35b2eb.svg\";","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\n// import svg\nimport iconBack from '../../assets/images/icon/back.svg';\n\nconst HeaderMain = ({ pageTitle }) => {\n  return (\n    <div className='header-container header-main'>\n      <h5>{pageTitle}</h5>\n    </div>\n  );\n};\n\nconst HeaderUser = ({ userAccountName, userTweetsLength }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className='header-container'>\n      {/* <Link to='/main'> */}\n      <img\n        src={iconBack}\n        alt='Back to pre page'\n        className='icon-back cursor-point'\n        onClick={() => {\n          //@ 回上頁\n          navigate(-1);\n        }}\n      />\n      {/* </Link> */}\n\n      <div className='header-user-info'>\n        <h5>{userAccountName}</h5>\n        <p>{userTweetsLength} 推文</p>\n      </div>\n    </div>\n  );\n};\n\nexport { HeaderMain, HeaderUser };\n","import React from 'react';\nimport { useEffect } from 'react';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport SettingForm from '../components/forms/SettingForm';\nimport { HeaderMain } from '../components/basic/Header';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst SettingPage = ({ setModalTweetOpen }) => {\n  const { isAuthentic, currentMember } = useAuth(); // 取出需要的狀態與方法\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        pageIndex={2}\n        memberId={currentMember?.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderMain pageTitle='帳戶設定' />\n            <SettingForm />\n          </div>\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default SettingPage;\n","import axios from 'axios';\nimport { get } from 'react-hook-form';\n// const baseUrl = 'http://localhost:3004';\n\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n// ,  {\n//   headers: {\n//     'Content-Type': 'application/json',\n//     'Origin': 'https://leemengyun.github.io/'\n//   }}\n\n// ,{\n//       headers: {\n//         'Access-Control-Allow-Origin':'*',\n//         'Content-Type': 'application/json',\n//         'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\n//         'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n//         'Accept': 'application/json',\n//       }\n//     }\n\nexport const getTweets = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/tweets`); //watch的屬性名作為path\n    //console.log(res.data[0].data)//{status: 'success', data: {…}}data: {tweets: Array(7)}status: \"success\"[[Prototype]]: Object\n    return res.data; //{tweets: Array(54)}\n  } catch (error) {\n    console.log('[Get Tweets failed]:', error);\n  }\n};\n\nexport const getTopUsers = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/top`);\n    return res.data;\n  } catch (error) {\n    console.log('[get topUser failed]:', error);\n  }\n};\n\nexport const getTweet = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/tweets/${pathId}`);\n    return res.data;\n  } catch (error) {\n    console.log('[Get Tweet Failed]: ', error);\n  }\n};\n\n//取得User的推文\nexport const getUserTweets = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}/tweets`);\n    return res.data;\n  } catch (error) {\n    console.log('[Get UserTweets Failed!!]:', error);\n  }\n};\n//取得User Liked的推文\nexport const getUserLikedTweets = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}/likes`);\n    return res.data;\n  } catch (error) {\n    console.log('[Get getUserLikedTweets Failed!!]:', error);\n  }\n};\n\n//取得User Replied的推文\nexport const getUserRepliedTweets = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(\n      `${baseUrl}/users/${pathId}/replied_tweets`\n    );\n    return res.data;\n  } catch (error) {\n    console.log('[Get GetUserRepliedTweets Failed!!]:', error);\n  }\n};\n\n//新增 tweet\nexport const createTweet = async (payload) => {\n  try {\n    const { UserId, description } = payload;\n    const res = await axiosInstance.post(`${baseUrl}/tweets`, {\n      UserId,\n      description,\n    });\n    return res.data;\n  } catch (error) {\n    console.error('[CREATE a Tweet failed:]:', error);\n  }\n};\n\n//取得特定推文的所有回覆\nexport const getTweetReplies = async (pathId)=>{\n  try{\n    const res = await axiosInstance.get(`${baseUrl}/tweets/${pathId}/replies`)\n    return res.data\n  }catch(error){\n\n  }\n}\n\n\n//回覆貼文\nexport const repliedTweet = async (payload) => {\n  try {\n    const { UserId,TweetId, comment } = payload;\n    const res = await axiosInstance.post(`${baseUrl}/tweets/${TweetId}/replies`, {\n      UserId,\n      comment\n    });\n    console.log(res)\n    return res.data;\n  } catch (error) {\n    console.error('[Reply Tweet failed:]:', error);\n  }\n};\n\n\n//跟隨使用者\nexport const userFollowing = async (id) => {\n  try {\n    const res = await axiosInstance.post(`${baseUrl}/followships`, {\n      id\n    });\n    console.log(res)\n    return res.data;\n  } catch (error) {\n    console.error('[Following failed:]:', error);\n  }\n};\n//取消跟隨\nexport const cancelFollow = async (followingId) => {\n  try {\n    const res = await axiosInstance.delete(`${baseUrl}/followships/${followingId}`);\n    return res.data;\n  } catch (error) {\n    console.error('[Cancel Follow failed:]:', error);\n  }\n};\n\n","export default __webpack_public_path__ + \"static/media/avatar.bd02c62f.svg\";","import React from 'react';\nimport Defaultavatar from '../../assets/images/icon/avatar.svg';\n\nconst UserAvatar = ({avatar,onClick,userId}) =>{\n    return (\n      <> \n        <div className='avatar' onClick={(e)=>{ \n          onClick?.({userId})\n          e.stopPropagation()\n          //因為在最內層點擊事件 外層有相對應的事件 也會跟著觸發 因此加入e.stopPropagation()來避免外層觸發的可能\n          }}>\n          <img\n            src={avatar || Defaultavatar}\n            alt='userAvatar'\n            className='user-avatar'\n          />\n        </div>\n      </>\n    )\n  }\n\n export default UserAvatar;\n\n","import React from \"react\";\n\nconst TweetUserName2 = ({name, account})=>{\n    return (\n        <div className='tweet-username-2'>\n          <span className='user-name'>\n            {name}\n          </span>\n          <span className='user-account'>\n            @{account}\n          </span>\n        </div>\n    )\n  }\n\n  export default TweetUserName2;","import React from 'react';\nimport UserAvatar from './UserAvatar';\nimport TweetUserName2 from './TweetUserName2';\nimport clsx from 'clsx';\n\nconst FollowCard = ({...props}) => {\n  const id = props.id\n  return (\n    <div className='follow-card'>\n        <div className='follow-card-info'>\n        <UserAvatar \n        avatar={props.avatar} \n        userId={id} \n        onClick={({userId})=>{props.onClick?.({userId})}}\n        />\n        <TweetUserName2 name={props.name} account={props.account} />\n      </div>\n      <div className='follow-card-button'>\n        <button className={`${clsx('', {active: props.isFollowing}) } button-md button-m`} type='submit'>\n          {props.isFollowing ? '正在跟隨' : '跟蹤'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowCard;\n\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTopUsers } from '../../api/twitter';\nimport FollowCard from '../basic/FollowCard';\nimport { useAuth } from '../context/AuthContext';\n// import { useAuth } from '../context/AuthContext';\n// import iconLogo from '../assets/images/icon/logo.svg';\n// import svg\n// import iconHome from '../assets/images/icon/home.svg';\n\nconst FollowCardList = ({setPathId}) => {\n  const [users, setUsers] = useState([]);\n  const { member } = useAuth()\n  const navigate = useNavigate()\n  \n  \n  const handleClickCard = ({ userId }) => {\n    userId === member.id\n      ? navigate(`/user/${userId}`)\n      : userId !== undefined && navigate(`/other/${userId}`);\n      setPathId(userId)\n  };\n\n\n  useEffect(() => {\n    const getUsersAsync = async () => {\n      try {\n        const data = await getTopUsers();\n        setUsers(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUsersAsync();\n  }, []);\n\n  return (\n    <>\n      <div className='follow-list-container'>\n        <div className='title-secondary'>\n          <h4>推薦跟隨</h4>\n        </div>\n        {users.map((user) => {\n          return <FollowCard \n          key={user.id} \n          {...user} \n          onClick={handleClickCard}\n          />;\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default FollowCardList;\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/zh-tw';\n\n\nexport default function DayTime (a){\n    dayjs.extend(relativeTime);\n    dayjs.locale('zh-tw')\n    const anHourAgo = (a)=> dayjs(a).subtract(1, 'hour');\n    const timeFromNow = (a) => anHourAgo(a).fromNow()\n    \n    //查看現在時間\n    // const now = dayjs();\n    // const format = now.format('HH:mm')\n    return  timeFromNow(a)\n }\n    \n  ","import React from \"react\";\nimport DayTime from \"../../helper/TimeHelper\";\n//時間會在更新\nconst TweetUserName3 = ({name, account , time})=>{\n    // const relativeTime = timeHelper.relativeTimeFromNow(time)\n    // console.log(relativeTime)\n    return (    \n        <div className='tweet-username-3'>\n          <span className='user-name'>\n            {name}\n          </span>\n          <span className='user-account'>\n            @{account}\n          </span>\n          <span className='user-time'> ·{DayTime(time)}</span>\n        </div>\n    )\n  }\n\n  export default TweetUserName3;","import React from 'react';\nimport TweetUserName3 from './TweetUserName3';\nimport UserAvatar from './UserAvatar';\nconst TweetCardReply = ({ ...props }) => {\n  return (\n    <div className='tweet-card-basic'>\n      <UserAvatar avatar={props.User.avatar} />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3\n          name={props.User.name}\n          account={props.User.account}\n          time={props.createdAt}\n        />\n        <p className='tweet-card-basic-reply'>\n          回覆\n          <span className='reply-user-account'>@{props.Tweet.User.name}</span>\n        </p>\n        <p className='tweet-card-basic-description'>{props.Tweet.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardReply;\n","import React, { useEffect, useState } from 'react';\nimport { getUserRepliedTweets } from '../../api/twitter';\nimport TweetCardReply from '../basic/TweetCardReply';\n\nconst ReplyLists = ({ pathId, onClick }) => {\n  const [userReplied, setUserReplied] = useState([]);\n\n  useEffect(() => {\n    const getUserRepliedTweetsAsync = async () => {\n      try {\n        const data = await getUserRepliedTweets(pathId);\n        setUserReplied(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserRepliedTweetsAsync();\n  }, [pathId]);\n\n  return (\n    <div className='TweetLists'>\n      {userReplied.map((tweet) => {\n        return (\n          <TweetCardReply\n            key={tweet.id}\n            {...tweet}\n            // onClick={({id,userId})=>{\n            //   onClick?.({id,userId})\n            // }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ReplyLists;\n","export default __webpack_public_path__ + \"static/media/like-filled.a23cc5e1.svg\";","export default __webpack_public_path__ + \"static/media/reply.1d9be076.svg\";","export default __webpack_public_path__ + \"static/media/like.81043da8.svg\";","import React from \"react\";\nimport like from '../../assets/images/icon/like-filled.svg'\nimport reply from '../../assets/images/icon/reply.svg'\nimport likefilled from '../../assets/images/icon/like.svg'\nimport clsx from \"clsx\";\nimport { useAuth } from \"../context/AuthContext\";\nconst TweetIconCount =({likesCount,repliesCount,isLiked,id}) => {\n    const { setModalReplyOpen,setTweetId} = useAuth();\n    return(\n      <div className='tweet-card-icon-count'>\n          <div className='tweet-card-reply-count' onClick={(e)=>{ \n            setTweetId(id)\n            setModalReplyOpen(true)\n            e.stopPropagation()\n            }}>\n            <img src={reply} alt='reply' className='reply-icon'\n            />\n            <span className='tweet-count'>\n              {repliesCount}\n            </span>\n          </div>\n          <div className='tweet-card-like-count'>\n           <img src={isLiked ?  likefilled : like} alt='like' className={`${clsx('', {active: isLiked})} like-icon`}\n           />\n          <span className = 'tweet-count' >\n            {likesCount}\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  export default TweetIconCount;","\nimport React from \"react\";\nimport UserAvatar from \"./UserAvatar\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport TweetIconCount from \"./TweetIconCount\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst TweetCardBasic = ({ ...props }) => {\n  const navigate = useNavigate();\n  const tweetId = props.id\n  const handleClick = (tweetId)=>{\n    tweetId && navigate(`/main/tweet/${tweetId}`);\n  }\n\n  return (\n    <div className='tweet-card-basic' onClick={(e)=>{\n      handleClick(tweetId)\n      e.stopPropagation()\n      }}>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId}\n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3 \n          name={props.User.name} \n          account={props.User.account} \n          time={props.createdAt}\n        />\n          <p className='tweet-card-basic-description'>\n            {props.description}\n          </p>\n          <TweetIconCount \n            likesCount={props.likesCount} \n            repliesCount={props.repliesCount}\n            isLiked={props.isLiked}\n            id={tweetId}\n          />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardBasic;\n","import React from 'react';\nimport TweetCardBasic from '../basic/TweetCardBasic';\nimport { useEffect } from 'react';\n\nconst TweetsLists = ({ tweets, onClick }) => {\n  return (\n    <div className='TweetLists'>\n      {tweets.map((tweet) => {\n        return (\n          <TweetCardBasic\n            key={tweet.id}\n            {...tweet}\n            onClick={({ tweetId, userId }) => {\n              onClick?.({ tweetId, userId });\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TweetsLists;\n","\nimport React from \"react\";\nimport UserAvatar from \"./UserAvatar\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport TweetIconCount from \"./TweetIconCount\";\n\n\nconst TweetCardLike = ({ ...props }) => {\n  // const value ={\n  //   tweetId: props.id,\n  //   userId: props.UserId,\n  // }\n  return (\n    <div className='tweet-card-basic' onClick={()=>{\n      props.onClick?.({tweetId: props.id})\n      }}>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId}\n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3 \n          name={props.User.name} \n          account={props.User.account} \n          time={props.Tweet.createdAt}\n        />\n          <p className='tweet-card-basic-description'>\n            {props.Tweet.description}\n          </p>\n          <TweetIconCount \n            likesCount={props.likesCount} \n            repliesCount={props.repliesCount}\n            isLiked={props.isLiked}\n          />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardLike;\n","import React, { useEffect,useState } from 'react';\nimport { getUserLikedTweets } from '../../api/twitter';\nimport TweetCardLike from '../basic/TweetCardLike';\n\nconst LikeLists = ({ pathId, onClick }) => {\n  const [userLiked,setUserLiked] = useState([])\n  \n  useEffect(()=>{\n    const getUserLikedTweetsAsync = async()=>{\n      try{\n        const data = await getUserLikedTweets(pathId)\n        setUserLiked(data)\n      }catch(error){\n        console.log(error)\n      }\n    }\n    getUserLikedTweetsAsync()\n  },[])\n\n\n  return (\n    <div className='TweetLists'>\n      {userLiked.map((tweet)=>{\n        return <TweetCardLike \n          key={tweet.id}\n          {...tweet}\n          onClick={({tweetId,userId})=>{\n            onClick?.({tweetId,userId})\n          }}\n        />\n   })}\n    </div>\n  );\n};\n\nexport default LikeLists;\n","export default __webpack_public_path__ + \"static/media/bk.953d3799.jpg\";","import React from 'react';\nimport DefaultBk from '../../assets/images/bk.jpg';\n\nconst UserBk = ({ bkUrl }) => {\n  return (\n    <>\n      <div className='profile-bk-clip'>\n        <img\n          src={bkUrl || DefaultBk}\n          alt='mountain pic'\n          className='profile-bk-image'\n        />\n      </div>\n    </>\n  );\n};\n\nexport default UserBk;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\n// import iconMessage from '../../assets/images/icon/message.svg';\n// import iconNotice from '../../assets/images/icon/notice.svg';\n\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileCard = ({\n  name,\n  account,\n  introduction,\n  avatar,\n  banner,\n  followersCount,\n  followingsCount,\n  setModalProOpen,\n}) => {\n  return (\n    <>\n      <div className='profile-card'>\n        <UserBk bkUrl={banner} />\n        <UserAvatar avatar={avatar} />\n        <div className='profile-btn-group'>\n          {/* <img\n            src={iconMessage}\n            alt='icon of message'\n            className='icon-round icon-message icon-round cursor-point'\n          /> */}\n          {/* <img\n            src={iconNotice}\n            alt='icon of Notice'\n            className='icon-round icon-notice icon-round cursor-point'\n          /> */}\n          <button\n            className='button-md button-m'\n            onClick={() => setModalProOpen(true)}\n          >\n            編輯個人資料\n          </button>\n        </div>\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n          <p className='user-desc'>{introduction}</p>\n        </div>\n        <div className='user-follow-info'>\n          <Link to='/user/followers'>\n            <p>\n              {followersCount} 個 <span>跟隨中</span>\n            </p>\n          </Link>\n\n          <Link to='/user/followers'>\n            <p>\n              {followingsCount} 位<span>跟隨者</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileCard;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3004';\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n//要記得export外面才能用\nexport const getUserInfo = async (pathId) => {\n  try {\n    // 獲得todo end point\n    // const res = await axios.get(`${baseUrl}/userinfo`);\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}`);\n\n    //server 回傳的物件會包在data,所以一定要用.data才會拿到對的資料\n    // console.log(res.data.data);\n    // console.log(res)\n    return res.data;\n  } catch (error) {\n    console.error('[getUser Info failed]', error);\n  }\n};\n\n// 更新個人資料\nexport const updateUserInfo = async (payload) => {\n  try {\n    const { id, data } = payload;\n    console.log({ payload });\n    const res = await axiosInstance.put(`${baseUrl}/users/${id}`, {\n      // 這裡的data是前面打包的\n      //name, introduction, avatar,banner\n      name: data.name,\n      introduction: data.introduction,\n      avatar: data.avatar,\n      banner: data.banner,\n    });\n\n    //server 回傳的物件會包在data,所以一定要用.data才會拿到對的資料\n    console.log('res data', res.data);\n    return res.data;\n  } catch (error) {\n    console.error('[getUser Info failed]', error);\n  }\n};\n","const ModalContent = ({ children }) => {\n  return (\n    <>\n      <div className='modal-outer-container modal-transparent-bk'>\n        <div className='modal-flex-box'>\n          <div className='modal-container'>{children}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalContent;\n","export default __webpack_public_path__ + \"static/media/close.8d623dc5.svg\";","import React from 'react';\n\n// import svg\nimport iconClose from '../../assets/images/icon/close.svg';\n\nconst ModalHeader = ({ setModalTweetOpen, setModalReplyOpen }) => {\n  return (\n    <>\n      <div className='modal-header'>\n        <img\n          src={iconClose}\n          alt='icon of close button'\n          className='icon-close'\n          onClick={() => {\n            setModalTweetOpen?.(false);\n            setModalReplyOpen?.(false);\n          }}\n        />\n      </div>\n    </>\n  );\n};\nconst ModalHeaderIcon = ({ setModalProOpen, onSubmit }) => {\n  return (\n    <>\n      <div className='modal-header modal-header-with-btn'>\n        <img\n          src={iconClose}\n          alt='icon of close button'\n          className='icon-close'\n          onClick={() => setModalProOpen(false)}\n        />\n        <h5>編輯個人資料</h5>\n        <button\n          className='button-md button-m active'\n          form='hook-form'\n          type='submit'\n\n          // onClick={onSubmit}\n          //  type='submit'\n        >\n          儲存\n        </button>\n      </div>\n    </>\n  );\n};\nexport { ModalHeader, ModalHeaderIcon };\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { repliedTweet } from '../../api/twitter';\n\n// import InputGroup from './InputGroup';\nimport UserAvatar from '../basic/UserAvatar';\nimport { useAuth } from '../context/AuthContext';\n// import testAvatar from '../../assests/images/avatar1.jpg';\n\nconst TweetCardForm = ({ avatar,tweetInfo }) => {\n  const { member,setModalReplyOpen} = useAuth();\n  const navigate = useNavigate()\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    // watch,\n  } = useForm();\n\n  const onSubmit = async(data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // alert('觸發onSubmit');\n    // console.log(data.description);\n    // setNewTweet(data);\n    // onAddTweet?.(data);\n    console.log(data)\n    console.log(tweetInfo)\n    const info = await repliedTweet({\n      UserId: member.id,\n      TweetId: tweetInfo.id,\n      comment:data.description\n    })\n    setModalReplyOpen(false)\n    navigate(`/main/tweet/${tweetInfo.id}`)\n    reset();\n  };\n\n  return (\n    <>\n      <div className='formLayout tweet-card-form'>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className='form-group-inner-wrapper'>\n            <UserAvatar avatar={avatar} />\n            <div className='textarea-group-container'>\n              <div className='grow-wrap'>\n                <textarea\n                  type='textarea'\n                  id='description'\n                  name='description'\n                  {...register('description', {\n                    required: true,\n                    maxLength: 250,\n                  })}\n                  placeholder='推你的回覆？'\n                  maxLength='250'\n                  className='tweet-text-area'\n                  // ref={textAreaRef}\n                  // onChange={onChange}\n                  // rows={1}\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            {errors.description && errors.description.type === 'required' && (\n              <span className='error'>This is required</span>\n            )}\n            <button className='button-md button-m active' type='submit'>\n              回覆\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TweetCardForm;\n","import React from \"react\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport UserAvatar from \"./UserAvatar\";\n\n\nconst ReplyCard = ({tweetInfo})=>{\n  return (\n    <div className='tweet-card-basic'>\n      <UserAvatar avatar={tweetInfo.User.avatar} />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3\n          name={tweetInfo.User.name}\n          account={tweetInfo.User.account}\n          time={tweetInfo.createdAt}\n        />\n        <p className='tweet-card-basic-description'>{tweetInfo.description}</p>\n        <p className='tweet-card-basic-reply'>\n          回覆給\n          <span className='reply-user-account'>@{tweetInfo.User.account}</span>\n        </p>\n      </div>\n    </div> \n  )\n}\n//回覆的帳號相同\n\n\nexport default ReplyCard;","// import { useForm } from 'react-hook-form';\n\n// import component\nimport ModalContent from './ModalContent';\n// import UserAvatar from './UserAvatar';\n// import InputGroup from '../forms/InputGroup';\nimport { ModalHeader } from './ModalHeader';\nimport ReplyCardForm from '../forms/ReplyCardForm';\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport ReplyCard from './ReplyCard'\nimport { useEffect, useState } from 'react';\nimport { getTweet } from '../../api/twitter';\nimport { useAuth } from '../context/AuthContext';\n const ModalReply = () => {\n  const [tweetInfo, setTweetInfo] = useState({\n    id: '',\n    UserId: '',\n    description: '',\n    createdAt: '',\n    User: {},\n    Likes:{},\n    replies:{},\n    updatedAt: ''\n  });\n   const { isAuthentic, currentMember,setModalReplyOpen,tweetId } = useAuth();\n  \n  useEffect(() => {\n    const getTweetAsync = async () => {\n      try {\n        const data = await getTweet(tweetId);\n        setTweetInfo(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTweetAsync();\n  }, []);\n  \n  return (\n    <>\n      <ModalContent>\n        <ModalHeader setModalReplyOpen={setModalReplyOpen} />\n        <div className='modal-content modal-reply-content'>\n          <div className='tweet-reply-wrapper'>\n            <ReplyCard \n              tweetInfo={tweetInfo}\n            />\n          </div>\n          <div className='tweet-form-wrapper'>\n            <ReplyCardForm \n            avatar={currentMember.avatar}\n            tweetInfo={tweetInfo}\n            />\n          </div>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default ModalReply;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabThreeGroup } from '../components/basic/Tab';\n\nimport FollowCardList from '../components/user/FollowCardList';\nimport ReplyLists from '../components/user/ReplyLists';\nimport TweetsLists from '../components/user/TweetsLists';\nimport LikeLists from '../components/user/LikeLists';\nimport ProfileCard from '../components/basic/ProfileCard';\nimport { useParams } from 'react-router-dom';\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\nimport { getUserTweets } from '../api/twitter';\nimport ModalReply from '../components/basic/ModalReply';\n\nconst UserPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  const [pathId, setPathId] = useState(Number(useParams().id))\n\n  //取得網址:id\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const {\n    isAuthentic,\n    currentMember,\n    member,\n    modalReplyOpen,\n    modalTweetOpen,\n    modalProOpen,\n  } = useAuth();\n  // @串接 server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  const [userTweets, setUserTweets] = useState([]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n  // const dummyData = {\n  //   user: {\n  //     id: 1,\n  //     account: 'test-acount-1',\n  //     email: 'test1@example.com',\n  //     password: '$2a$10$MlmbvV0fDfjJuqipEU88W.KSo75y8Zc1C/hxA.rdG772HaALUiSQ.',\n  //     name: 'test-1',\n  //     avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //     introduction: 'Hi I am test No.1',\n  //     banner: 'https://i.imgur.com/3ZH4ZZ8.jpeg',\n  //     role: 'user',\n  //     createdAt: '2023-05-25T11:09:42.000Z',\n  //     updatedA: '2023-05-25T11:09:42.000Z',\n  //     tweets: [\n  //       {\n  //         id: 1,\n  //         userId: 1,\n  //         description: 'Test-Tweet-user1-1',\n  //         createdAt: '2023-05-25T11:09:42.000Z',\n  //         updatedAt: '2023-05-25T11:09:42.000Z',\n  //         isLiked: true,\n  //         repliesCount: 1,\n  //         user: {\n  //           name: 'test-1-name',\n  //           account: 'test-1-account',\n  //           avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //         },\n  //       },\n  //       {\n  //         id: 2,\n  //         userId: 1,\n  //         description: 'Test-Tweet-user1-1',\n  //         createdAt: '2023-05-25T11:09:42.000Z',\n  //         updatedAt: '2023-05-25T11:09:42.000Z',\n  //         isLiked: true,\n  //         repliesCount: 1,\n  //         user: {\n  //           name: 'test-1-name',\n  //           account: 'test-1-account',\n  //           avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //         },\n  //       },\n  //       {\n  //         id: 3,\n  //         userId: 1,\n  //         description: 'Test-Tweet-user1-1',\n  //         createdAt: '2023-05-25T11:09:42.000Z',\n  //         updatedAt: '2023-05-25T11:09:42.000Z',\n  //         isLiked: true,\n  //         repliesCount: 1,\n  //         user: {\n  //           name: 'test-1-name',\n  //           account: 'test-1-account',\n  //           avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //         },\n  //       },\n  //     ],\n  //   },\n  // };\n\n  //@ profileCard 渲染後端 userInfo\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const userInfo = await getUserInfo(pathId);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n\n    const getUserTweetsAsync = async () => {\n      try {\n        const data = await getUserTweets(pathId);\n        setUserTweets(data);\n        // console.log(data.length);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserTweetsAsync();\n    getUserInfoAsync();\n  }, [pathId]);\n\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic, member]); //只要isAuthentic或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '1':\n        return <ReplyLists pathId={pathId} />;\n      case '2':\n        return <LikeLists pathId={pathId} />;\n      default:\n        return <TweetsLists tweets={userTweets} />;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        pageIndex={1}\n        memberId={member.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser\n              userAccountName={userInfo.name}\n              userTweetsLength={userTweets.length}\n            />\n\n            <ProfileCard {...userInfo} setModalProOpen={setModalProOpen} />\n            <TabThreeGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n            {modalReplyOpen && <ModalReply />}\n            {switchContext(tabIndex)}\n            {/* {tabIndex === '0' && <TweetsLists />}\n            {tabIndex === '1' && <ReplyLists />}\n            {tabIndex === '2' && <LikeLists />} */}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList \n            setPathId={setPathId}\n          />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserPage;\n","export default __webpack_public_path__ + \"static/media/message.4c9af58b.svg\";","export default __webpack_public_path__ + \"static/media/notice.60c0a6cc.svg\";","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport iconMessage from '../../assets/images/icon/message.svg';\nimport iconNotice from '../../assets/images/icon/notice.svg';\nimport clsx from 'clsx';\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileOtherCard = ({\n  name,\n  account,\n  introduction,\n  avatar,\n  banner,\n  followersCount,\n  followingsCount,\n  setModalProOpen,\n  userIsFollowing,\n  onClick\n}) => {\n  const userId = Number(useParams().id);\n  return (\n    <>\n      <div className='profile-card'>\n        <UserBk bkUrl={banner} />\n        <UserAvatar avatar={avatar} />\n        <div className='profile-btn-group'>\n          <img\n            src={iconMessage}\n            alt='icon of message'\n            className='icon-round icon-message icon-round cursor-point'\n          />\n          <img\n            src={iconNotice}\n            alt='icon of Notice'\n            className='icon-round icon-notice icon-round cursor-point'\n          />\n          <button\n            className={`${clsx('',{active: userIsFollowing})} button-md button-m`}\n            onClick={() => onClick?.(userId)}\n          >\n            {userIsFollowing ? '正在跟隨' : '跟蹤'}\n          </button>\n        </div>\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n          <p className='user-desc'>{introduction}</p>\n        </div>\n        <div className='user-follow-info'>\n          <Link to='/user/followers'>\n            <p>\n              {followersCount} 個 <span>跟隨中</span>\n            </p>\n          </Link>\n\n          <Link to='/user/followers'>\n            <p>\n              {followingsCount} 位<span>跟隨者</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileOtherCard;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabThreeGroup } from '../components/basic/Tab';\n\nimport FollowCardList from '../components/user/FollowCardList';\nimport ReplyLists from '../components/user/ReplyLists';\nimport TweetsLists from '../components/user/TweetsLists';\nimport LikeLists from '../components/user/LikeLists';\nimport ProfileOtherCard from '../components/basic/ProfileOtherCard';\nimport { useParams } from 'react-router-dom';\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\nimport { cancelFollow, getUserTweets, userFollowing } from '../api/twitter';\nimport ModalReply from '../components/basic/ModalReply';\n\nconst UserOtherPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  const [pathId, setPathId] = useState(Number(useParams().id))\n   //取得網址:id\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const { isAuthentic, member,modalReplyOpen } = useAuth();\n  // @串接 local-server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  const [userTweets, setUserTweets] = useState([]);\n  const [userIsFollowing, setUserIsFollowing]=useState(false)\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n  \n  // console.log(currentMember)\n  //@ profileCard 渲染後端 userInfo\n\n\n  const handleUserISFollowing = async (userId)=>{\n    try{\n      if(!userIsFollowing){\n        await userFollowing(userId);\n      }else{\n        await cancelFollow(userId);\n      }\n    setUserIsFollowing(!userIsFollowing);\n    }catch(error){\n      console.log(error)\n    }\n  }\n\n\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const data = await getUserInfo(pathId);\n        setUserInfo(data);\n        setUserIsFollowing(data.isFollowing)\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    const getUserTweetsAsync = async () => {\n      try {\n        const data = await getUserTweets(pathId);\n        setUserTweets(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserTweetsAsync();\n    getUserInfoAsync();\n  }, [pathId]);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '1':\n        return <ReplyLists pathId={pathId} />;\n      case '2':\n        return <LikeLists pathId={pathId} />;\n      default:\n        return <TweetsLists tweets={userTweets} />;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        setModalProOpen={setModalProOpen}\n        memberId={member.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser userAccountName='Others' userTweetsLength='33推文' />\n\n            <ProfileOtherCard \n            {...userInfo} \n            setModalProOpen={setModalProOpen}\n            userIsFollowing={userIsFollowing}\n            onClick={handleUserISFollowing}\n            />\n            <TabThreeGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n            {modalReplyOpen && <ModalReply />}\n            {switchContext(tabIndex)}\n            {/* {tabIndex === '0' && <TweetsLists />}\n            {tabIndex === '1' && <ReplyLists />}\n            {tabIndex === '2' && <LikeLists />} */}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList \n            setPathId={setPathId}\n          />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserOtherPage;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabTwoGroup } from '../components/basic/Tab';\n\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\n// import { getUserTweets } from '../api/twitter';\n\nconst UserFollowersPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  // const pathId = Number(useParams()); //取得網址\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const { isAuthentic, currentMember } = useAuth();\n  // @串接 local-server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n  // console.log(currentMember)\n  //@ profileCard 渲染後端 userInfo\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const userInfo = await getUserInfo(currentMember.id);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '0':\n        return <h1>替換成 tab0要用的component</h1>;\n      default:\n        return <h1>替換成 tab1要用的component</h1>;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        setModalProOpen={setModalProOpen}\n        pageIndex={1}\n        memberId={userInfo.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser userAccountName='John Doe' userTweetsLength='25推文' />\n\n            <TabTwoGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n\n            {switchContext(tabIndex)}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          {/* <FollowCardList /> */}\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserFollowersPage;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { createTweet } from '../../api/twitter';\nimport { useAuth } from '../../components/context/AuthContext';\n\n// import InputGroup from './InputGroup';\nimport UserAvatar from '../basic/UserAvatar';\n// import testAvatar from '../../assests/images/avatar1.jpg';\n\nconst TweetCardForm = ({\n  avatar,\n  onAddTweet,\n  onModalAddTweet,\n  setTweets,\n  tweets,\n}) => {\n  const { isAuthentic, member, modalReplyOpen } = useAuth(); // 取出需要的狀態與方法\n\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    // watch,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // alert('觸發onSubmit');\n    // console.log(data.description);\n    // setNewTweet(data);\n    // onAddTweet?.(data);\n    if (onAddTweet) {\n      onAddTweet(data);\n    }\n    if (onModalAddTweet) {\n      onModalAddTweet(data);\n    }\n    reset();\n  };\n\n  return (\n    <>\n      <div className='formLayout tweet-card-form'>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className='form-group-inner-wrapper'>\n            <UserAvatar avatar={avatar} />\n            <div className='textarea-group-container'>\n              <div className='grow-wrap'>\n                <textarea\n                  type='textarea'\n                  id='description'\n                  name='description'\n                  {...register('description', {\n                    required: true,\n                    maxLength: 250,\n                  })}\n                  placeholder='有什麼新鮮事？'\n                  maxLength='250'\n                  className='tweet-text-area'\n                  // ref={textAreaRef}\n                  // onChange={onChange}\n                  // rows={1}\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            {errors.description && errors.description.type === 'required' && (\n              <span className='error'>This is required</span>\n            )}\n            <button className='button-md button-m active' type='submit'>\n              推文\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TweetCardForm;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { useForm } from 'react-hook-form';\n\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport FollowCardList from '../components/user/FollowCardList';\nimport TweetLists from '../components/user/TweetsLists';\nimport TweetCardForm from '../components/forms/TweetCardForm';\nimport { HeaderMain } from '../components/basic/Header';\n\nimport { getTweets } from '../api/twitter';\nimport { getUserInfo } from '../api/userinfo';\nimport { createTweet } from '../api/twitter';\nimport { useAuth } from '../components/context/AuthContext';\nimport ModalReply from '../components/basic/ModalReply';\nimport { set } from 'react-hook-form';\n\nconst MainPage = ({ setModalTweetOpen }) => {\n  const [tweets, setTweets] = useState([]);\n  const [profile, setProfile] = useState(null);\n  const navigate = useNavigate();\n  const { isAuthentic, member, modalReplyOpen } = useAuth(); // 取出需要的狀態與方法\n\n  const [isTweetsLoaded, setIsTweetsLoaded] = useState(false);\n\n  const handleClickCard = ({ userId }) => {\n\n    userId === profile.id\n      ? navigate(`/user/${userId}`)\n      : userId !== undefined && navigate(`/other/${userId}`);\n  };\n  //@呼叫 /api/tweets\n  const getTweetsAsync = async () => {\n    try {\n      const data = await getTweets();\n      setTweets(data);\n    } catch (error) {\n      console.log(error);\n      setIsTweetsLoaded(true); // 标记为已加载，以防止无限加载\n    }\n  };\n\n  // @ 0613新增tweet\n  // @ 但api與送出資料不太對應，會造成下方tweetLists無法render\n  const handleAddTweets = async (data) => {\n    // alert('submit todos');\n    // console.log(data);\n    try {\n      const addData = await createTweet({\n        UserId: member.id,\n        description: data.description,\n      });\n      //@ 再呼叫一次\n      getTweetsAsync();\n\n      // setTweets([\n      //   ...tweets,\n      //   {\n      //     id: addData.id,\n      //     description: addData.description,\n      //     key: addData.id,\n      //     User: {\n      //       avatar: profile.avatar,\n      //       account: profile.account,\n      //       name: profile.name,\n      //     },\n      //     userId: addData.userId,\n      //     time: addData.createdAt,\n      //     likesCount: 0,\n      //     repliesCount: 0,\n      //   },\n      // ]);\n    } catch (error) {\n      console.log(`[createData failed]`, error);\n    }\n  };\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const data = await getUserInfo(member.id);\n        setProfile(data);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n  }, []);\n\n  useEffect(() => {\n    getTweetsAsync();\n  }, []);\n  //@ 這一頁的驗證身份放最上面,currentMember好像比較不會出錯\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  // console.log('testData', testData);\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        pageIndex={0}\n        memberId={member.id}\n      >\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m '>\n            <HeaderMain pageTitle='首頁' />\n            <div className='tweet-form-wrapper'>\n              <TweetCardForm\n                {...profile}\n                onAddTweet={handleAddTweets}\n                setTweets={setTweets}\n                tweets={tweets}\n              />\n            </div>\n            <TweetLists tweets={tweets} onClick={handleClickCard} />\n          </div>\n          {modalReplyOpen && <ModalReply />}\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList \n          setPathId={()=>{}}\n          />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default MainPage;\n","export default __webpack_public_path__ + \"static/media/post.38b40641.svg\";","import React from 'react';\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n// import TweetCardBasic from './TweetCardBasic';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport iconPost from '../../assets/images/icon/post.svg';\nimport iconLike from '../../assets/images/icon/like.svg';\n// import iconMessage from '../../assets/images/icon/message.svg';\n// import iconNotice from '../../assets/images/icon/notice.svg';\n\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileMiniCard = ({\n  id,\n  account,\n  name,\n  avatar,\n  banner,\n  handleClickCard,\n}) => {\n  return (\n    <>\n      <div\n        className='profile-mini-card'\n        onClick={() => {\n          handleClickCard?.(id);\n        }}\n      >\n        <UserBk bkUrl={banner} />\n        <UserAvatar\n          avatar={avatar}\n          onClick={() => {\n            handleClickCard?.(id);\n          }}\n        />\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n        </div>\n        <div className='user-tweet-info'>\n          <div className='user-card-post-count'>\n            <img src={iconPost} alt='post' className='icon-post' />\n            <span className='tweet-count'>1.5k</span>\n          </div>\n          <div className='user-card-like-count'>\n            <img src={iconLike} alt='like' className='icon-like' />\n            <span className='tweet-count'>20k</span>\n          </div>\n        </div>\n        <div className='user-follow-info'>\n          <p>\n            34 個 <span>跟隨中</span>\n          </p>\n          <p>\n            59 位<span>跟隨者</span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileMiniCard;\n","import axios from 'axios';\n// const baseUrl = 'http://localhost:3004';\n\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n//@目前admin/users還沒做好，目前先打一般users\nexport const getAllUsers = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users`); //watch的屬性名作為path\n    // console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log('[Get Admin Users failed]:', error);\n  }\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderMain } from '../components/basic/Header';\nimport ProfileMiniCard from '../components/basic/ProfileMiniCard';\n//import api\nimport { getAllUsers } from '../api/admin';\n\nconst AdminUsers = () => {\n  const [allUsers, setAllUsers] = useState([]);\n  const navigate = useNavigate();\n\n  const handleClickCard = (id) => {\n    // alert('點擊');\n    // console.log(id);\n    if (id) {\n      navigate(`/user/${id}`); //@還沒搭配身份驗證會先跳出跑到login\n    }\n  };\n\n  //前面刷新資料\n  useEffect(() => {\n    const getAllUserAsync = async () => {\n      try {\n        const allUsers = await getAllUsers();\n        setAllUsers(allUsers);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllUserAsync();\n  }, []);\n\n  return (\n    <>\n      <ContainerColSec role='admin' pageIndex={1}>\n        <div className='section-outer-l col-10'>\n          <div className='section-main-l'>\n            <HeaderMain pageTitle='使用者列表' />\n            <div className='admin-user-wrapper'>\n              {allUsers.map((allUser) => {\n                return (\n                  <ProfileMiniCard\n                    key={allUser.id}\n                    {...allUser}\n                    handleClickCard={(id) => {\n                      handleClickCard?.(id);\n                    }}\n                  />\n                );\n              })}\n\n              {/* <ProfileMiniCard /> */}\n              {/* <ProfileMiniCard /> <ProfileMiniCard /> <ProfileMiniCard />\n              <ProfileMiniCard /> <ProfileMiniCard /> <ProfileMiniCard />\n              <ProfileMiniCard /> <ProfileMiniCard /> */}\n            </div>\n          </div>\n        </div>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default AdminUsers;\n","export default __webpack_public_path__ + \"static/media/addphoto.2e797657.svg\";","import { useForm } from 'react-hook-form';\nimport { useRef, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import component\nimport ModalContent from './ModalContent';\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\nimport InputGroup from '../forms/InputGroup';\nimport { ModalHeaderIcon } from './ModalHeader';\n\nimport { getUserInfo, updateUserInfo } from '../../api/userinfo';\nimport { useAuth } from '../../components/context/AuthContext';\n\n//import svg\nimport iconCamera from '../../assets/images/icon/addphoto.svg';\nimport iconClose from '../../assets/images/icon/close.svg';\n\nconst defaultBk = 'https://i.imgur.com/ZFz8ZEI.png';\nconst defaultAvatar = 'https://i.imgur.com/V4RclNb.png';\n\nconst Modal = ({ setModalProOpen }) => {\n  const { isAuthentic, member } = useAuth(); // 取出需要的狀態與方法\n  const [profile, setProfile] = useState({\n    name: '',\n    introduction: '',\n    avatar: '',\n    banner: '',\n  });\n  const navigate = useNavigate();\n\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n    setValue,\n  } = useForm({\n    defaultValues: {\n      name: profile.name,\n      introduction: profile.introduction,\n      avatar: profile.avatar,\n      banner: profile.banner,\n    },\n  });\n\n  //@ 打 /api/users/id\n  const getUserInfoAsync = async () => {\n    try {\n      const profile = await getUserInfo(member.id);\n      if (profile) {\n        setProfile(profile);\n        setImageNewUrl_bk(profile.banner);\n        setImageNewUrl(profile.avatar);\n      }\n    } catch (error) {\n      console.error('[getUser Info  with Async failed]', error);\n    }\n  };\n\n  //儲存form\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    console.log('we get data', data);\n    // reset();\n    console.log(member.id);\n    try {\n      const addData = await updateUserInfo({\n        id: member.id,\n        data: data,\n      });\n      if (addData) {\n        setModalProOpen(false);\n      }\n      console.log({ addData });\n    } catch (error) {\n      console.error('[getUser Info  with Async failed]', error);\n    }\n  };\n\n  //upload photo\n  const uploadedImage = useRef(null);\n  const imageUploader = useRef(null);\n  const imageUploader_bk = useRef(null);\n  const [imageNewUrl, setImageNewUrl] = useState('');\n  const [imageNewUrl_bk, setImageNewUrl_bk] = useState('');\n\n  const handleImageUpload = (e) => {\n    console.log(e.target.className);\n    let curr_target = 'input-file-avatar';\n    if (e.target.className === 'input-file-bk') {\n      curr_target = 'input-file-bk';\n    }\n\n    const [file] = e.target.files;\n    if (file) {\n      const reader = new FileReader();\n      const { current } = uploadedImage;\n      current.file = file;\n      reader.onload = (e) => {\n        // current.src = e.target.result;\n        // console.log(current)\n        // console.log(e.target.class)\n        if (curr_target === 'input-file-avatar') {\n          setImageNewUrl(e.target.result);\n          //利用空的input可以用 react-hook-form傳出去\n          setValue('avatar', e.target.result);\n        } else if (curr_target === 'input-file-bk') {\n          console.log('bk-file');\n          setImageNewUrl_bk(e.target.result);\n          //利用空的input可以用 react-hook-form傳出去\n          setValue('banner', e.target.result);\n        }\n      };\n      // console.log(file)\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleImageDelete = (e) => {\n    alert('換回原本背景照片');\n    setImageNewUrl_bk(profile.banner ? profile.banner : defaultBk);\n    //新設要送出的form value\n    setValue('banner', profile.banner ? profile.banner : defaultBk);\n  };\n\n  //@ 首次載入profile\n  useEffect(() => {\n    getUserInfoAsync();\n  }, []);\n\n  // @ 首次載入因profile 帳號出不來form要reset\n  useEffect(() => {\n    reset({ ...profile });\n  }, [profile, reset]);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  console.log({ profile });\n\n  return (\n    <>\n      <ModalContent>\n        <ModalHeaderIcon\n          setModalProOpen={setModalProOpen}\n          onSubmit={onSubmit}\n        />\n        <div className='modal-content'>\n          <div className='profile-bk-wrapper'>\n            <UserBk bkUrl={imageNewUrl_bk} />\n            <img\n              alt='bk-camera'\n              src={iconCamera}\n              className='icon-camera'\n              ref={uploadedImage}\n              onClick={() => imageUploader_bk.current.click()}\n            />\n            <img\n              src={iconClose}\n              alt='icon of close button'\n              className='icon-close'\n              onClick={handleImageDelete}\n            />\n            <input\n              type='file'\n              accept='image/*'\n              onChange={handleImageUpload}\n              ref={imageUploader_bk}\n              className='input-file-bk'\n            />\n          </div>\n\n          <div className='avatar-edit-wrapper'>\n            <UserAvatar avatar={imageNewUrl} />\n            <img\n              alt='bbb'\n              src={iconCamera}\n              className='icon-camera'\n              ref={uploadedImage}\n              onClick={() => imageUploader.current.click()}\n            />\n\n            <input\n              type='file'\n              accept='image/*'\n              onChange={handleImageUpload}\n              ref={imageUploader}\n              className='input-file-avatar'\n            />\n          </div>\n\n          <form\n            className='modal-info-form'\n            id='hook-form'\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <div className='input-group-container'>\n              <InputGroup\n                name='name'\n                label='名稱'\n                type='text'\n                placeholder='請輸入帳號'\n                maxLength='50'\n                errors={errors}\n                register={register}\n                validationSchema={{\n                  required: 'name is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Please enter a minimum of 3 characters',\n                  },\n                }}\n                watch={watch}\n                // value={profile.name}\n                // required\n              />\n            </div>\n            <div className='textarea-group-container'>\n              <div className='textarea-group grow-wrap'>\n                <label>自我介紹</label>\n                <textarea\n                  type='textarea'\n                  id='introduction'\n                  name='introduction'\n                  {...register('introduction', {\n                    required: true,\n                    maxLength: 150,\n                  })}\n                  placeholder='有什麼新鮮事？'\n                  maxLength='30'\n                  className='desc-text-area'\n                  // value={profile.introduction || ''}\n                />\n              </div>\n              <div className='error-message-group'>\n                {errors.description &&\n                  errors.description.type === 'required' && (\n                    <span className='error'>This is required</span>\n                  )}\n                <span className='limit-num'>\n                  {watch('description') ? watch('description').length : '0'}/50\n                </span>\n              </div>\n            </div>\n\n            <input\n              type='text'\n              {...register('banner')}\n              style={{\n                display: 'none',\n              }}\n            />\n            <input\n              type='text'\n              {...register('avatar')}\n              style={{\n                display: 'none',\n              }}\n            />\n          </form>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default Modal;\n","// import { useForm } from 'react-hook-form';\n\n// import component\nimport ModalContent from './ModalContent';\n// import UserAvatar from './UserAvatar';\n// import InputGroup from '../forms/InputGroup';\nimport { ModalHeader } from './ModalHeader';\nimport TweetCardForm from '../forms/TweetCardForm';\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\n\nconst ModalTweet = ({ setModalTweetOpen, handleAddTweets }) => {\n  // using react-form-hook-set-up\n  // const {\n  //   register,\n  //   handleSubmit,\n  //   reset,\n  //   formState: { errors },\n  //   watch,\n  // } = useForm();\n\n  // @ 0613新增tweet\n  // @ 但api與送出資料不太對應，會造成下方tweetLists無法render\n  const onModalAddTweet = async (data) => {\n    alert('submit ModlaTsodos');\n    console.log(data);\n    // try {\n    //   const addData = await createTweet({\n    //     UserId: profile.id,\n    //     description: data.description,\n    //   });\n\n    //   setTweets([\n    //     ...tweets,\n    //     {\n    //       // id: data.id, //我今天嘗試打他都會自己帶id\n    //       UserId: addData.UserId,\n    //       description: addData.description,\n    //     },\n    //   ]);\n    // } catch (error) {\n    //   console.log(`[createData failed]`);\n    // }\n  };\n\n  // const onSubmit = async (data) => {\n  //   console.log(data);\n  //   // onModalAddTweet(data);\n  //   reset();\n  // };\n\n  return (\n    <>\n      <ModalContent>\n        <ModalHeader setModalTweetOpen={setModalTweetOpen} />\n        <div className='modal-content modal-tweet-content'>\n          <div className='tweet-form-wrapper'>\n            <TweetCardForm />\n          </div>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default ModalTweet;\n","import React from \"react\";\nimport DayTime from \"../../helper/TimeHelper\";\nimport TweetIconCount from \"./TweetIconCount\";\nimport TweetUserName2 from \"./TweetUserName2\";\nimport UserAvatar from \"./UserAvatar\";\n\nconst TweetBigCard = ({tweetInfo})=>{\n  return (\n    <div className=\"TweetBigCard\">\n      <div className=\"TweetUserInfo\">\n        <div className=\"TweetUserInfo-head\">\n          <UserAvatar \n            avatar={tweetInfo.User.avatar}\n          />\n          <TweetUserName2 \n            name={tweetInfo.User.name}\n            account={tweetInfo.User.account}\n          />\n        </div>\n        <p className='tweet-card-basic-description'>\n            {tweetInfo.description}\n        </p>\n        <p className=\"tweetDate\">{DayTime(tweetInfo.createdAt)}\n        </p>\n      </div>\n\n      <div className=\"TweetUserInfo\">\n          <span className=\"TweetUserInfo-replies\" >\n            34 <span>回覆</span>\n          </span>\n          <span className=\"TweetUserInfo-likes\">\n            808 <span>喜歡次數</span>\n          </span>\n      </div>\n      <div className=\"TweetUserInfo\">\n        <TweetIconCount id={tweetInfo.id}/>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default TweetBigCard;","import React from 'react';\nimport TweetUserName3 from './TweetUserName3';\nimport UserAvatar from './UserAvatar';\nconst TweetRepliesCard = ({ ...props }) => {\n  return (\n    <div className='tweet-card-basic'>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId} \n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3\n          name={props.User.name}\n          account={props.User.account}\n          time={props.createdAt}\n        />\n        <p className='tweet-card-basic-reply'>\n          回覆\n          <span className='reply-user-account'>@{props.account}</span>\n        </p>\n        <p className='tweet-card-basic-description'>{props.comment}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TweetRepliesCard;\n","import TweetRepliesCard from '../basic/TweetRepliesCard';\n\nconst TweetRepliesLists = ({tweetReplies,account,onClick}) => {\n\n  return (\n    <div className='TweetLists'>\n      {tweetReplies.map((tweet) => {\n        return (\n          <TweetRepliesCard\n            key={tweet.id}\n            {...tweet}\n            account={account}\n            onClick={({  userId }) => {\n              onClick?.({ userId });\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TweetRepliesLists;\n","import React from 'react';\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport TweetBigCard from '../components/basic/TweetBigCard';\nimport { useEffect, useState } from 'react';\nimport { getTweet, getTweetReplies } from '../api/twitter';\nimport TweetRepliesList from '../components/user/TweetRepliesList';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ModalReply from '../components/basic/ModalReply';\nimport FollowCardList from '../components/user/FollowCardList';\n\n\nconst TweetPage = ({ setModalTweetOpen}) => {\n  const [tweetInfo, setTweetInfo] = useState({\n    id: '',\n    UserId: '',\n    description: '',\n    createdAt: '',\n    User: {},\n  });\n  const [tweetReplies,setTweetReplies] = useState([])\n  //這裡很奇怪只有他 要先設定一樣的結構\n  const { isAuthentic, member,modalReplyOpen,setTweetId} = useAuth();\n  const pathId = Number(useParams().id);\n  const navigate = useNavigate();\n  const handleClickCard = ({ userId }) => {\n    userId === member.id\n      ? navigate(`/user/${userId}`)\n      : userId !== undefined && navigate(`/other/${userId}`);\n  };\n\n  useEffect(() => {\n    const getTweetAsync = async () => {\n      try {\n        const data = await getTweet(pathId);\n        setTweetInfo(data);\n        setTweetId(pathId)\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTweetAsync();\n  }, [pathId]);\n\n  useEffect(()=>{\n    const getTweetRepliesAsync = async ()=>{\n      try {\n        const data = await getTweetReplies(pathId);\n        setTweetReplies(data)\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getTweetRepliesAsync()\n  },[])\n  \n  return (\n    <ContainerColSec\n      role='user'\n      setModalTweetOpen={setModalTweetOpen}\n      pageIndex={0}\n      memberId={member?.id}\n    >\n      {modalReplyOpen && <ModalReply />}\n      <section className='section-outer-m col-7'>\n        <div className='section-main-m'>\n          <HeaderUser userAccountName='推文' />\n          <div className='TweetPage'>\n            <TweetBigCard \n              tweetInfo={tweetInfo} \n            />\n            <TweetRepliesList \n            tweetReplies={tweetReplies}\n            account={tweetInfo.User.account}\n            onClick={handleClickCard}\n            />\n        </div>\n        </div>\n      </section>\n      <section className='section-right col-3'>\n       <FollowCardList \n          setPathId={()=>{}}\n          />\n      </section>\n    </ContainerColSec>\n  );\n};\n\nexport default TweetPage;\n","import { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport InputGroup from './InputGroup';\n\nconst RegisterForm = () => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    if (data.username.length === 0) {\n      return;\n    }\n    if (data.password.length === 0) {\n      return;\n    }\n\n    console.log(data);\n    reset();\n  };\n\n  return (\n    <div className='formLayout register-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='account'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'account is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='名稱'\n            type='text'\n            placeholder='請輸入名稱'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='email'\n            label='Email'\n            type='email'\n            placeholder='請輸入Email'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'email is required',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Entered value does not match email format',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='cpassword'\n            label='密碼再確認'\n            type='password'\n            placeholder='請再次輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              //@ 確認密碼做法？ (還沒有試)\n              //https://www.positronx.io/add-confirm-password-validation-in-react-with-hook-form/\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n        <div className='button-group-column'>\n          <button className='button-filled button-lg' type='submit'>\n            登入\n          </button>\n          <Link to='/login' className='button-link'>\n            取消\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\n\n// import svg\nimport iconLogo from '../assets/images/icon/logo.svg';\n\n// import custom components\nimport ContainerColOne from '../components/layout/ContainerColOne';\nimport RegisterForm from '../components/forms/RegisterForm';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegisterPage = () => {\n  const { isAuthentic } = useAuth();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    if (isAuthentic) {\n      navigation('/main');\n    }\n  }, [navigation, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColOne>\n        <div className='login-container col-4 flex_col_cc'>\n          <div className='page-logo'>\n            <img\n              src={iconLogo}\n              alt='Alphitter Icon'\n              className='icon-logo cursor-point'\n            />\n          </div>\n          <h3 className='page-title'>建立你的帳號</h3>\n          <RegisterForm />\n        </div>\n      </ContainerColOne>\n    </>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n  // BrowserRouter as Router,\n  // Link,\n  Routes,\n  Route,\n  HashRouter,\n} from 'react-router-dom';\n\n//import css\nimport './scss/main.scss';\n\n// import component\nimport PageLayout from './components/layout/PageLayout';\n\n// import HomePage from './pages/HomePage';\nimport NestedUserPage from './pages/main/NestedUserPage';\nimport LoginPage from './pages/LoginPage';\nimport StoryBookPage from './pages/storybooks/StoryBookPage';\n// import AdminLoginPage from './pages/AdminLoginPage';\nimport AdminPage from './pages/AdminPage';\nimport SettingPage from './pages/SettingPage';\nimport UserPage from './pages/UserPage';\nimport UserOtherPage from './pages/UserOtherPage';\nimport UserFollowersPage from './pages/UserFollowersPage';\nimport MainPage from './pages/MainPage';\nimport AdminUsers from './pages/AdminUsers';\nimport Modal from './components/basic/Modal';\nimport ModalTweet from './components/basic/ModalTweet';\nimport ModalReply from './components/basic/ModalReply';\nimport TweetPage from './pages/TweetPage';\nimport RegisterPage from './pages/RegisterPage';\nimport { AuthProvider, useAuth } from './components/context/AuthContext';\n\nfunction App({ router }) {\n  const [modalProOpen, setModalProOpen] = useState(false);\n  const [modalTweetOpen, setModalTweetOpen] = useState(false);\n\n  // console.log(`modalTweetOpen`, modalTweetOpen);\n  // const basename = process.env.PUBLIC_URL;\n  return (\n    <>\n      <HashRouter>\n        <AuthProvider>\n          <PageLayout>\n            <Routes>\n              <Route path='*' element={<LoginPage />}></Route>\n              <Route path='/storybook' element={<StoryBookPage />}></Route>\n              <Route path='/login' element={<LoginPage />}></Route>\n              {/* <Route path='/login/admin' element={<AdminLoginPage />}></Route> */}\n              <Route path='/login/admin' element={<AdminPage />}></Route>\n              <Route path='/register' element={<RegisterPage />}></Route>\n              <Route\n                path='/main'\n                element={<MainPage \n                    setModalTweetOpen={setModalTweetOpen}/>}\n              ></Route>\n              <Route\n                path='/user/:id'\n                element={\n                  <UserPage\n                    setModalProOpen={setModalProOpen}\n                    setModalTweetOpen={setModalTweetOpen}\n                  />\n                }\n              ></Route>\n              <Route\n                path='/other/:id'\n                element={\n                  <UserOtherPage\n                    setModalProOpen={setModalProOpen}\n                    setModalTweetOpen={setModalTweetOpen}\n                  />\n                }\n              ></Route>\n\n              <Route\n                path='/user/followers'\n                element={\n                  <UserFollowersPage\n                    setModalProOpen={setModalProOpen}\n                    setModalTweetOpen={setModalTweetOpen}\n                  />\n                }\n              ></Route>\n\n              <Route\n                path='/main/tweet/:id'\n                element={<TweetPage \n                  setModalTweetOpen={setModalTweetOpen} />}\n              ></Route>\n              <Route\n                path='/setting'\n                element={<SettingPage setModalTweetOpen={setModalTweetOpen} />}\n              ></Route>\n              <Route path='/admin/users' element={<AdminUsers />}></Route>\n              <Route path='/main/self2' element={<NestedUserPage />}></Route>\n            </Routes>\n            {modalTweetOpen && (\n              <ModalTweet setModalTweetOpen={setModalTweetOpen} />\n            )}\n            {modalProOpen && <Modal setModalProOpen={setModalProOpen} />}\n            \n          </PageLayout>\n        </AuthProvider>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}