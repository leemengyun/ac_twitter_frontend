{"version":3,"sources":["components/layout/PageLayout.jsx","pages/main/NestedUserPage.jsx","assets/images/icon/logo.svg","components/layout/ContainerColOne.jsx","components/forms/InputGroup.jsx","api/auth.js","components/context/AuthContext.jsx","components/forms/LoginForm.jsx","pages/LoginPage.jsx","components/basic/Tab.jsx","pages/storybooks/StoryBookPage.jsx","components/basic/SecLeftNev.jsx","components/layout/ContainerColSec.jsx","pages/AdminPage.jsx","components/forms/SettingForm.jsx","assets/images/icon/back.svg","components/basic/Header.jsx","components/basic/ModalContent.jsx","assets/images/icon/close.svg","components/basic/ModalHeader.jsx","api/twitter.js","assets/images/icon/avatar.svg","components/basic/UserAvatar.jsx","components/forms/TweetCardForm.jsx","api/userinfo.js","components/basic/ModalTweet.jsx","pages/SettingPage.jsx","components/basic/TweetUserName2.jsx","components/basic/FollowCard.jsx","components/user/FollowCardList.jsx","helper/TimeHelper.jsx","components/basic/TweetUserName3.jsx","components/basic/TweetCardReply.jsx","components/user/ReplyLists.jsx","assets/images/icon/like-filled.svg","assets/images/icon/reply.svg","assets/images/icon/like.svg","components/basic/TweetIconCount.jsx","components/basic/TweetCardBasic.jsx","components/user/TweetsLists.jsx","components/basic/TweetCardLike.jsx","components/user/LikeLists.jsx","assets/images/bk.jpg","components/basic/UserBk.jsx","components/basic/ProfileCard.jsx","components/forms/ReplyCardForm.jsx","components/basic/ReplyCard.jsx","components/basic/ModalReply.jsx","pages/UserPage.jsx","assets/images/icon/message.svg","assets/images/icon/notice.svg","components/basic/ProfileOtherCard.jsx","pages/UserOtherPage.jsx","pages/UserFollowersPage.jsx","pages/MainPage.jsx","assets/images/icon/post.svg","components/basic/ProfileMiniCard.jsx","api/admin.js","pages/AdminUsers.jsx","assets/images/icon/addphoto.svg","components/basic/Modal.jsx","components/basic/TweetBigCard.jsx","components/basic/TweetRepliesCard.jsx","components/user/TweetRepliesList.jsx","pages/TweetPage.jsx","components/forms/RegisterForm.jsx","pages/RegisterPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageLayout","_ref","children","_jsx","_Fragment","className","NestedUserPage","ContainerColOne","InputGroup","_errors$name","_errors$name2","_errors$name3","_errors$name4","_errors$name5","_errors$name6","name","label","type","placeholder","errors","register","maxLength","validationSchema","watch","_jsxs","_objectSpread","message","length","login","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","account","password","_yield$axios$post","data","wrap","_context","prev","next","axios","post","concat","sent","token","abrupt","success","t0","console","error","stop","_x","apply","arguments","defaultAuthContext","isAuthentic","currentMember","logout","AuthContext","createContext","useAuth","useContext","AuthProvider","_useState","useState","_useState2","_slicedToArray","setIsAuthentic","_useState3","_useState4","payload","setPayload","pathname","useLocation","_useState5","_useState6","modalReplyOpen","setModalReplyOpen","_useState7","_useState8","modalTweetOpen","setModalTweetOpen","_useState9","_useState10","tweetId","setTweetId","_useState11","_useState12","member","setMember","useEffect","checkTokenIsValid","authToken","tempPayload","localStorage","getItem","jwt","Provider","value","id","avatar","_login2","_callee2","user","_yield$_login","_context2","log","setItem","_logout","_callee3","_context3","removeItem","LoginForm","_useForm","useForm","handleSubmit","reset","formState","_useAuth","navigate","useNavigate","onSubmit","username","required","minLength","Link","to","LoginPage","navigation","src","iconLogo","alt","TabThreeGroup","tabIndex","setTabIndex","join","onClick","TabTwoGroup","pathName","LayoutNav","SecLeftNav","role","pageIndex","memberId","ContainerColSec","AdminPage","SettingForm","pattern","HeaderMain","pageTitle","HeaderUser","userAccountName","userTweetsLength","iconBack","ModalContent","ModalHeader","iconClose","ModalHeaderIcon","setModalProOpen","form","baseUrl","axiosInstance","create","interceptors","request","use","config","headers","getTweets","res","get","getTopUsers","getTweet","_ref3","pathId","getUserTweets","_ref4","_callee4","_context4","_x2","getUserLikedTweets","_ref5","_callee5","_context5","_x3","getUserRepliedTweets","_ref6","_callee6","_context6","_x4","createTweet","_ref7","_callee7","UserId","description","_context7","_x5","getTweetReplies","_ref8","_callee8","_context8","_x6","repliedTweet","_ref9","_callee9","TweetId","comment","_context9","_x7","userFollowing","_ref10","_callee10","_context10","_x8","cancelFollow","_ref11","_callee11","followingId","_context11","delete","_x9","UserAvatar","userId","e","stopPropagation","Defaultavatar","TweetCardForm","onAddTweet","onModalAddTweet","setTweets","tweets","getUserInfo","updateUserInfo","put","introduction","banner","ModalTweet","handleAddTweets","profile","setProfile","getUserInfoAsync","SettingPage","TweetUserName2","FollowCard","props","Object","assign","_objectDestructuringEmpty","_props$onClick","call","clsx","active","isFollowing","FollowCardList","setPathId","userIsFollowing","users","setUsers","handleClickCard","undefined","getUsersAsync","map","DayTime","a","dayjs","extend","relativeTime","locale","subtract","anHourAgo","fromNow","timeFromNow","TweetUserName3","time","TweetCardReply","User","createdAt","Tweet","ReplyLists","userReplied","setUserReplied","getUserRepliedTweetsAsync","tweet","TweetIconCount","likesCount","repliesCount","isLiked","reply","likefilled","like","TweetCardBasic","handleClick","TweetsLists","TweetCardLike","_props$onClick2","LikeLists","userLiked","setUserLiked","getUserLikedTweetsAsync","UserBk","bkUrl","DefaultBk","ProfileCard","followersCount","followingsCount","tweetInfo","ReplyCard","ModalReply","Likes","replies","updatedAt","setTweetInfo","getTweetAsync","ReplyCardForm","UserPage","Number","useParams","userInfo","setUserInfo","userTweets","setUserTweets","_userInfo","getUserTweetsAsync","switchContext","ProfileOtherCard","iconMessage","iconNotice","UserOtherPage","setUserIsFollowing","handleUserISFollowing","UserFollowersPage","MainPage","setIsTweetsLoaded","getTweetsAsync","addData","TweetLists","ProfileMiniCard","iconPost","iconLike","getAllUsers","AdminUsers","allUsers","setAllUsers","getAllUserAsync","_allUsers","allUser","defaultBk","Modal","defaultValues","setValue","_profile","setImageNewUrl_bk","setImageNewUrl","uploadedImage","useRef","imageUploader","imageUploader_bk","imageNewUrl","imageNewUrl_bk","handleImageUpload","target","curr_target","file","files","reader","FileReader","current","onload","result","readAsDataURL","iconCamera","ref","click","alert","accept","onChange","style","display","TweetBigCard","TweetRepliesCard","TweetRepliesLists","tweetReplies","TweetPage","setTweetReplies","getTweetRepliesAsync","TweetRepliesList","RegisterForm","RegisterPage","App","router","modalProOpen","HashRouter","Routes","Route","path","element","StoryBookPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.7e2221c9.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageLayout = ({ children }) => {\n  return (\n    <>\n      <div className='container-fluid'>\n        <div className='wrapper'>{children}</div>\n      </div>\n    </>\n  );\n};\n\nexport default PageLayout;\n","import React from 'react';\n\nconst NestedUserPage = () => {\n  return (\n    <div className='container-fluid'>\n      <h1>NestedUserPage l2 Page</h1>\n    </div>\n  );\n};\n\nexport default NestedUserPage;\n","export default __webpack_public_path__ + \"static/media/logo.89093620.svg\";","import React from 'react';\n\nconst ContainerColOne = ({ children }) => {\n  return (\n    <>\n      {/* <div className='row'> */}\n      <main className='container_one col-12'>{children}</main>\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default ContainerColOne;\n","import React from 'react';\n\nconst InputGroup = ({\n  name,\n  label,\n  type,\n  placeholder,\n  errors,\n  register,\n  maxLength,\n  // required,\n  validationSchema,\n  watch,\n}) => {\n  return (\n    <>\n      {' '}\n      <div className='input_group'>\n        <label>{label}</label>\n        <input\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          {...register(name, validationSchema)}\n          maxLength={maxLength || null}\n        />\n      </div>\n      <div className='error-message-group'>\n        {errors && errors[name]?.type === 'required' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n        {errors && errors[name]?.type === 'minLength' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n        {errors && errors[name]?.type === 'pattern' && (\n          <span className='error'>{errors[name]?.message}</span>\n        )}\n\n        {/* <span className='limit-num'>15/50</span> */}\n        <span className='limit-num'>\n          {watch(name) ? watch(name).length : '0'}/50\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default InputGroup;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3004';\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nexport const login = async ({ account, password }) => {\n  try {\n    const { data } = await axios.post(`${baseUrl}/signin`, {\n      account,\n      password, //解構拿出data\n    });\n    const { token } = data.data; //解構拿出authToken\n    // console.log('Token: ',token )\n    // console.log('data:',data)\n    if (token) {\n      return { success: true, ...data };\n    }\n    return data;\n  } catch (error) {\n    console.error('[Login Failed]:', error);\n  }\n};\n","import { login } from '../../api/auth';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as jwt from 'jsonwebtoken';\nimport { set } from 'react-hook-form';\n\nconst defaultAuthContext = {\n  isAuthentic: false,\n  currentMember: null,\n  login: null,\n  logout: null,\n  register: null,\n};\n\nconst AuthContext = createContext(defaultAuthContext);\n\nexport const useAuth = () => useContext(AuthContext);\nexport const AuthProvider = ({ children }) => {\n  const [isAuthentic, setIsAuthentic] = useState(null);\n  const [payload, setPayload] = useState(null);\n  //頁面刷新時，確認是誰\n  const { pathname } = useLocation();\n  const [modalReplyOpen, setModalReplyOpen] = useState(false);\n  // const [modalProOpen, setModalProOpen] = useState(false);\n  const [modalTweetOpen, setModalTweetOpen] = useState(false);\n  const [tweetId, setTweetId] = useState(null);\n  const [member, setMember] = useState({});\n\n  // 封裝檢查token\n  useEffect(() => {\n    const checkTokenIsValid = async () => {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        setIsAuthentic(false);\n        setPayload(null);\n        return;\n      }\n      // @ checkPermission 功能\n      // const result = await checkPermission(authToken);\n      // if (result) {\n      //   setisAuthentic(true);\n      //   const tempPayload = jwt.decode(authToken);\n      //   setPayload(tempPayload);\n      // } else {\n      //   setisAuthentic(false);\n      //   setPayload(null);\n      // }\n\n      //@ 沒有checkPermission的替代過度版 可以暫時只有檢視是否有token+token解析\n      if (authToken) {\n        setIsAuthentic(true);\n        const tempPayload = jwt.decode(authToken);\n        setPayload(tempPayload);\n        setMember(tempPayload);\n        return;\n      }\n    };\n    checkTokenIsValid();\n  }, [pathname]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthentic,\n        currentMember: payload && {\n          id: payload.id,\n          name: payload.name,\n          avatar: payload.avatar,\n        },\n        setModalReplyOpen,\n        modalReplyOpen,\n        setModalTweetOpen,\n        modalTweetOpen,\n        setTweetId,\n        tweetId,\n        member,\n        login: async (user) => {\n          console.log('ok');\n          const { success, data } = await login({\n            account: user.account,\n            password: user.password,\n          });\n          const token = data.token;\n          const tempPayload = jwt.decode(token);\n          // console.log('data',data)\n          // console.log('tempPayload: ', tempPayload )\n          //{id: 14, account: 'user1', email: 'user1@example.com', name: 'user1 name', avatar: null, …}\n          if (tempPayload) {\n            setIsAuthentic(true);\n            localStorage.setItem('authToken', token);\n            setPayload(tempPayload);\n            //等有test-token CheckPermission 完後才導入使用者資訊\n            setMember(tempPayload);\n          } else {\n            setIsAuthentic(false);\n          }\n          return success;\n        },\n        logout: async () => {\n          localStorage.removeItem('authToken');\n          setIsAuthentic(false);\n          setPayload(null);\n        },\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\n// import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate } from 'react-router-dom';\nimport InputGroup from './InputGroup';\nimport { useAuth } from '../context/AuthContext';\n\nconst LoginForm = () => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n  const { login, isAuthentic } = useAuth();\n  const navigate = useNavigate();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    if (data.username.length === 0) {\n      return;\n    }\n    if (data.password.length === 0) {\n      return;\n    }\n    const success = await login({\n      account: data.username,\n      password: data.password,\n    });\n    console.log('Login: ', success);\n    reset();\n  };\n\n  useEffect(() => {\n    if (isAuthentic) {\n      navigate('/main');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <div className='formLayout login-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n        <button className='button-filled button-lg' type='submit'>\n          登入\n        </button>\n        <div className='button-group-row login-button-group'>\n          <Link to='/register' className='button-link'>\n            註冊\n          </Link>\n          <span>・</span>\n          <Link to='/login/admin' className='button-link'>\n            後台登入\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\n\n// import svg\nimport iconLogo from '../assets/images/icon/logo.svg';\n\n// import custom components\nimport ContainerColOne from '../components/layout/ContainerColOne';\nimport LoginForm from '../components/forms/LoginForm';\n// import { useState } from 'react';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const { isAuthentic } = useAuth();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    if (isAuthentic) {\n      navigation('/main');\n    }\n  }, [navigation, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColOne>\n        <div className='login-container col-4 flex_col_cc'>\n          <div className='page-logo'>\n            <img\n              src={iconLogo}\n              alt='Alphitter Icon'\n              className='icon-logo cursor-point'\n            />\n          </div>\n          <h3 className='page-title'>登入 Alphitter</h3>\n          <LoginForm />\n        </div>\n      </ContainerColOne>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\n\n// import svg\n// import iconBack from '../../assets/images/icon/back.svg';\n\n// tab styles\n\nconst TabThreeGroup = ({ tabIndex, setTabIndex }) => {\n  return (\n    <div className='tab-group'>\n      <div\n        className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('0')}\n      >\n        推文\n      </div>\n      <div\n        className={['tab', tabIndex === '1' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('1')}\n      >\n        回覆\n      </div>\n      <div\n        className={['tab', tabIndex === '2' ? 'active' : ''].join(' ')}\n        onClick={() => setTabIndex('2')}\n      >\n        喜歡的內容\n      </div>\n    </div>\n  );\n};\n\nconst TabTwoGroup = ({ tabIndex, setTabIndex, pathName }) => {\n  // if (pathName === 'followings') {\n  //   setTabIndex('1');\n  // }\n\n  return (\n    <div className='tab-group'>\n      <div\n        className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')}\n        tabIndex='0'\n        onClick={() => setTabIndex('0')}\n      >\n        追蹤者\n      </div>\n      <div\n        className={['tab', tabIndex === '1' ? 'active' : ''].join(' ')}\n        tabIndex='1'\n        onClick={() => setTabIndex('1')}\n      >\n        正在追隨\n      </div>\n    </div>\n  );\n};\n\nexport { TabThreeGroup, TabTwoGroup };\n","import React from 'react';\n// import custom components\nimport { Link } from 'react-router-dom';\nimport { TabThreeGroup, TabTwoGroup } from '../../components/basic/Tab';\n\n//import css\nimport '../../scss/storybooks/storyBookPage.scss';\n\nconst LayoutNav = () => {\n  return (\n    <>\n      <div className='storybook-layout'>\n        <div className='storybook-container'>\n          <h2>Storybooks</h2>\n          <h4 className='page-sec-title'>\n            === Buttons-元件本身目前沒有製作上下margin，是本表顯示用 ===\n          </h4>\n\n          <div className='flex_col_cc comp-container'>\n            <button className='button-filled button-lg' type='submit'>\n              登入\n            </button>\n            <button className='button-sm button-m active' type='submit'>\n              推文\n            </button>\n            <button className='button-bg button-m active' type='submit'>\n              儲存\n            </button>\n            <button className='button-md button-m active' type='submit'>\n              正在追蹤\n            </button>\n            <button className='button-md button-m' type='submit'>\n              編輯個人資料\n            </button>\n            <Link className='button-link' type='submit'>\n              取消\n            </Link>\n          </div>\n\n          <h4 className='page-sec-title'>\n            === tabs -元件本身綁定切換內容，這頁的tab 點了會壞不要管他lol ===\n          </h4>\n          <TabThreeGroup />\n          <TabTwoGroup />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LayoutNav;\n","import iconLogo from '../../assets/images/icon/logo.svg';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\n// import svg\n// import iconHome from '../assets/images/icon/home.svg';\n\nconst SecLeftNav = ({ role, pageIndex, memberId }) => {\n  // className={['tab', tabIndex === '0' ? 'active' : ''].join(' ')\n  const { logout, setModalReplyOpen, modalTweetOpen, setModalTweetOpen } =\n    useAuth();\n  const handleClick = () => {\n    logout();\n  };\n  return (\n    <>\n      <nav className='left-nav col-2'>\n        {/* <nav className='left-nav g-col-2'> */}\n        <div className='left-nav-link'>\n          <div className='left-nav-link-items'>\n            <Link\n              to={role === 'admin' ? '/admin' : '/main'}\n              className='link-logo'\n            >\n              <img\n                src={iconLogo}\n                alt='Alphitter Icon'\n                className='icon-logo cursor-point'\n              />\n            </Link>\n\n            <Link\n              to={role === 'admin' ? '/admin' : '/main'}\n              className='nav-link '\n            >\n              <span\n                className={[\n                  'nav-icon icon-home',\n                  pageIndex === 0 ? 'active' : '',\n                ].join(' ')}\n              ></span>\n              <p>{role === 'admin' ? '推文清單' : '首頁'}</p>\n            </Link>\n\n            <Link to={role === 'admin' ? '/admin/users' : `/user/${memberId}`}>\n              <span\n                className={[\n                  'nav-icon icon-user',\n                  pageIndex === 1 ? 'active' : '',\n                ].join(' ')}\n              ></span>\n              <p>{role === 'admin' ? '使用者列表' : '個人資料'}</p>\n            </Link>\n\n            {role !== 'admin' && (\n              <>\n                <Link to='/setting'>\n                  <span\n                    className={[\n                      'nav-icon icon-setting',\n                      pageIndex === 2 ? 'active' : '',\n                    ].join(' ')}\n                  ></span>\n                  <p>設定</p>\n                </Link>\n\n                <button\n                  className='button-filled button-lg button-tweet'\n                  type='submit'\n                  onClick={() => setModalTweetOpen(true)}\n                  // onClick={()=> setModalActive(!)}\n                >\n                  <span className='button-tweet-view'>推文</span>\n                  <span className='button-tweet-view-m'></span>\n                </button>\n              </>\n            )}\n          </div>\n          <div className='left-nav-link-logout'>\n            <Link to='/login' onClick={handleClick}>\n              <span className='nav-icon icon-logout'></span>\n              <p>登出</p>\n            </Link>\n          </div>\n          {/* //06/07 與keifer衝突區塊 */}\n          {/* <div className='menu-link-logout'>\n            <Link to='/login'>\n              <span className='nav-icon icon-logout '></span>\n              登出\n            </Link>\n          </div> */}\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default SecLeftNav;\n","import React from 'react';\nimport SecLeftNav from '../basic/SecLeftNev';\n// import { useAuth } from '../../components/context/AuthContext';\n\nconst ContainerColSec = ({\n  children,\n  role,\n  // setModalTweetOpen,\n  pageIndex,\n  memberId,\n}) => {\n  // const { modalTweetOpen, setModalTweetOpen } = useAuth(); // 取出需要的狀態與方法\n\n  return (\n    <>\n      {/* bootstrap gutter system needs come after row => row gx-4 */}\n      <main className='container_sec'>\n        {/* <main className='container_sec grid'> */}\n        <SecLeftNav\n          role={role}\n          // setModalTweetOpen={setModalTweetOpen}\n          pageIndex={pageIndex}\n          memberId={memberId}\n        />\n        {children}\n      </main>\n      {/* <Modal /> */}\n    </>\n  );\n};\n\nexport default ContainerColSec;\n","import React from 'react';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\n// import SecLeftNav from '../components/SecLeftNav';\n\nconst AdminPage = () => {\n  return (\n    <>\n      <ContainerColSec role='admin' pageIndex={0}>\n        <div className='section-outer-l col-10'>\n          <div className='section-main-l'>\n            <h1> AdminPage</h1>\n          </div>\n        </div>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default AdminPage;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport InputGroup from './InputGroup';\nimport { useAuth } from '../context/AuthContext';\n// import { getUserTweets } from '../api/twitter';\n\nconst SettingForm = () => {\n  const navigate = useNavigate();\n  const { isAuthentic, member } = useAuth();\n\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    console.log(data);\n    reset();\n  };\n  console.log(member.id);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n    // console.log(member);\n  }, [navigate, isAuthentic, member]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <div className='formLayout setting-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='account'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'account is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='名稱'\n            type='text'\n            placeholder='請輸入名稱'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='email'\n            label='Email'\n            type='email'\n            placeholder='請輸入Email'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'email is required',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Entered value does not match email format',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='cpassword'\n            label='密碼再確認'\n            type='password'\n            placeholder='請再次輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              //@ 確認密碼做法？ (還沒有試)\n              //https://www.positronx.io/add-confirm-password-validation-in-react-with-hook-form/\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='button-group-row login-button-group'>\n          <button className='button-bg button-m active' type='submit'>\n            儲存\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SettingForm;\n","export default __webpack_public_path__ + \"static/media/back.de35b2eb.svg\";","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\n// import svg\nimport iconBack from '../../assets/images/icon/back.svg';\n\nconst HeaderMain = ({ pageTitle }) => {\n  return (\n    <div className='header-container header-main'>\n      <h5>{pageTitle}</h5>\n    </div>\n  );\n};\n\nconst HeaderUser = ({ userAccountName, userTweetsLength }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className='header-container'>\n      {/* <Link to='/main'> */}\n      <img\n        src={iconBack}\n        alt='Back to pre page'\n        className='icon-back cursor-point'\n        onClick={() => {\n          //@ 回上頁\n          navigate(-1);\n        }}\n      />\n      {/* </Link> */}\n\n      <div className='header-user-info'>\n        <h5>{userAccountName}</h5>\n        <p>{userTweetsLength} 推文</p>\n      </div>\n    </div>\n  );\n};\n\nexport { HeaderMain, HeaderUser };\n","const ModalContent = ({ children }) => {\n  return (\n    <>\n      <div className='modal-outer-container modal-transparent-bk'>\n        <div className='modal-flex-box'>\n          <div className='modal-container'>{children}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalContent;\n","export default __webpack_public_path__ + \"static/media/close.8d623dc5.svg\";","import React from 'react';\n\n// import svg\nimport iconClose from '../../assets/images/icon/close.svg';\n\nconst ModalHeader = ({ setModalTweetOpen, setModalReplyOpen }) => {\n  return (\n    <>\n      <div className='modal-header'>\n        <img\n          src={iconClose}\n          alt='icon of close button'\n          className='icon-close'\n          onClick={() => {\n            setModalTweetOpen?.(false);\n            setModalReplyOpen?.(false);\n          }}\n        />\n      </div>\n    </>\n  );\n};\nconst ModalHeaderIcon = ({ setModalProOpen, onSubmit }) => {\n  return (\n    <>\n      <div className='modal-header modal-header-with-btn'>\n        <img\n          src={iconClose}\n          alt='icon of close button'\n          className='icon-close'\n          onClick={() => setModalProOpen(false)}\n        />\n        <h5>編輯個人資料</h5>\n        <button\n          className='button-md button-m active'\n          form='hook-form'\n          type='submit'\n\n          // onClick={onSubmit}\n          //  type='submit'\n        >\n          儲存\n        </button>\n      </div>\n    </>\n  );\n};\nexport { ModalHeader, ModalHeaderIcon };\n","import axios from 'axios';\nimport { get } from 'react-hook-form';\n// const baseUrl = 'http://localhost:3004';\n\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n// ,  {\n//   headers: {\n//     'Content-Type': 'application/json',\n//     'Origin': 'https://leemengyun.github.io/'\n//   }}\n\n// ,{\n//       headers: {\n//         'Access-Control-Allow-Origin':'*',\n//         'Content-Type': 'application/json',\n//         'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\n//         'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n//         'Accept': 'application/json',\n//       }\n//     }\n\nexport const getTweets = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/tweets`); //watch的屬性名作為path\n    //console.log(res.data[0].data)//{status: 'success', data: {…}}data: {tweets: Array(7)}status: \"success\"[[Prototype]]: Object\n    return res.data; //{tweets: Array(54)}\n  } catch (error) {\n    console.log('[Get Tweets failed]:', error);\n  }\n};\n\nexport const getTopUsers = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/top`);\n    return res.data;\n  } catch (error) {\n    console.log('[get topUser failed]:', error);\n  }\n};\n\nexport const getTweet = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/tweets/${pathId}`);\n    return res.data;\n  } catch (error) {\n    console.log('[Get Tweet Failed]: ', error);\n  }\n};\n\n//取得User的推文\nexport const getUserTweets = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}/tweets`);\n    return res.data;\n  } catch (error) {\n    console.log('[Get UserTweets Failed!!]:', error);\n  }\n};\n//取得User Liked的推文\nexport const getUserLikedTweets = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}/likes`);\n    return res.data;\n  } catch (error) {\n    console.log('[Get getUserLikedTweets Failed!!]:', error);\n  }\n};\n\n//取得User Replied的推文\nexport const getUserRepliedTweets = async (pathId) => {\n  try {\n    const res = await axiosInstance.get(\n      `${baseUrl}/users/${pathId}/replied_tweets`\n    );\n    return res.data;\n  } catch (error) {\n    console.log('[Get GetUserRepliedTweets Failed!!]:', error);\n  }\n};\n\n//新增 tweet\nexport const createTweet = async (payload) => {\n  try {\n    const { UserId, description } = payload;\n    const res = await axiosInstance.post(`${baseUrl}/tweets`, {\n      UserId,\n      description,\n    });\n    return res.data;\n  } catch (error) {\n    console.error('[CREATE a Tweet failed:]:', error);\n  }\n};\n\n//取得特定推文的所有回覆\nexport const getTweetReplies = async (pathId)=>{\n  try{\n    const res = await axiosInstance.get(`${baseUrl}/tweets/${pathId}/replies`)\n    return res.data\n  }catch(error){\n\n  }\n}\n\n\n//回覆貼文\nexport const repliedTweet = async (payload) => {\n  try {\n    const { UserId,TweetId, comment } = payload;\n    const res = await axiosInstance.post(`${baseUrl}/tweets/${TweetId}/replies`, {\n      UserId,\n      comment\n    });\n    console.log(res)\n    return res.data;\n  } catch (error) {\n    console.error('[Reply Tweet failed:]:', error);\n  }\n};\n\n\n//跟隨使用者\nexport const userFollowing = async (id) => {\n  try {\n    const res = await axiosInstance.post(`${baseUrl}/followships`, {\n      id\n    });\n    console.log(res)\n    return res.data;\n  } catch (error) {\n    console.error('[Following failed:]:', error);\n  }\n};\n//取消跟隨\nexport const cancelFollow = async (followingId) => {\n  try {\n    const res = await axiosInstance.delete(`${baseUrl}/followships/${followingId}`);\n    return res.data;\n  } catch (error) {\n    console.error('[Cancel Follow failed:]:', error);\n  }\n};\n\n","export default __webpack_public_path__ + \"static/media/avatar.bd02c62f.svg\";","import React from 'react';\nimport Defaultavatar from '../../assets/images/icon/avatar.svg';\n\nconst UserAvatar = ({avatar,onClick,userId}) =>{\n    return (\n      <> \n        <div className='avatar' onClick={(e)=>{ \n          onClick?.({userId})\n          e.stopPropagation()\n          //因為在最內層點擊事件 外層有相對應的事件 也會跟著觸發 因此加入e.stopPropagation()來避免外層觸發的可能\n          }}>\n          <img\n            src={avatar || Defaultavatar}\n            alt='userAvatar'\n            className='user-avatar'\n          />\n        </div>\n      </>\n    )\n  }\n\n export default UserAvatar;\n\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { createTweet } from '../../api/twitter';\nimport { useAuth } from '../../components/context/AuthContext';\n\n// import InputGroup from './InputGroup';\nimport UserAvatar from '../basic/UserAvatar';\n// import testAvatar from '../../assests/images/avatar1.jpg';\n\nconst TweetCardForm = ({\n  avatar,\n  onAddTweet,\n  onModalAddTweet,\n  setTweets,\n  tweets,\n}) => {\n  const { member, modalReplyOpen, setModalTweetOpen } = useAuth(); // 取出需要的狀態與方法\n\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    // watch,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    if (onAddTweet) {\n      onAddTweet(data);\n    }\n    if (onModalAddTweet) {\n      onModalAddTweet(data);\n    }\n    //清除表單\n    reset();\n  };\n\n  return (\n    <>\n      <div className='formLayout tweet-card-form'>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className='form-group-inner-wrapper'>\n            <UserAvatar avatar={avatar} />\n            <div className='textarea-group-container'>\n              <div className='grow-wrap'>\n                <textarea\n                  type='textarea'\n                  id='description'\n                  name='description'\n                  {...register('description', {\n                    required: true,\n                    maxLength: 250,\n                  })}\n                  placeholder='有什麼新鮮事？'\n                  maxLength='250'\n                  className='tweet-text-area'\n                  // ref={textAreaRef}\n                  // onChange={onChange}\n                  // rows={1}\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            {errors.description && errors.description.type === 'required' && (\n              <span className='error'>This is required</span>\n            )}\n            <button className='button-md button-m active' type='submit'>\n              推文\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TweetCardForm;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3004';\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n//要記得export外面才能用\nexport const getUserInfo = async (pathId) => {\n  try {\n    // 獲得todo end point\n    // const res = await axios.get(`${baseUrl}/userinfo`);\n    const res = await axiosInstance.get(`${baseUrl}/users/${pathId}`);\n\n    //server 回傳的物件會包在data,所以一定要用.data才會拿到對的資料\n    // console.log(res.data.data);\n    // console.log(res)\n    return res.data;\n  } catch (error) {\n    console.error('[getUser Info failed]', error);\n  }\n};\n\n// 更新個人資料\nexport const updateUserInfo = async (payload) => {\n  try {\n    const { id, data } = payload;\n    console.log({ payload });\n    const res = await axiosInstance.put(`${baseUrl}/users/${id}`, {\n      // 這裡的data是前面打包的\n      //name, introduction, avatar,banner\n      name: data.name,\n      introduction: data.introduction,\n      avatar: data.avatar,\n      banner: data.banner,\n    });\n\n    //server 回傳的物件會包在data,所以一定要用.data才會拿到對的資料\n    console.log('res data', res.data);\n    return res.data;\n  } catch (error) {\n    console.error('[getUser Info failed]', error);\n  }\n};\n","// import { useForm } from 'react-hook-form';\nimport { useState, useEffect } from 'react';\n\n// import component\nimport ModalContent from './ModalContent';\nimport { ModalHeader } from './ModalHeader';\nimport TweetCardForm from '../forms/TweetCardForm';\n// import api\nimport { getUserInfo } from '../../api/userinfo';\nimport { getTweets, createTweet } from '../../api/twitter';\nimport { useAuth } from '../../components/context/AuthContext';\n\nconst ModalTweet = ({ handleAddTweets }) => {\n  const [profile, setProfile] = useState({});\n  const { member, modalReplyOpen, modalTweetOpen, setModalTweetOpen } =\n    useAuth(); // 取出需要的狀態與方法\n\n  // @ 新增tweet\n  const onModalAddTweet = async (data) => {\n    // alert('submit ModlaTsodos');\n    // console.log(data);\n    try {\n      const addData = await createTweet({\n        UserId: member.id,\n        description: data.description,\n      });\n      // if (addData) {\n      setModalTweetOpen(!modalTweetOpen);\n      // }\n      console.log({ modalTweetOpen });\n\n      // console.log({ addData });\n    } catch (error) {\n      console.log(`[createData failed]`, error);\n    }\n  };\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const data = await getUserInfo(member.id);\n        setProfile(data);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n  }, []);\n\n  console.log({ modalTweetOpen });\n\n  return (\n    <>\n      <ModalContent>\n        <ModalHeader setModalTweetOpen={setModalTweetOpen} />\n        <div className='modal-content modal-tweet-content'>\n          <div className='tweet-form-wrapper'>\n            <TweetCardForm\n              avatar={profile.avatar}\n              onModalAddTweet={onModalAddTweet}\n            />\n          </div>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default ModalTweet;\n","import React from 'react';\nimport { useEffect } from 'react';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport SettingForm from '../components/forms/SettingForm';\nimport { HeaderMain } from '../components/basic/Header';\nimport ModalTweet from '../components/basic/ModalTweet';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst SettingPage = ({ setModalTweetOpen }) => {\n  const { isAuthentic, member, modalTweetOpen } = useAuth(); // 取出需要的狀態與方法\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        pageIndex={2}\n        memberId={member?.id}\n      >\n        {modalTweetOpen && <ModalTweet />}\n\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderMain pageTitle='帳戶設定' />\n            <SettingForm />\n          </div>\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default SettingPage;\n","import React from \"react\";\n\nconst TweetUserName2 = ({name, account})=>{\n    return (\n        <div className='tweet-username-2'>\n          <span className='user-name'>\n            {name}\n          </span>\n          <span className='user-account'>\n            @{account}\n          </span>\n        </div>\n    )\n  }\n\n  export default TweetUserName2;","import React from 'react';\nimport UserAvatar from './UserAvatar';\nimport TweetUserName2 from './TweetUserName2';\nimport clsx from 'clsx';\n\nconst FollowCard = ({...props}) => {\n  const id = props.id\n  return (\n    <div className='follow-card'>\n        <div className='follow-card-info'>\n        <UserAvatar \n        avatar={props.avatar} \n        userId={id} \n        onClick={({userId})=>{props.onClick?.({userId})}}\n        />\n        <TweetUserName2 name={props.name} account={props.account} />\n      </div>\n      <div className='follow-card-button'>\n        <button className={`${clsx('', {active: props.isFollowing}) } button-md button-m`} type='submit'>\n          {props.isFollowing ? '正在跟隨' : '跟蹤'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowCard;\n\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTopUsers } from '../../api/twitter';\nimport FollowCard from '../basic/FollowCard';\nimport { useAuth } from '../context/AuthContext';\n// import { useAuth } from '../context/AuthContext';\n// import iconLogo from '../assets/images/icon/logo.svg';\n// import svg\n// import iconHome from '../assets/images/icon/home.svg';\n\nconst FollowCardList = ({setPathId,userIsFollowing}) => {\n  const [users, setUsers] = useState([]);\n  const { member } = useAuth()\n  const navigate = useNavigate()\n  \n  \n  const handleClickCard = ({ userId }) => {\n    userId === member.id\n      ? navigate(`/user/${userId}`)\n      : userId !== undefined && navigate(`/other/${userId}`);\n      setPathId(userId)\n  };\n\n\n  useEffect(() => {\n    const getUsersAsync = async () => {\n      try {\n        const data = await getTopUsers();\n        setUsers(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUsersAsync();\n  }, [userIsFollowing]);\n\n  return (\n    <>\n      <div className='follow-list-container'>\n        <div className='title-secondary'>\n          <h4>推薦跟隨</h4>\n        </div>\n        {users.map((user) => {\n          return <FollowCard \n          key={user.id} \n          {...user} \n          onClick={handleClickCard}\n          />;\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default FollowCardList;\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/zh-tw';\n\n\nexport default function DayTime (a){\n    dayjs.extend(relativeTime);\n    dayjs.locale('zh-tw')\n    const anHourAgo = (a)=> dayjs(a).subtract(1, 'hour');\n    const timeFromNow = (a) => anHourAgo(a).fromNow()\n    \n    //查看現在時間\n    // const now = dayjs();\n    // const format = now.format('HH:mm')\n    return  timeFromNow(a)\n }\n    \n  ","import React from \"react\";\nimport DayTime from \"../../helper/TimeHelper\";\n//時間會在更新\nconst TweetUserName3 = ({name, account , time})=>{\n    // const relativeTime = timeHelper.relativeTimeFromNow(time)\n    // console.log(relativeTime)\n    return (    \n        <div className='tweet-username-3'>\n          <span className='user-name'>\n            {name}\n          </span>\n          <span className='user-account'>\n            @{account}\n          </span>\n          <span className='user-time'> ·{DayTime(time)}</span>\n        </div>\n    )\n  }\n\n  export default TweetUserName3;","import React from 'react';\nimport TweetUserName3 from './TweetUserName3';\nimport UserAvatar from './UserAvatar';\nconst TweetCardReply = ({ ...props }) => {\n  return (\n    <div className='tweet-card-basic'>\n      <UserAvatar avatar={props.User.avatar} />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3\n          name={props.User.name}\n          account={props.User.account}\n          time={props.createdAt}\n        />\n        <p className='tweet-card-basic-reply'>\n          回覆\n          <span className='reply-user-account'>@{props.Tweet.User.name}</span>\n        </p>\n        <p className='tweet-card-basic-description'>{props.Tweet.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardReply;\n","import React, { useEffect, useState } from 'react';\nimport { getUserRepliedTweets } from '../../api/twitter';\nimport TweetCardReply from '../basic/TweetCardReply';\n\nconst ReplyLists = ({ pathId, onClick }) => {\n  const [userReplied, setUserReplied] = useState([]);\n\n  useEffect(() => {\n    const getUserRepliedTweetsAsync = async () => {\n      try {\n        const data = await getUserRepliedTweets(pathId);\n        setUserReplied(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserRepliedTweetsAsync();\n  }, [pathId]);\n\n  return (\n    <div className='TweetLists'>\n      {userReplied.map((tweet) => {\n        return (\n          <TweetCardReply\n            key={tweet.id}\n            {...tweet}\n            // onClick={({id,userId})=>{\n            //   onClick?.({id,userId})\n            // }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ReplyLists;\n","export default __webpack_public_path__ + \"static/media/like-filled.a23cc5e1.svg\";","export default __webpack_public_path__ + \"static/media/reply.1d9be076.svg\";","export default __webpack_public_path__ + \"static/media/like.81043da8.svg\";","import React from \"react\";\nimport like from '../../assets/images/icon/like-filled.svg'\nimport reply from '../../assets/images/icon/reply.svg'\nimport likefilled from '../../assets/images/icon/like.svg'\nimport clsx from \"clsx\";\nimport { useAuth } from \"../context/AuthContext\";\nconst TweetIconCount =({likesCount,repliesCount,isLiked,id}) => {\n    const { setModalReplyOpen,setTweetId} = useAuth();\n    return(\n      <div className='tweet-card-icon-count'>\n          <div className='tweet-card-reply-count' onClick={(e)=>{ \n            setTweetId(id)\n            setModalReplyOpen(true)\n            e.stopPropagation()\n            }}>\n            <img src={reply} alt='reply' className='reply-icon'\n            />\n            <span className='tweet-count'>\n              {repliesCount}\n            </span>\n          </div>\n          <div className='tweet-card-like-count'>\n           <img src={isLiked ?  likefilled : like} alt='like' className={`${clsx('', {active: isLiked})} like-icon`}\n           />\n          <span className = 'tweet-count' >\n            {likesCount}\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  export default TweetIconCount;","\nimport React from \"react\";\nimport UserAvatar from \"./UserAvatar\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport TweetIconCount from \"./TweetIconCount\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst TweetCardBasic = ({ ...props }) => {\n  const navigate = useNavigate();\n  const tweetId = props.id\n  const handleClick = (tweetId)=>{\n    tweetId && navigate(`/main/tweet/${tweetId}`);\n  }\n\n  return (\n    <div className='tweet-card-basic' onClick={(e)=>{\n      handleClick(tweetId)\n      e.stopPropagation()\n      }}>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId}\n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3 \n          name={props.User.name} \n          account={props.User.account} \n          time={props.createdAt}\n        />\n          <p className='tweet-card-basic-description'>\n            {props.description}\n          </p>\n          <TweetIconCount \n            likesCount={props.likesCount} \n            repliesCount={props.repliesCount}\n            isLiked={props.isLiked}\n            id={tweetId}\n          />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardBasic;\n","import React from 'react';\nimport TweetCardBasic from '../basic/TweetCardBasic';\nimport { useEffect } from 'react';\n\nconst TweetsLists = ({ tweets, onClick }) => {\n  return (\n    <div className='TweetLists'>\n      {tweets.map((tweet) => {\n        return (\n          <TweetCardBasic\n            key={tweet.id}\n            {...tweet}\n            onClick={({ tweetId, userId }) => {\n              onClick?.({ tweetId, userId });\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TweetsLists;\n","\nimport React from \"react\";\nimport UserAvatar from \"./UserAvatar\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport TweetIconCount from \"./TweetIconCount\";\n\n\nconst TweetCardLike = ({ ...props }) => {\n  // const value ={\n  //   tweetId: props.id,\n  //   userId: props.UserId,\n  // }\n  return (\n    <div className='tweet-card-basic' onClick={()=>{\n      props.onClick?.({tweetId: props.id})\n      }}>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId}\n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3 \n          name={props.User.name} \n          account={props.User.account} \n          time={props.Tweet.createdAt}\n        />\n          <p className='tweet-card-basic-description'>\n            {props.Tweet.description}\n          </p>\n          <TweetIconCount \n            likesCount={props.likesCount} \n            repliesCount={props.repliesCount}\n            isLiked={props.isLiked}\n          />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCardLike;\n","import React, { useEffect,useState } from 'react';\nimport { getUserLikedTweets } from '../../api/twitter';\nimport TweetCardLike from '../basic/TweetCardLike';\n\nconst LikeLists = ({ pathId, onClick }) => {\n  const [userLiked,setUserLiked] = useState([])\n  \n  useEffect(()=>{\n    const getUserLikedTweetsAsync = async()=>{\n      try{\n        const data = await getUserLikedTweets(pathId)\n        setUserLiked(data)\n      }catch(error){\n        console.log(error)\n      }\n    }\n    getUserLikedTweetsAsync()\n  },[])\n\n\n  return (\n    <div className='TweetLists'>\n      {userLiked.map((tweet)=>{\n        return <TweetCardLike \n          key={tweet.id}\n          {...tweet}\n          onClick={({tweetId,userId})=>{\n            onClick?.({tweetId,userId})\n          }}\n        />\n   })}\n    </div>\n  );\n};\n\nexport default LikeLists;\n","export default __webpack_public_path__ + \"static/media/bk.953d3799.jpg\";","import React from 'react';\nimport DefaultBk from '../../assets/images/bk.jpg';\n\nconst UserBk = ({ bkUrl }) => {\n  return (\n    <>\n      <div className='profile-bk-clip'>\n        <img\n          src={bkUrl || DefaultBk}\n          alt='mountain pic'\n          className='profile-bk-image'\n        />\n      </div>\n    </>\n  );\n};\n\nexport default UserBk;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\n// import iconMessage from '../../assets/images/icon/message.svg';\n// import iconNotice from '../../assets/images/icon/notice.svg';\n\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileCard = ({\n  name,\n  account,\n  introduction,\n  avatar,\n  banner,\n  followersCount,\n  followingsCount,\n  setModalProOpen,\n}) => {\n  return (\n    <>\n      <div className='profile-card'>\n        <UserBk bkUrl={banner} />\n        <UserAvatar avatar={avatar} />\n        <div className='profile-btn-group'>\n          {/* <img\n            src={iconMessage}\n            alt='icon of message'\n            className='icon-round icon-message icon-round cursor-point'\n          /> */}\n          {/* <img\n            src={iconNotice}\n            alt='icon of Notice'\n            className='icon-round icon-notice icon-round cursor-point'\n          /> */}\n          <button\n            className='button-md button-m'\n            onClick={() => setModalProOpen(true)}\n          >\n            編輯個人資料\n          </button>\n        </div>\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n          <p className='user-desc'>{introduction}</p>\n        </div>\n        <div className='user-follow-info'>\n          <Link to='/user/followers'>\n            <p>\n              {followersCount} 個 <span>跟隨中</span>\n            </p>\n          </Link>\n\n          <Link to='/user/followers'>\n            <p>\n              {followingsCount} 位<span>跟隨者</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileCard;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { repliedTweet } from '../../api/twitter';\n\n// import InputGroup from './InputGroup';\nimport UserAvatar from '../basic/UserAvatar';\nimport { useAuth } from '../context/AuthContext';\n// import testAvatar from '../../assests/images/avatar1.jpg';\n\nconst TweetCardForm = ({ avatar,tweetInfo }) => {\n  const { member,setModalReplyOpen} = useAuth();\n  const navigate = useNavigate()\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    // watch,\n  } = useForm();\n\n  const onSubmit = async(data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // alert('觸發onSubmit');\n    // console.log(data.description);\n    // setNewTweet(data);\n    // onAddTweet?.(data);\n    console.log(data)\n    console.log(tweetInfo)\n    const info = await repliedTweet({\n      UserId: member.id,\n      TweetId: tweetInfo.id,\n      comment:data.description\n    })\n    setModalReplyOpen(false)\n    navigate(`/main/tweet/${tweetInfo.id}`)\n    reset();\n  };\n\n  return (\n    <>\n      <div className='formLayout tweet-card-form'>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className='form-group-inner-wrapper'>\n            <UserAvatar avatar={avatar} />\n            <div className='textarea-group-container'>\n              <div className='grow-wrap'>\n                <textarea\n                  type='textarea'\n                  id='description'\n                  name='description'\n                  {...register('description', {\n                    required: true,\n                    maxLength: 250,\n                  })}\n                  placeholder='推你的回覆？'\n                  maxLength='250'\n                  className='tweet-text-area'\n                  // ref={textAreaRef}\n                  // onChange={onChange}\n                  // rows={1}\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            {errors.description && errors.description.type === 'required' && (\n              <span className='error'>This is required</span>\n            )}\n            <button className='button-md button-m active' type='submit'>\n              回覆\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TweetCardForm;\n","import React from \"react\";\nimport TweetUserName3 from \"./TweetUserName3\";\nimport UserAvatar from \"./UserAvatar\";\n\n\nconst ReplyCard = ({tweetInfo})=>{\n  return (\n    <div className='tweet-card-basic'>\n      <UserAvatar avatar={tweetInfo.User.avatar} />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3\n          name={tweetInfo.User.name}\n          account={tweetInfo.User.account}\n          time={tweetInfo.createdAt}\n        />\n        <p className='tweet-card-basic-description'>{tweetInfo.description}</p>\n        <p className='tweet-card-basic-reply'>\n          回覆給\n          <span className='reply-user-account'>@{tweetInfo.User.account}</span>\n        </p>\n      </div>\n    </div> \n  )\n}\n//回覆的帳號相同\n\n\nexport default ReplyCard;","// import { useForm } from 'react-hook-form';\n\n// import component\nimport ModalContent from './ModalContent';\n// import UserAvatar from './UserAvatar';\n// import InputGroup from '../forms/InputGroup';\nimport { ModalHeader } from './ModalHeader';\nimport ReplyCardForm from '../forms/ReplyCardForm';\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport ReplyCard from './ReplyCard'\nimport { useEffect, useState } from 'react';\nimport { getTweet } from '../../api/twitter';\nimport { useAuth } from '../context/AuthContext';\n const ModalReply = () => {\n  const [tweetInfo, setTweetInfo] = useState({\n    id: '',\n    UserId: '',\n    description: '',\n    createdAt: '',\n    User: {},\n    Likes:{},\n    replies:{},\n    updatedAt: ''\n  });\n   const { isAuthentic, currentMember,setModalReplyOpen,tweetId } = useAuth();\n  \n  useEffect(() => {\n    const getTweetAsync = async () => {\n      try {\n        const data = await getTweet(tweetId);\n        setTweetInfo(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTweetAsync();\n  }, []);\n  \n  return (\n    <>\n      <ModalContent>\n        <ModalHeader setModalReplyOpen={setModalReplyOpen} />\n        <div className='modal-content modal-reply-content'>\n          <div className='tweet-reply-wrapper'>\n            <ReplyCard \n              tweetInfo={tweetInfo}\n            />\n          </div>\n          <div className='tweet-form-wrapper'>\n            <ReplyCardForm \n            avatar={currentMember.avatar}\n            tweetInfo={tweetInfo}\n            />\n          </div>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default ModalReply;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabThreeGroup } from '../components/basic/Tab';\n\nimport FollowCardList from '../components/user/FollowCardList';\nimport ReplyLists from '../components/user/ReplyLists';\nimport TweetsLists from '../components/user/TweetsLists';\nimport LikeLists from '../components/user/LikeLists';\nimport ProfileCard from '../components/basic/ProfileCard';\nimport { useParams } from 'react-router-dom';\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\nimport { getUserTweets } from '../api/twitter';\nimport ModalReply from '../components/basic/ModalReply';\nimport ModalTweet from '../components/basic/ModalTweet';\n\nconst UserPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  const [pathId, setPathId] = useState(Number(useParams().id)); //只是為了與UserOtherPage一樣而設定state\n\n  //取得網址:id\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const {\n    isAuthentic,\n    // currentMember,\n    member,\n    modalReplyOpen,\n    modalTweetOpen,\n  } = useAuth();\n  // @串接 server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  const [userTweets, setUserTweets] = useState([]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n  // const dummyData = {\n  //   user: {\n  //     id: 1,\n  //     account: 'test-acount-1',\n  //     email: 'test1@example.com',\n  //     password: '$2a$10$MlmbvV0fDfjJuqipEU88W.KSo75y8Zc1C/hxA.rdG772HaALUiSQ.',\n  //     name: 'test-1',\n  //     avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //     introduction: 'Hi I am test No.1',\n  //     banner: 'https://i.imgur.com/3ZH4ZZ8.jpeg',\n  //     role: 'user',\n  //     createdAt: '2023-05-25T11:09:42.000Z',\n  //     updatedA: '2023-05-25T11:09:42.000Z',\n  //     tweets: [\n  //       {\n  //         id: 1,\n  //         userId: 1,\n  //         description: 'Test-Tweet-user1-1',\n  //         createdAt: '2023-05-25T11:09:42.000Z',\n  //         updatedAt: '2023-05-25T11:09:42.000Z',\n  //         isLiked: true,\n  //         repliesCount: 1,\n  //         user: {\n  //           name: 'test-1-name',\n  //           account: 'test-1-account',\n  //           avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //         },\n  //       },\n  //       {\n  //         id: 2,\n  //         userId: 1,\n  //         description: 'Test-Tweet-user1-1',\n  //         createdAt: '2023-05-25T11:09:42.000Z',\n  //         updatedAt: '2023-05-25T11:09:42.000Z',\n  //         isLiked: true,\n  //         repliesCount: 1,\n  //         user: {\n  //           name: 'test-1-name',\n  //           account: 'test-1-account',\n  //           avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //         },\n  //       },\n  //       {\n  //         id: 3,\n  //         userId: 1,\n  //         description: 'Test-Tweet-user1-1',\n  //         createdAt: '2023-05-25T11:09:42.000Z',\n  //         updatedAt: '2023-05-25T11:09:42.000Z',\n  //         isLiked: true,\n  //         repliesCount: 1,\n  //         user: {\n  //           name: 'test-1-name',\n  //           account: 'test-1-account',\n  //           avatar: 'https://i.imgur.com/YcP0tik.jpeg',\n  //         },\n  //       },\n  //     ],\n  //   },\n  // };\n\n  //@ profileCard 渲染後端 userInfo\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const userInfo = await getUserInfo(pathId);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n\n    const getUserTweetsAsync = async () => {\n      try {\n        const data = await getUserTweets(pathId);\n        setUserTweets(data);\n        // console.log(data.length);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserTweetsAsync();\n    getUserInfoAsync();\n  }, [pathId, modalTweetOpen]);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic, member]); //只要isAuthentic或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '1':\n        return <ReplyLists pathId={pathId} />;\n      case '2':\n        return <LikeLists pathId={pathId} />;\n      default:\n        return <TweetsLists tweets={userTweets} />;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec role='user' pageIndex={1} memberId={member.id}>\n        {modalTweetOpen && <ModalTweet />}\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser\n              userAccountName={userInfo.name}\n              userTweetsLength={userTweets.length}\n            />\n\n            <ProfileCard {...userInfo} setModalProOpen={setModalProOpen} />\n            <TabThreeGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n            {modalReplyOpen && <ModalReply />}\n            {switchContext(tabIndex)}\n            {/* {tabIndex === '0' && <TweetsLists />}\n            {tabIndex === '1' && <ReplyLists />}\n            {tabIndex === '2' && <LikeLists />} */}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList setPathId={setPathId} />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserPage;\n","export default __webpack_public_path__ + \"static/media/message.4c9af58b.svg\";","export default __webpack_public_path__ + \"static/media/notice.60c0a6cc.svg\";","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport iconMessage from '../../assets/images/icon/message.svg';\nimport iconNotice from '../../assets/images/icon/notice.svg';\nimport clsx from 'clsx';\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileOtherCard = ({\n  name,\n  account,\n  introduction,\n  avatar,\n  banner,\n  followersCount,\n  followingsCount,\n  setModalProOpen,\n  userIsFollowing,\n  onClick\n}) => {\n  const userId = Number(useParams().id);\n  return (\n    <>\n      <div className='profile-card'>\n        <UserBk bkUrl={banner} />\n        <UserAvatar avatar={avatar} />\n        <div className='profile-btn-group'>\n          <img\n            src={iconMessage}\n            alt='icon of message'\n            className='icon-round icon-message icon-round cursor-point'\n          />\n          <img\n            src={iconNotice}\n            alt='icon of Notice'\n            className='icon-round icon-notice icon-round cursor-point'\n          />\n          <button\n            className={`${clsx('',{active: userIsFollowing})} button-md button-m`}\n            onClick={() => onClick?.(userId)}\n          >\n            {userIsFollowing ? '正在跟隨' : '跟蹤'}\n          </button>\n        </div>\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n          <p className='user-desc'>{introduction}</p>\n        </div>\n        <div className='user-follow-info'>\n          <Link to='/user/followers'>\n            <p>\n              {followersCount} 個 <span>跟隨中</span>\n            </p>\n          </Link>\n\n          <Link to='/user/followers'>\n            <p>\n              {followingsCount} 位<span>跟隨者</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileOtherCard;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabThreeGroup } from '../components/basic/Tab';\n\nimport FollowCardList from '../components/user/FollowCardList';\nimport ReplyLists from '../components/user/ReplyLists';\nimport TweetsLists from '../components/user/TweetsLists';\nimport LikeLists from '../components/user/LikeLists';\nimport ProfileOtherCard from '../components/basic/ProfileOtherCard';\nimport { useParams } from 'react-router-dom';\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\nimport { cancelFollow, getUserTweets, userFollowing } from '../api/twitter';\nimport ModalReply from '../components/basic/ModalReply';\nimport ModalTweet from '../components/basic/ModalTweet';\n\nconst UserOtherPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  const [pathId, setPathId] = useState(Number(useParams().id)); //在推薦跟隨會隨不同的pathId變換\n  //取得網址:id\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const { isAuthentic, member, modalReplyOpen, modalTweetOpen } = useAuth();\n  // @串接 local-server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n  const [userTweets, setUserTweets] = useState([]);\n  const [userIsFollowing, setUserIsFollowing] = useState(false);\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  // @ tweets 的 dummy資料\n\n  // console.log(currentMember)\n  //@ profileCard 渲染後端 userInfo\n\n  const handleUserISFollowing = async (userId) => {\n    try {\n      if (!userIsFollowing) {\n        await userFollowing(userId);\n      } else {\n        await cancelFollow(userId);\n      }\n      setUserIsFollowing(!userIsFollowing);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const data = await getUserInfo(pathId);\n        setUserInfo(data);\n        setUserIsFollowing(data.isFollowing);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    const getUserTweetsAsync = async () => {\n      try {\n        const data = await getUserTweets(pathId);\n        setUserTweets(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUserTweetsAsync();\n    getUserInfoAsync();\n  }, [pathId, modalTweetOpen]);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '1':\n        return <ReplyLists pathId={pathId} />;\n      case '2':\n        return <LikeLists pathId={pathId} />;\n      default:\n        return <TweetsLists tweets={userTweets} />;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalTweetOpen={setModalTweetOpen}\n        setModalProOpen={setModalProOpen}\n        memberId={member.id}\n      >\n        {modalTweetOpen && <ModalTweet />}\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser userAccountName='Others' userTweetsLength='33推文' />\n\n            <ProfileOtherCard\n              {...userInfo}\n              setModalProOpen={setModalProOpen}\n              userIsFollowing={userIsFollowing}\n              onClick={handleUserISFollowing}\n            />\n            <TabThreeGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n            {modalReplyOpen && <ModalReply />}\n            {switchContext(tabIndex)}\n            {/* {tabIndex === '0' && <TweetsLists />}\n            {tabIndex === '1' && <ReplyLists />}\n            {tabIndex === '2' && <LikeLists />} */}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList\n            setPathId={setPathId}\n            userIsFollowing={userIsFollowing}\n          />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserOtherPage;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport { TabTwoGroup } from '../components/basic/Tab';\nimport ModalTweet from '../components/basic/ModalTweet';\n//call api\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\n// import { getUserTweets } from '../api/twitter';\n\nconst UserFollowersPage = ({ setModalProOpen, setModalTweetOpen }) => {\n  const [tabIndex, setTabIndex] = useState('0');\n  // const pathId = Number(useParams()); //取得網址\n  //向後端 給予(pathid)參數 拿該用戶的資料\n  //分別建立一個state儲存tweets like replies資料 若state有資料便不抓取新資料 除非重整頁面\n  const navigate = useNavigate();\n  const { isAuthentic, member, modalTweetOpen } = useAuth();\n  // @串接 local-server 用這一個\n  const [userInfo, setUserInfo] = useState({});\n\n  //@ profileCard 渲染後端 userInfo\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const userInfo = await getUserInfo(member.id);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  //切換下方tab\n  //swtich case 與 if else概念相同，但return component更簡潔(??)\n  function switchContext(tabIndex) {\n    switch (tabIndex) {\n      case '0':\n        return <h1>替換成 tab0要用的component</h1>;\n      default:\n        return <h1>替換成 tab1要用的component</h1>;\n    }\n  }\n\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        setModalProOpen={setModalProOpen}\n        pageIndex={1}\n        memberId={userInfo.id}\n      >\n        {modalTweetOpen && <ModalTweet />}\n\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m'>\n            <HeaderUser userAccountName='John Doe' userTweetsLength='25推文' />\n\n            <TabTwoGroup tabIndex={tabIndex} setTabIndex={setTabIndex} />\n\n            {switchContext(tabIndex)}\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          {/* <FollowCardList /> */}\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default UserFollowersPage;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { useForm } from 'react-hook-form';\n\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport FollowCardList from '../components/user/FollowCardList';\nimport TweetLists from '../components/user/TweetsLists';\nimport TweetCardForm from '../components/forms/TweetCardForm';\nimport { HeaderMain } from '../components/basic/Header';\n\nimport { getTweets, createTweet } from '../api/twitter';\nimport { getUserInfo } from '../api/userinfo';\nimport { useAuth } from '../components/context/AuthContext';\nimport ModalReply from '../components/basic/ModalReply';\nimport ModalTweet from '../components/basic/ModalTweet';\nimport { set } from 'react-hook-form';\n\nconst MainPage = ({ setModalTweetOpen }) => {\n  const [tweets, setTweets] = useState([]);\n  const [profile, setProfile] = useState(null);\n  const navigate = useNavigate();\n  const { isAuthentic, member, modalReplyOpen, modalTweetOpen } = useAuth(); // 取出需要的狀態與方法\n  const [isTweetsLoaded, setIsTweetsLoaded] = useState(false); // 用來防止tweets-loop產生\n\n  const handleClickCard = ({ userId }) => {\n    userId === profile.id\n      ? navigate(`/user/${userId}`)\n      : userId !== undefined && navigate(`/other/${userId}`);\n  };\n  //@ 呼叫 /api/tweets\n  const getTweetsAsync = async () => {\n    try {\n      const data = await getTweets();\n      setTweets(data);\n    } catch (error) {\n      console.log(error);\n      setIsTweetsLoaded(true); // 标记为已加载，以防止无限加载\n    }\n  };\n\n  // @ 新增tweet /api/tweets\n  const handleAddTweets = async (data) => {\n    // alert('submit todos');\n    // console.log(data);\n    try {\n      const addData = await createTweet({\n        UserId: member.id,\n        description: data.description,\n      });\n      console.log(addData);\n      //@ 再呼叫一次\n      getTweetsAsync();\n    } catch (error) {\n      console.log(`[createData failed]`, error);\n    }\n  };\n\n  // @ 呼叫 使用者資料 /api/users\n  useEffect(() => {\n    const getUserInfoAsync = async () => {\n      try {\n        const data = await getUserInfo(member.id);\n        setProfile(data);\n      } catch (error) {\n        console.error('[getUser Info  with Async failed]', error);\n      }\n    };\n    getUserInfoAsync();\n  }, []);\n\n  // @ 頁面首次載入 /api/tweets,並且modalTweetOpen 也觸發渲染\n  useEffect(() => {\n    getTweetsAsync();\n  }, [modalTweetOpen]);\n  //@ 這一頁的驗證身份放最上面,currentMember好像比較不會出錯\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  // console.log('testData', testData);\n  return (\n    <>\n      <ContainerColSec\n        role='user'\n        // setModalTweetOpen={setModalTweetOpen}\n        pageIndex={0}\n        memberId={member.id}\n      >\n        {modalTweetOpen && <ModalTweet />}\n        {modalReplyOpen && <ModalReply />}\n        <section className='section-outer-m col-7'>\n          <div className='section-main-m '>\n            <HeaderMain pageTitle='首頁' />\n            <div className='tweet-form-wrapper'>\n              <TweetCardForm\n                {...profile}\n                onAddTweet={handleAddTweets}\n                setTweets={setTweets}\n                tweets={tweets}\n              />\n            </div>\n            <TweetLists tweets={tweets} onClick={handleClickCard} />\n          </div>\n        </section>\n        <section className='section-right col-3'>\n          <FollowCardList setPathId={() => {}} />\n        </section>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default MainPage;\n","export default __webpack_public_path__ + \"static/media/post.38b40641.svg\";","import React from 'react';\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\n// import TweetCardBasic from './TweetCardBasic';\n\n// import svg\n// @ testing local photo\n// import testAvatar from '../../assets/images/avatar1.jpg';\nimport iconPost from '../../assets/images/icon/post.svg';\nimport iconLike from '../../assets/images/icon/like.svg';\n// import iconMessage from '../../assets/images/icon/message.svg';\n// import iconNotice from '../../assets/images/icon/notice.svg';\n\n//@ testing http photos\n// const testBk =\n//   'https://images.unsplash.com/photo-1497290756760-23ac55edf36f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=987&q=80';\n\nconst ProfileMiniCard = ({\n  id,\n  account,\n  name,\n  avatar,\n  banner,\n  handleClickCard,\n}) => {\n  return (\n    <>\n      <div\n        className='profile-mini-card'\n        onClick={() => {\n          handleClickCard?.(id);\n        }}\n      >\n        <UserBk bkUrl={banner} />\n        <UserAvatar\n          avatar={avatar}\n          onClick={() => {\n            handleClickCard?.(id);\n          }}\n        />\n        <div className='profile-info'>\n          <h5 className='user-name'>{name}</h5>\n          <p className='user-account'>@{account}</p>\n        </div>\n        <div className='user-tweet-info'>\n          <div className='user-card-post-count'>\n            <img src={iconPost} alt='post' className='icon-post' />\n            <span className='tweet-count'>1.5k</span>\n          </div>\n          <div className='user-card-like-count'>\n            <img src={iconLike} alt='like' className='icon-like' />\n            <span className='tweet-count'>20k</span>\n          </div>\n        </div>\n        <div className='user-follow-info'>\n          <p>\n            34 個 <span>跟隨中</span>\n          </p>\n          <p>\n            59 位<span>跟隨者</span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileMiniCard;\n","import axios from 'axios';\n// const baseUrl = 'http://localhost:3004';\n\nconst baseUrl = 'https://calm-eyrie-50498.herokuapp.com/api';\n\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n});\n\n// Add a request interceptor - 讓api把token帶入\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    console.error(error);\n  }\n);\n\n//@目前admin/users還沒做好，目前先打一般users\nexport const getAllUsers = async () => {\n  try {\n    const res = await axiosInstance.get(`${baseUrl}/users`); //watch的屬性名作為path\n    // console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log('[Get Admin Users failed]:', error);\n  }\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import custom components\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderMain } from '../components/basic/Header';\nimport ProfileMiniCard from '../components/basic/ProfileMiniCard';\n//import api\nimport { getAllUsers } from '../api/admin';\n\nconst AdminUsers = () => {\n  const [allUsers, setAllUsers] = useState([]);\n  const navigate = useNavigate();\n\n  const handleClickCard = (id) => {\n    // alert('點擊');\n    // console.log(id);\n    if (id) {\n      navigate(`/user/${id}`); //@還沒搭配身份驗證會先跳出跑到login\n    }\n  };\n\n  //前面刷新資料\n  useEffect(() => {\n    const getAllUserAsync = async () => {\n      try {\n        const allUsers = await getAllUsers();\n        setAllUsers(allUsers);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllUserAsync();\n  }, []);\n\n  return (\n    <>\n      <ContainerColSec role='admin' pageIndex={1}>\n        <div className='section-outer-l col-10'>\n          <div className='section-main-l'>\n            <HeaderMain pageTitle='使用者列表' />\n            <div className='admin-user-wrapper'>\n              {allUsers.map((allUser) => {\n                return (\n                  <ProfileMiniCard\n                    key={allUser.id}\n                    {...allUser}\n                    handleClickCard={(id) => {\n                      handleClickCard?.(id);\n                    }}\n                  />\n                );\n              })}\n\n              {/* <ProfileMiniCard /> */}\n              {/* <ProfileMiniCard /> <ProfileMiniCard /> <ProfileMiniCard />\n              <ProfileMiniCard /> <ProfileMiniCard /> <ProfileMiniCard />\n              <ProfileMiniCard /> <ProfileMiniCard /> */}\n            </div>\n          </div>\n        </div>\n      </ContainerColSec>\n    </>\n  );\n};\n\nexport default AdminUsers;\n","export default __webpack_public_path__ + \"static/media/addphoto.2e797657.svg\";","import { useForm } from 'react-hook-form';\nimport { useRef, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import component\nimport ModalContent from './ModalContent';\nimport UserAvatar from './UserAvatar';\nimport UserBk from './UserBk';\nimport InputGroup from '../forms/InputGroup';\nimport { ModalHeaderIcon } from './ModalHeader';\n\nimport { getUserInfo, updateUserInfo } from '../../api/userinfo';\nimport { useAuth } from '../../components/context/AuthContext';\n\n//import svg\nimport iconCamera from '../../assets/images/icon/addphoto.svg';\nimport iconClose from '../../assets/images/icon/close.svg';\n\nconst defaultBk = 'https://i.imgur.com/ZFz8ZEI.png';\nconst defaultAvatar = 'https://i.imgur.com/V4RclNb.png';\n\nconst Modal = ({ setModalProOpen }) => {\n  const { isAuthentic, member } = useAuth(); // 取出需要的狀態與方法\n  const [profile, setProfile] = useState({\n    name: '',\n    introduction: '',\n    avatar: '',\n    banner: '',\n  });\n  const navigate = useNavigate();\n\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n    setValue,\n  } = useForm({\n    defaultValues: {\n      name: profile.name,\n      introduction: profile.introduction,\n      avatar: profile.avatar,\n      banner: profile.banner,\n    },\n  });\n\n  //@ 打 /api/users/id\n  const getUserInfoAsync = async () => {\n    try {\n      const profile = await getUserInfo(member.id);\n      if (profile) {\n        setProfile(profile);\n        setImageNewUrl_bk(profile.banner);\n        setImageNewUrl(profile.avatar);\n      }\n    } catch (error) {\n      console.error('[getUser Info  with Async failed]', error);\n    }\n  };\n\n  //儲存form\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    console.log('we get data', data);\n    // reset();\n    console.log(member.id);\n    try {\n      const addData = await updateUserInfo({\n        id: member.id,\n        data: data,\n      });\n      if (addData) {\n        setModalProOpen(false);\n      }\n      console.log({ addData });\n    } catch (error) {\n      console.error('[getUser Info  with Async failed]', error);\n    }\n  };\n\n  //upload photo\n  const uploadedImage = useRef(null);\n  const imageUploader = useRef(null);\n  const imageUploader_bk = useRef(null);\n  const [imageNewUrl, setImageNewUrl] = useState('');\n  const [imageNewUrl_bk, setImageNewUrl_bk] = useState('');\n\n  const handleImageUpload = (e) => {\n    console.log(e.target.className);\n    let curr_target = 'input-file-avatar';\n    if (e.target.className === 'input-file-bk') {\n      curr_target = 'input-file-bk';\n    }\n\n    const [file] = e.target.files;\n    if (file) {\n      const reader = new FileReader();\n      const { current } = uploadedImage;\n      current.file = file;\n      reader.onload = (e) => {\n        // current.src = e.target.result;\n        // console.log(current)\n        // console.log(e.target.class)\n        if (curr_target === 'input-file-avatar') {\n          setImageNewUrl(e.target.result);\n          //利用空的input可以用 react-hook-form傳出去\n          setValue('avatar', e.target.result);\n        } else if (curr_target === 'input-file-bk') {\n          console.log('bk-file');\n          setImageNewUrl_bk(e.target.result);\n          //利用空的input可以用 react-hook-form傳出去\n          setValue('banner', e.target.result);\n        }\n      };\n      // console.log(file)\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleImageDelete = (e) => {\n    alert('換回原本背景照片');\n    setImageNewUrl_bk(profile.banner ? profile.banner : defaultBk);\n    //新設要送出的form value\n    setValue('banner', profile.banner ? profile.banner : defaultBk);\n  };\n\n  //@ 首次載入profile\n  useEffect(() => {\n    getUserInfoAsync();\n  }, []);\n\n  // @ 首次載入因profile 帳號出不來form要reset\n  useEffect(() => {\n    reset({ ...profile });\n  }, [profile, reset]);\n\n  useEffect(() => {\n    if (!isAuthentic) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  console.log({ profile });\n\n  return (\n    <>\n      <ModalContent>\n        <ModalHeaderIcon\n          setModalProOpen={setModalProOpen}\n          onSubmit={onSubmit}\n        />\n        <div className='modal-content'>\n          <div className='profile-bk-wrapper'>\n            <UserBk bkUrl={imageNewUrl_bk} />\n            <img\n              alt='bk-camera'\n              src={iconCamera}\n              className='icon-camera'\n              ref={uploadedImage}\n              onClick={() => imageUploader_bk.current.click()}\n            />\n            <img\n              src={iconClose}\n              alt='icon of close button'\n              className='icon-close'\n              onClick={handleImageDelete}\n            />\n            <input\n              type='file'\n              accept='image/*'\n              onChange={handleImageUpload}\n              ref={imageUploader_bk}\n              className='input-file-bk'\n            />\n          </div>\n\n          <div className='avatar-edit-wrapper'>\n            <UserAvatar avatar={imageNewUrl} />\n            <img\n              alt='bbb'\n              src={iconCamera}\n              className='icon-camera'\n              ref={uploadedImage}\n              onClick={() => imageUploader.current.click()}\n            />\n\n            <input\n              type='file'\n              accept='image/*'\n              onChange={handleImageUpload}\n              ref={imageUploader}\n              className='input-file-avatar'\n            />\n          </div>\n\n          <form\n            className='modal-info-form'\n            id='hook-form'\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <div className='input-group-container'>\n              <InputGroup\n                name='name'\n                label='名稱'\n                type='text'\n                placeholder='請輸入帳號'\n                maxLength='50'\n                errors={errors}\n                register={register}\n                validationSchema={{\n                  required: 'name is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Please enter a minimum of 3 characters',\n                  },\n                }}\n                watch={watch}\n                // value={profile.name}\n                // required\n              />\n            </div>\n            <div className='textarea-group-container'>\n              <div className='textarea-group grow-wrap'>\n                <label>自我介紹</label>\n                <textarea\n                  type='textarea'\n                  id='introduction'\n                  name='introduction'\n                  {...register('introduction', {\n                    required: true,\n                    maxLength: 150,\n                  })}\n                  placeholder='有什麼新鮮事？'\n                  maxLength='30'\n                  className='desc-text-area'\n                  // value={profile.introduction || ''}\n                />\n              </div>\n              <div className='error-message-group'>\n                {errors.description &&\n                  errors.description.type === 'required' && (\n                    <span className='error'>This is required</span>\n                  )}\n                <span className='limit-num'>\n                  {watch('description') ? watch('description').length : '0'}/50\n                </span>\n              </div>\n            </div>\n\n            <input\n              type='text'\n              {...register('banner')}\n              style={{\n                display: 'none',\n              }}\n            />\n            <input\n              type='text'\n              {...register('avatar')}\n              style={{\n                display: 'none',\n              }}\n            />\n          </form>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport DayTime from \"../../helper/TimeHelper\";\nimport TweetIconCount from \"./TweetIconCount\";\nimport TweetUserName2 from \"./TweetUserName2\";\nimport UserAvatar from \"./UserAvatar\";\n\nconst TweetBigCard = ({tweetInfo,onClick})=>{\n  const id = tweetInfo.UserId\n  return (\n    <div className=\"TweetBigCard\">\n      <div className=\"TweetUserInfo\">\n        <div className=\"TweetUserInfo-head\">\n          <UserAvatar \n            avatar={tweetInfo.User.avatar}\n            onClick={({  userId }) => {\n              onClick?.({ userId });\n            }}\n            userId={id}\n          />\n          <TweetUserName2 \n            name={tweetInfo.User.name}\n            account={tweetInfo.User.account}\n          />\n        </div>\n        <p className='tweet-card-basic-description'>\n            {tweetInfo.description}\n        </p>\n        <p className=\"tweetDate\">{DayTime(tweetInfo.createdAt)}\n        </p>\n      </div>\n\n      <div className=\"TweetUserInfo\">\n          <span className=\"TweetUserInfo-replies\" >\n            34 <span>回覆</span>\n          </span>\n          <span className=\"TweetUserInfo-likes\">\n            808 <span>喜歡次數</span>\n          </span>\n      </div>\n      <div className=\"TweetUserInfo\">\n        <TweetIconCount id={tweetInfo.id}/>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default TweetBigCard;","import React from 'react';\nimport TweetUserName3 from './TweetUserName3';\nimport UserAvatar from './UserAvatar';\nconst TweetRepliesCard = ({ ...props }) => {\n  return (\n    <div className='tweet-card-basic'>\n      <UserAvatar \n      avatar={props.User.avatar}\n      userId={props.UserId} \n      onClick={({userId})=>{\n        props.onClick?.({userId})\n      }}\n      />\n      <div className='tweet-card-left-info'>\n        <TweetUserName3\n          name={props.User.name}\n          account={props.User.account}\n          time={props.createdAt}\n        />\n        <p className='tweet-card-basic-reply'>\n          回覆\n          <span className='reply-user-account'>@{props.account}</span>\n        </p>\n        <p className='tweet-card-basic-description'>{props.comment}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TweetRepliesCard;\n","import TweetRepliesCard from '../basic/TweetRepliesCard';\n\nconst TweetRepliesLists = ({tweetReplies,account,onClick}) => {\n\n  return (\n    <div className='TweetLists'>\n      {tweetReplies.map((tweet) => {\n        return (\n          <TweetRepliesCard\n            key={tweet.id}\n            {...tweet}\n            account={account}\n            onClick={({  userId }) => {\n              onClick?.({ userId });\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TweetRepliesLists;\n","import React from 'react';\nimport ContainerColSec from '../components/layout/ContainerColSec';\nimport { HeaderUser } from '../components/basic/Header';\nimport TweetBigCard from '../components/basic/TweetBigCard';\nimport { useEffect, useState } from 'react';\nimport { getTweet, getTweetReplies } from '../api/twitter';\nimport TweetRepliesList from '../components/user/TweetRepliesList';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ModalReply from '../components/basic/ModalReply';\nimport ModalTweet from '../components/basic/ModalTweet';\nimport FollowCardList from '../components/user/FollowCardList';\n\nconst TweetPage = ({ setModalTweetOpen }) => {\n  const [tweetInfo, setTweetInfo] = useState({\n    id: '',\n    UserId: '',\n    description: '',\n    createdAt: '',\n    User: {},\n  });\n  const [tweetReplies, setTweetReplies] = useState([]);\n  //這裡很奇怪只有他 要先設定一樣的結構\n  const { isAuthentic, member, modalReplyOpen, setTweetId, modalTweetOpen } =\n    useAuth();\n  const pathId = Number(useParams().id);\n  const navigate = useNavigate();\n  const handleClickCard = ({ userId }) => {\n    userId === member.id\n      ? navigate(`/user/${userId}`)\n      : userId !== undefined && navigate(`/other/${userId}`);\n  };\n\n  useEffect(() => {\n    const getTweetAsync = async () => {\n      try {\n        const data = await getTweet(pathId);\n        setTweetInfo(data);\n        setTweetId(pathId);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTweetAsync();\n  }, [pathId, modalTweetOpen]);\n\n  useEffect(() => {\n    const getTweetRepliesAsync = async () => {\n      try {\n        const data = await getTweetReplies(pathId);\n        setTweetReplies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTweetRepliesAsync();\n  }, [modalReplyOpen]);\n\n  return (\n    <ContainerColSec\n      role='user'\n      setModalTweetOpen={setModalTweetOpen}\n      pageIndex={0}\n      memberId={member?.id}\n    >\n      {modalTweetOpen && <ModalTweet />}\n      {modalReplyOpen && <ModalReply />}\n      <section className='section-outer-m col-7'>\n        <div className='section-main-m'>\n          <HeaderUser userAccountName='推文' />\n          <div className='TweetPage'>\n            <TweetBigCard tweetInfo={tweetInfo} onClick={handleClickCard} />\n            <TweetRepliesList\n              tweetReplies={tweetReplies}\n              account={tweetInfo.User.account}\n              onClick={handleClickCard}\n            />\n          </div>\n        </div>\n      </section>\n      <section className='section-right col-3'>\n        <FollowCardList setPathId={() => {}} />\n      </section>\n    </ContainerColSec>\n  );\n};\n\nexport default TweetPage;\n","import { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport InputGroup from './InputGroup';\n\nconst RegisterForm = () => {\n  // using react-form-hook-set-up\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    // 如果是只要給api\n    // 就在這設定 person,再給api,不需要setState\n    // const person = {\n    //   username: data.username,\n    //   password: data.password,\n    // };\n    if (data.username.length === 0) {\n      return;\n    }\n    if (data.password.length === 0) {\n      return;\n    }\n\n    console.log(data);\n    reset();\n  };\n\n  return (\n    <div className='formLayout register-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='input-group-container'>\n          <InputGroup\n            name='account'\n            label='帳號'\n            type='text'\n            placeholder='請輸入帳號'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'account is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n        <div className='input-group-container'>\n          <InputGroup\n            name='username'\n            label='名稱'\n            type='text'\n            placeholder='請輸入名稱'\n            maxLength='50'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'username is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter a minimum of 3 characters',\n              },\n            }}\n            watch={watch}\n            // required\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='email'\n            label='Email'\n            type='email'\n            placeholder='請輸入Email'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'email is required',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Entered value does not match email format',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='password'\n            label='密碼'\n            type='password'\n            placeholder='請輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n\n        <div className='input-group-container'>\n          <InputGroup\n            name='cpassword'\n            label='密碼再確認'\n            type='password'\n            placeholder='請再次輸入密碼'\n            errors={errors}\n            register={register}\n            validationSchema={{\n              //@ 確認密碼做法？ (還沒有試)\n              //https://www.positronx.io/add-confirm-password-validation-in-react-with-hook-form/\n              required: 'password is required',\n              minLength: {\n                value: 8,\n                message: 'Please enter a minimum of 8 characters',\n              },\n            }}\n            // required\n            watch={watch}\n          />\n        </div>\n        <div className='button-group-column'>\n          <button className='button-filled button-lg' type='submit'>\n            登入\n          </button>\n          <Link to='/login' className='button-link'>\n            取消\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\n\n// import svg\nimport iconLogo from '../assets/images/icon/logo.svg';\n\n// import custom components\nimport ContainerColOne from '../components/layout/ContainerColOne';\nimport RegisterForm from '../components/forms/RegisterForm';\nimport { useAuth } from '../components/context/AuthContext';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegisterPage = () => {\n  const { isAuthentic } = useAuth();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    if (isAuthentic) {\n      navigation('/main');\n    }\n  }, [navigation, isAuthentic]); //只要isAuthentic或navigation有變化便執行\n\n  return (\n    <>\n      <ContainerColOne>\n        <div className='login-container col-4 flex_col_cc'>\n          <div className='page-logo'>\n            <img\n              src={iconLogo}\n              alt='Alphitter Icon'\n              className='icon-logo cursor-point'\n            />\n          </div>\n          <h3 className='page-title'>建立你的帳號</h3>\n          <RegisterForm />\n        </div>\n      </ContainerColOne>\n    </>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n  // BrowserRouter as Router,\n  // Link,\n  Routes,\n  Route,\n  HashRouter,\n} from 'react-router-dom';\n\n//import css\nimport './scss/main.scss';\n\n// import component\nimport PageLayout from './components/layout/PageLayout';\n\n// import HomePage from './pages/HomePage';\nimport NestedUserPage from './pages/main/NestedUserPage';\nimport LoginPage from './pages/LoginPage';\nimport StoryBookPage from './pages/storybooks/StoryBookPage';\n// import AdminLoginPage from './pages/AdminLoginPage';\nimport AdminPage from './pages/AdminPage';\nimport SettingPage from './pages/SettingPage';\nimport UserPage from './pages/UserPage';\nimport UserOtherPage from './pages/UserOtherPage';\nimport UserFollowersPage from './pages/UserFollowersPage';\nimport MainPage from './pages/MainPage';\nimport AdminUsers from './pages/AdminUsers';\nimport Modal from './components/basic/Modal';\n// import ModalTweet from './components/basic/ModalTweet';\nimport ModalReply from './components/basic/ModalReply';\nimport TweetPage from './pages/TweetPage';\nimport RegisterPage from './pages/RegisterPage';\nimport { AuthProvider, useAuth } from './components/context/AuthContext';\n\nfunction App({ router }) {\n  const [modalProOpen, setModalProOpen] = useState(false);\n  // const [modalTweetOpen, setModalTweetOpen] = useState(false);\n\n  return (\n    <>\n      <HashRouter>\n        <AuthProvider>\n          <PageLayout>\n            <Routes>\n              <Route path='*' element={<LoginPage />}></Route>\n              <Route path='/storybook' element={<StoryBookPage />}></Route>\n              <Route path='/login' element={<LoginPage />}></Route>\n              {/* <Route path='/login/admin' element={<AdminLoginPage />}></Route> */}\n              <Route path='/login/admin' element={<AdminPage />}></Route>\n              <Route path='/register' element={<RegisterPage />}></Route>\n              <Route path='/main' element={<MainPage />}></Route>\n              <Route\n                path='/user/:id'\n                element={<UserPage setModalProOpen={setModalProOpen} />}\n              ></Route>\n              <Route\n                path='/other/:id'\n                element={<UserOtherPage setModalProOpen={setModalProOpen} />}\n              ></Route>\n\n              <Route\n                path='/user/followers'\n                element={\n                  <UserFollowersPage setModalProOpen={setModalProOpen} />\n                }\n              ></Route>\n\n              <Route path='/main/tweet/:id' element={<TweetPage />}></Route>\n              <Route path='/setting' element={<SettingPage />}></Route>\n              <Route path='/admin/users' element={<AdminUsers />}></Route>\n              <Route path='/main/self2' element={<NestedUserPage />}></Route>\n            </Routes>\n            {/* {modalTweetOpen && (\n              <ModalTweet setModalTweetOpen={setModalTweetOpen} />\n            )} */}\n            {modalProOpen && <Modal setModalProOpen={setModalProOpen} />}\n          </PageLayout>\n        </AuthProvider>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}